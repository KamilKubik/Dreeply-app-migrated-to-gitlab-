{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useEffect, useRef } from 'react';\n\nconst ChartJsComponent = ({\n  field\n}) => {\n  const chartRef = useRef();\n  const colors = field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' ? ['rgba(205,220,57,1)', 'rgba(255,235,59,1)', 'rgba(255,193,7,1)', 'rgba(255,152,0,1)', 'rgba(255,87,34,1)', 'rgba(244,67,54,1)', 'rgba(233,30,99,1)', 'rgba(156,39,176,1)', 'rgba(103,58,183,1)', 'rgba(63,81,181,1)', 'rgba(96,125,139,1)', 'rgba(121,85,72,1)'] : field.chartType == 'Line chart' || field.chartType == 'Area chart' ? 'rgba(255,185,0 ,1 )' : ['rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )'];\n  const colors1 = field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' ? ['rgba(205,220,57,1)', 'rgba(255,235,59,1)', 'rgba(255,193,7,1)', 'rgba(255,152,0,1)', 'rgba(255,87,34,1)', 'rgba(244,67,54,1)', 'rgba(233,30,99,1)', 'rgba(156,39,176,1)', 'rgba(103,58,183,1)', 'rgba(63,81,181,1)', 'rgba(96,125,139,1)', 'rgba(121,85,72,1)'] : field.chartType == 'Line chart' || field.chartType == 'Area chart' ? 'rgba(0,204,106 ,1 )' : ['rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )'];\n  const colors2 = field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' ? ['rgba(205,220,57,1)', 'rgba(255,235,59,1)', 'rgba(255,193,7,1)', 'rgba(255,152,0,1)', 'rgba(255,87,34,1)', 'rgba(244,67,54,1)', 'rgba(233,30,99,1)', 'rgba(156,39,176,1)', 'rgba(103,58,183,1)', 'rgba(63,81,181,1)', 'rgba(96,125,139,1)', 'rgba(121,85,72,1)'] : field.chartType == 'Line chart' || field.chartType == 'Area chart' ? 'rgba(0,120,215 ,1 )' : ['rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )'];\n  const colors3 = field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' ? ['rgba(205,220,57,1)', 'rgba(255,235,59,1)', 'rgba(255,193,7,1)', 'rgba(255,152,0,1)', 'rgba(255,87,34,1)', 'rgba(244,67,54,1)', 'rgba(233,30,99,1)', 'rgba(156,39,176,1)', 'rgba(103,58,183,1)', 'rgba(63,81,181,1)', 'rgba(96,125,139,1)', 'rgba(121,85,72,1)'] : field.chartType == 'Line chart' || field.chartType == 'Area chart' ? 'rgba(231,72,86 ,1 )' : ['rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )'];\n  const colors4 = field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' ? ['rgba(205,220,57,1)', 'rgba(255,235,59,1)', 'rgba(255,193,7,1)', 'rgba(255,152,0,1)', 'rgba(255,87,34,1)', 'rgba(244,67,54,1)', 'rgba(233,30,99,1)', 'rgba(156,39,176,1)', 'rgba(103,58,183,1)', 'rgba(63,81,181,1)', 'rgba(96,125,139,1)', 'rgba(121,85,72,1)'] : field.chartType == 'Line chart' || field.chartType == 'Area chart' ? 'rgba(126,115,95 ,1 )' : ['rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )'];\n  const colors5 = field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' ? ['rgba(205,220,57,1)', 'rgba(255,235,59,1)', 'rgba(255,193,7,1)', 'rgba(255,152,0,1)', 'rgba(255,87,34,1)', 'rgba(244,67,54,1)', 'rgba(233,30,99,1)', 'rgba(156,39,176,1)', 'rgba(103,58,183,1)', 'rgba(63,81,181,1)', 'rgba(96,125,139,1)', 'rgba(121,85,72,1)'] : field.chartType == 'Line chart' || field.chartType == 'Area chart' ? 'rgba(177,70,194 ,1 )' : ['rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )'];\n  const data = {\n    labels: field.labels && [...field.labels.map(label => {\n      if (label !== '') {\n        return label;\n      } else {\n        return '';\n      }\n    })],\n    datasets: [// Dataset1\n    {\n      label: field.dataset1Label && field.dataset1Label,\n      data: field.dataset1 && field.dataset1.map(data => {\n        if (data !== '') {\n          return data;\n        }\n      }),\n      backgroundColor: colors,\n      borderWidth: field.chartType == 'Area chart' ? 0 : field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' && 2\n    }, // Dataset2\n    {\n      label: field.dataset2Label && field.dataset2Label,\n      data: field.dataset2 && field.dataset2.map(data => {\n        if (data !== '') {\n          return data;\n        }\n      }),\n      backgroundColor: colors1,\n      borderWidth: field.chartType == 'Area chart' ? 0 : field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' && 2\n    }, // Dataset3\n    {\n      label: field.dataset3Label && field.dataset3Label,\n      data: field.dataset3 && field.dataset3.map(data => {\n        if (data !== '') {\n          return data;\n        }\n      }),\n      backgroundColor: colors2,\n      borderWidth: field.chartType == 'Area chart' ? 0 : field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' && 2\n    }, // Dataset4\n    {\n      label: field.dataset4Label && field.dataset4Label,\n      data: field.dataset4 && field.dataset4.map(data => {\n        if (data !== '') {\n          return data;\n        }\n      }),\n      backgroundColor: colors3,\n      borderWidth: field.chartType == 'Area chart' ? 0 : field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' && 2\n    }, // Dataset5\n    {\n      label: field.dataset5Label && field.dataset5Label,\n      data: field.dataset5 && field.dataset5.map(data => {\n        if (data !== '') {\n          return data;\n        }\n      }),\n      backgroundColor: colors4,\n      borderWidth: field.chartType == 'Area chart' ? 0 : field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' && 2\n    }, // Dataset6\n    {\n      label: field.dataset6Label && field.dataset6Label,\n      data: field.dataset6 && field.dataset6.map(data => {\n        if (data !== '') {\n          return data;\n        }\n      }),\n      backgroundColor: colors5,\n      borderWidth: field.chartType == 'Area chart' ? 0 : field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' && 2\n    }]\n  };\n  useEffect(async () => {\n    document.getElementById(`${field.index}chartContainer`).innerHTML = '&nbsp;';\n    document.getElementById(`${field.index}chartContainer`).innerHTML = `<canvas id=${field.index} ref=${chartRef}></canvas>`;\n    const myChartRef = document.getElementById(field.index).getContext('2d');\n    console.log(data.datasets);\n    const datas = data.datasets.map(dataset => {\n      console.log(dataset.data[0]);\n      const test1 = dataset.data.map(datases => {\n        if (datases !== undefined) {\n          return datases;\n        } else {\n          return '';\n        }\n      });\n      const test = test1.map((datarer, index) => {\n        if (data.labels[index] !== '') {\n          return datarer;\n        }\n      });\n      const test2 = test.filter(obj => obj !== undefined);\n      return test2;\n    });\n    const fill = field.chartType == 'Line chart' ? false : undefined;\n    const newDatasets = [{\n      label: data.datasets[0].label,\n      data: datas[0],\n      backgroundColor: data.datasets[0].backgroundColor,\n      borderColor: field.chartType == 'Line chart' ? 'rgba(255,185,0 ,1 )' : 'rgb(255, 255, 255)',\n      borderWidth: data.datasets[0].borderWidth,\n      fill: fill\n    }, {\n      label: data.datasets[1].label,\n      data: datas[1],\n      backgroundColor: data.datasets[1].backgroundColor,\n      borderColor: field.chartType == 'Line chart' ? 'rgba(0,204,106 ,1 )' : 'rgb(255, 255, 255)',\n      borderWidth: data.datasets[1].borderWidth,\n      fill: fill\n    }, {\n      label: data.datasets[2].label,\n      data: datas[2],\n      backgroundColor: data.datasets[2].backgroundColor,\n      borderColor: field.chartType == 'Line chart' ? 'rgba(0,120,215 ,1 )' : 'rgb(255, 255, 255)',\n      borderWidth: data.datasets[2].borderWidth,\n      fill: fill\n    }, {\n      label: data.datasets[3].label,\n      data: datas[3],\n      backgroundColor: data.datasets[3].backgroundColor,\n      borderColor: field.chartType == 'Line chart' ? 'rgba(231,72,86 ,1 )' : 'rgb(255, 255, 255)',\n      borderWidth: data.datasets[3].borderWidth,\n      fill: fill\n    }, {\n      label: data.datasets[4].label,\n      data: datas[4],\n      backgroundColor: data.datasets[4].backgroundColor,\n      borderColor: field.chartType == 'Line chart' ? 'rgba(126,115,95 ,1 )' : 'rgb(255, 255, 255)',\n      borderWidth: data.datasets[4].borderWidth,\n      fill: fill\n    }, {\n      label: data.datasets[5].label,\n      data: datas[5],\n      backgroundColor: data.datasets[5].backgroundColor,\n      borderColor: field.chartType == 'Line chart' ? 'rgba(177,70,194 ,1 )' : 'rgb(255, 255, 255)',\n      borderWidth: data.datasets[5].borderWidth,\n      fill: fill\n    }];\n    console.log(newDatasets);\n    const chartType = [field.chartType == 'Bar chart' ? 'bar' : '', field.chartType == 'Reverse chart' ? 'horizontalBar' : '', field.chartType == 'Line chart' ? 'line' : '', field.chartType == 'Pie chart' ? 'pie' : '', field.chartType == 'Doughnut chart' ? 'doughnut' : '', field.chartType == 'Area chart' ? 'line' : ''];\n    window.id = new Chart(myChartRef, {\n      type: chartType.filter(type => type !== ''),\n      data: {\n        labels: data.labels.filter(label => label !== ''),\n        datasets: newDatasets.filter(dataset => dataset.label !== '')\n      },\n      options: {\n        skipNull: true,\n        responsive: true,\n        legend: {\n          position: 'bottom'\n        },\n        // defaultFontFamily: (Chart.defaults.global.defaultFontFamily =\n        //   'Comfortaa'),\n        scales: {\n          yAxes: [{\n            stacked: field.stacked == true ? true : false,\n            ticks: {\n              beginAtZero: true\n            }\n          }],\n          xAxes: [{\n            stacked: field.stacked == true ? true : false,\n            ticks: {\n              beginAtZero: true\n            }\n          }]\n        }\n      }\n    });\n  }, [data.labels, data.datasets, data]);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: \"w-full grid grid-cols-12fr justify-items-center items-center mt-6\",\n    children: /*#__PURE__*/_jsx(\"div\", {\n      id: `${field.index}container`,\n      className: \"col-start-2 col-end-12 relative flex flex-col h-full w-full flex px-8 py-8 rounded-2xl bg-white dark:bg-background\",\n      children: /*#__PURE__*/_jsx(\"div\", {\n        className: \"w-full h-full\",\n        children: /*#__PURE__*/_jsx(\"div\", {\n          id: `${field.index}chartContainer`\n        })\n      })\n    })\n  });\n};\n\nexport default ChartJsComponent;","map":null,"metadata":{},"sourceType":"module"}