{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\off-saas\\\\components\\\\dashboard\\\\startup\\\\project\\\\business-app\\\\Table.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport Image from 'next/image';\nimport gsap, { Linear } from 'gsap';\nimport debounce from '../../../../../utils/helpers';\nimport Router from 'next/router';\n\nconst TableElement = ({\n  currentIndex,\n  tableUpdate,\n  provided,\n  field,\n  deleteField\n}) => {\n  console.log(field);\n  const {\n    0: newField,\n    1: setNewField\n  } = useState();\n  useEffect(() => {\n    document.getElementById(`${field.index}container`) && document.getElementById(`${field.index}container`).addEventListener('mouseenter', () => {\n      gsap.to(document.getElementById(`${field.index}table`), {\n        height: 80,\n        marginTop: 10,\n        duration: 0.8,\n        transformOrigin: 'top',\n        ease: Linear\n      });\n    });\n    document.getElementById(`${field.index}container`) && document.getElementById(`${field.index}container`).addEventListener('mouseleave', () => {\n      gsap.to(document.getElementById(`${field.index}table`), {\n        height: 0,\n        marginTop: 0,\n        duration: 0.8,\n        transformOrigin: 'top',\n        ease: Linear\n      });\n    });\n  }, []);\n  useEffect(() => {\n    setNewField(field);\n  }, []);\n\n  const onRowDataChange = (data, rowIndex, rowDataIndex) => {\n    const newArray = [...newField.rows];\n    newArray[rowIndex].row[rowDataIndex] = data;\n    const updatedField = {\n      headRows: field.headRows,\n      rows: newArray,\n      index: field.index,\n      tableId: field.tableId,\n      type: 'table',\n      currentIndex\n    };\n    setNewField(updatedField); // Firebase update\n\n    databaseUpdate(updatedField);\n  };\n\n  const databaseUpdate = useCallback(debounce(async data => {\n    tableUpdate(data, data.currentIndex, field.tableId, field.index);\n  }, 500), []);\n\n  const onHeadRowDataChange = (data, headRowIndex) => {\n    console.log(data);\n    const newArray = [...newField.headRows];\n    newArray[headRowIndex] = data;\n    const updatedField = {\n      headRows: newArray,\n      rows: field.rows,\n      index: field.index,\n      tableId: field.tableId,\n      type: 'table',\n      currentIndex\n    };\n    setNewField(updatedField); // Firebase update\n\n    databaseUpdate(updatedField);\n  };\n\n  const onNewRowAdd = () => {\n    const newArray = [...newField.rows];\n    console.log(newArray);\n    const rowArray = [];\n    newField.headRows.map(headRow => rowArray.push(''));\n    newArray.push({\n      row: rowArray\n    });\n    const updatedField = {\n      headRows: field.headRows,\n      rows: newArray,\n      index: field.index,\n      tableId: field.tableId,\n      type: 'table',\n      currentIndex\n    };\n    setNewField(updatedField); // If empty, won't be updated to firebase\n\n    databaseUpdate(updatedField);\n  };\n\n  const onNewRowAboveAdd = () => {\n    const newArray = [...newField.rows];\n    const rowArray = [];\n    newField.headRows.map(headRow => rowArray.push(''));\n    newArray.unshift({\n      row: rowArray\n    });\n    const updatedField = {\n      headRows: field.headRows,\n      rows: newArray,\n      index: field.index,\n      tableId: field.tableId,\n      type: 'table',\n      currentIndex\n    };\n    setNewField(updatedField); // If empty, won't be updated to firebase\n\n    databaseUpdate(updatedField);\n  };\n\n  const onNewColumnAdd = () => {\n    const newArrayRows = [...newField.rows];\n    newArrayRows.map(row => {\n      console.log(row);\n      row.row.push('');\n    });\n    const newArrayHeadRows = [...newField.headRows];\n    newArrayHeadRows.push('');\n    const updatedField = {\n      headRows: newArrayHeadRows,\n      rows: newArrayRows,\n      index: field.index,\n      tableId: field.tableId,\n      type: 'table',\n      currentIndex\n    };\n    setNewField(updatedField); // Firebase update\n\n    databaseUpdate(updatedField);\n  };\n\n  const onNewColumnLeftAdd = () => {\n    const newArrayRows = [...newField.rows];\n    newArrayRows.map(row => {\n      row.row.unshift('');\n    });\n    const newArrayHeadRows = [...newField.headRows];\n    newArrayHeadRows.unshift('');\n    const updatedField = {\n      headRows: newArrayHeadRows,\n      rows: newArrayRows,\n      index: field.index,\n      tableId: field.tableId,\n      type: 'table',\n      currentIndex\n    };\n    setNewField(updatedField); // Firebase update\n\n    databaseUpdate(updatedField);\n  };\n\n  const onRowDelete = () => {\n    const newArray = [...newField.rows];\n    newArray.pop();\n    const updatedField = {\n      headRows: field.headRows,\n      rows: newArray,\n      index: field.index,\n      tableId: field.tableId,\n      type: 'table',\n      currentIndex\n    };\n    setNewField(updatedField); // If empty, won't be updated to firebase\n\n    databaseUpdate(updatedField);\n  };\n\n  const onRowAboveDelete = () => {\n    const newArray = [...newField.rows];\n    newArray.shift();\n    const updatedField = {\n      headRows: field.headRows,\n      rows: newArray,\n      index: field.index,\n      tableId: field.tableId,\n      type: 'table',\n      currentIndex\n    };\n    setNewField(updatedField); // If empty, won't be updated to firebase\n\n    databaseUpdate(updatedField);\n  };\n\n  const onColumnDelete = () => {\n    const newArrayRows = [...newField.rows];\n    newArrayRows.map(row => {\n      row.row.pop();\n    });\n    const newArrayHeadRows = [...newField.headRows];\n    newArrayHeadRows.pop();\n    const updatedField = {\n      headRows: newArrayHeadRows,\n      rows: newArrayRows,\n      index: field.index,\n      tableId: field.tableId,\n      type: 'table',\n      currentIndex\n    };\n    setNewField(updatedField); // Firebase update\n\n    databaseUpdate(updatedField);\n  };\n\n  const onColumnLeftDelete = () => {\n    const newArrayRows = [...newField.rows];\n    newArrayRows.map(row => {\n      row.row.shift();\n    });\n    const newArrayHeadRows = [...newField.headRows];\n    newArrayHeadRows.shift();\n    const updatedField = {\n      headRows: newArrayHeadRows,\n      rows: newArrayRows,\n      index: field.index,\n      tableId: field.tableId,\n      type: 'table',\n      currentIndex\n    };\n    setNewField(updatedField); // Firebase update\n\n    databaseUpdate(updatedField);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({\n    ref: provided.innerRef\n  }, provided.draggableProps), {}, {\n    className: \"w-full grid grid-cols-12fr justify-items-center items-center mt-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: `${field.index}container`,\n      className: \"col-start-2 col-end-12 relative flex flex-col h-full w-full flex px-8 py-8 rounded-2xl bg-white dark:bg-background\",\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table-element\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: newField && newField.headRows.map((row, headRowIndex) => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"w-full bg-primary text-background focus:outline-none\",\n                value: row,\n                onChange: e => onHeadRowDataChange(e.target.value, headRowIndex)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: newField && newField.rows.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: row.row.map((rowData, rowDataIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"w-full bg-white focus:outline-none border-l border-primarydark pl-1\",\n                value: rowData,\n                onChange: e => onRowDataChange(e.target.value, rowIndex, rowDataIndex)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: `${field.index}table`,\n        className: \"w-full overflow-hidden h-0 flex justify-between items-center gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-flow-row grid-rows-2fr h-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              onClick: onNewRowAdd,\n              className: \"cursor-pointer\",\n              src: `/table/row-add.svg`,\n              height: 22,\n              width: 22\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              onClick: onRowDelete,\n              className: \"cursor-pointer ml-2\",\n              src: `/table/remove1.svg`,\n              height: 26,\n              width: 26\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              onClick: onNewRowAboveAdd,\n              className: \"cursor-pointer\",\n              src: `/table/row-add-above.svg`,\n              height: 22,\n              width: 22\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              onClick: onRowAboveDelete,\n              className: \"cursor-pointer ml-2\",\n              src: `/table/remove1.svg`,\n              height: 26,\n              width: 26\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-flow-row grid-rows-2fr h-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              onClick: onNewColumnAdd,\n              className: \"cursor-pointer mr-2\",\n              src: `/table/column-add.svg`,\n              height: 22,\n              width: 22\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              onClick: onColumnDelete,\n              className: \"cursor-pointer\",\n              src: `/table/remove1.svg`,\n              height: 26,\n              width: 26\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              onClick: onNewColumnLeftAdd,\n              className: \"cursor-pointer mr-2\",\n              src: `/table/column-add-left.svg`,\n              height: 22,\n              width: 22\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              onClick: onColumnLeftDelete,\n              className: \"cursor-pointer\",\n              src: `/table/remove1.svg`,\n              height: 26,\n              width: 26\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-start-12 col-end-13 justify-self-center self-start flex flex-col flex-wrap gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        onClick: () => deleteField(field.index),\n        className: \"cursor-pointer\",\n        src: `/plan-bar/exit4.svg`,\n        height: 36,\n        width: 36\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Image, _objectSpread(_objectSpread({}, provided.dragHandleProps), {}, {\n        className: \"cursor-pointer mt-2\",\n        src: `/plan-bar/drag2.svg`,\n        height: 36,\n        width: 36\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 5\n  }, this);\n};\n\nexport default TableElement;","map":{"version":3,"sources":["C:/off-saas/components/dashboard/startup/project/business-app/Table.js"],"names":["React","useCallback","useEffect","useState","Image","gsap","Linear","debounce","Router","TableElement","currentIndex","tableUpdate","provided","field","deleteField","console","log","newField","setNewField","document","getElementById","index","addEventListener","to","height","marginTop","duration","transformOrigin","ease","onRowDataChange","data","rowIndex","rowDataIndex","newArray","rows","row","updatedField","headRows","tableId","type","databaseUpdate","onHeadRowDataChange","headRowIndex","onNewRowAdd","rowArray","map","headRow","push","onNewRowAboveAdd","unshift","onNewColumnAdd","newArrayRows","newArrayHeadRows","onNewColumnLeftAdd","onRowDelete","pop","onRowAboveDelete","shift","onColumnDelete","onColumnLeftDelete","innerRef","draggableProps","e","target","value","rowData","dragHandleProps"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\r\nimport Image from 'next/image';\r\nimport gsap, { Linear } from 'gsap';\r\nimport debounce from '../../../../../utils/helpers';\r\nimport Router from 'next/router';\r\n\r\nconst TableElement = ({ currentIndex, tableUpdate, provided, field, deleteField }) => {\r\n  console.log(field);\r\n  const [newField, setNewField] = useState();\r\n\r\n  useEffect(() => {\r\n    document.getElementById(`${field.index}container`) &&\r\n      document.getElementById(`${field.index}container`).addEventListener('mouseenter', () => {\r\n        gsap.to(document.getElementById(`${field.index}table`), {\r\n          height: 80,\r\n          marginTop: 10,\r\n          duration: 0.8,\r\n          transformOrigin: 'top',\r\n          ease: Linear,\r\n        });\r\n      });\r\n    document.getElementById(`${field.index}container`) &&\r\n      document.getElementById(`${field.index}container`).addEventListener('mouseleave', () => {\r\n        gsap.to(document.getElementById(`${field.index}table`), {\r\n          height: 0,\r\n          marginTop: 0,\r\n          duration: 0.8,\r\n          transformOrigin: 'top',\r\n          ease: Linear,\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setNewField(field);\r\n  }, []);\r\n\r\n  const onRowDataChange = (data, rowIndex, rowDataIndex) => {\r\n    const newArray = [...newField.rows];\r\n    newArray[rowIndex].row[rowDataIndex] = data;\r\n    const updatedField = {\r\n      headRows: field.headRows,\r\n      rows: newArray,\r\n      index: field.index,\r\n      tableId: field.tableId,\r\n      type: 'table',\r\n      currentIndex,\r\n    };\r\n    setNewField(updatedField);\r\n    // Firebase update\r\n    databaseUpdate(updatedField);\r\n  };\r\n\r\n  const databaseUpdate = useCallback(\r\n    debounce(async (data) => {\r\n      tableUpdate(data, data.currentIndex, field.tableId, field.index);\r\n    }, 500),\r\n    []\r\n  );\r\n\r\n  const onHeadRowDataChange = (data, headRowIndex) => {\r\n    console.log(data);\r\n    const newArray = [...newField.headRows];\r\n    newArray[headRowIndex] = data;\r\n    const updatedField = {\r\n      headRows: newArray,\r\n      rows: field.rows,\r\n      index: field.index,\r\n      tableId: field.tableId,\r\n      type: 'table',\r\n      currentIndex,\r\n    };\r\n    setNewField(updatedField);\r\n    // Firebase update\r\n    databaseUpdate(updatedField);\r\n  };\r\n\r\n  const onNewRowAdd = () => {\r\n    const newArray = [...newField.rows];\r\n    console.log(newArray);\r\n    const rowArray = [];\r\n    newField.headRows.map((headRow) => rowArray.push(''));\r\n    newArray.push({\r\n      row: rowArray,\r\n    });\r\n    const updatedField = {\r\n      headRows: field.headRows,\r\n      rows: newArray,\r\n      index: field.index,\r\n      tableId: field.tableId,\r\n      type: 'table',\r\n      currentIndex,\r\n    };\r\n    setNewField(updatedField);\r\n    // If empty, won't be updated to firebase\r\n    databaseUpdate(updatedField);\r\n  };\r\n\r\n  const onNewRowAboveAdd = () => {\r\n    const newArray = [...newField.rows];\r\n    const rowArray = [];\r\n    newField.headRows.map((headRow) => rowArray.push(''));\r\n    newArray.unshift({\r\n      row: rowArray,\r\n    });\r\n    const updatedField = {\r\n      headRows: field.headRows,\r\n      rows: newArray,\r\n      index: field.index,\r\n      tableId: field.tableId,\r\n      type: 'table',\r\n      currentIndex,\r\n    };\r\n    setNewField(updatedField);\r\n    // If empty, won't be updated to firebase\r\n    databaseUpdate(updatedField);\r\n  };\r\n\r\n  const onNewColumnAdd = () => {\r\n    const newArrayRows = [...newField.rows];\r\n    newArrayRows.map((row) => {\r\n      console.log(row);\r\n      row.row.push('');\r\n    });\r\n    const newArrayHeadRows = [...newField.headRows];\r\n    newArrayHeadRows.push('');\r\n    const updatedField = {\r\n      headRows: newArrayHeadRows,\r\n      rows: newArrayRows,\r\n      index: field.index,\r\n      tableId: field.tableId,\r\n      type: 'table',\r\n      currentIndex,\r\n    };\r\n    setNewField(updatedField);\r\n    // Firebase update\r\n    databaseUpdate(updatedField);\r\n  };\r\n\r\n  const onNewColumnLeftAdd = () => {\r\n    const newArrayRows = [...newField.rows];\r\n    newArrayRows.map((row) => {\r\n      row.row.unshift('');\r\n    });\r\n    const newArrayHeadRows = [...newField.headRows];\r\n    newArrayHeadRows.unshift('');\r\n    const updatedField = {\r\n      headRows: newArrayHeadRows,\r\n      rows: newArrayRows,\r\n      index: field.index,\r\n      tableId: field.tableId,\r\n      type: 'table',\r\n      currentIndex,\r\n    };\r\n    setNewField(updatedField);\r\n    // Firebase update\r\n    databaseUpdate(updatedField);\r\n  };\r\n\r\n  const onRowDelete = () => {\r\n    const newArray = [...newField.rows];\r\n    newArray.pop();\r\n    const updatedField = {\r\n      headRows: field.headRows,\r\n      rows: newArray,\r\n      index: field.index,\r\n      tableId: field.tableId,\r\n      type: 'table',\r\n      currentIndex,\r\n    };\r\n    setNewField(updatedField);\r\n    // If empty, won't be updated to firebase\r\n    databaseUpdate(updatedField);\r\n  };\r\n\r\n  const onRowAboveDelete = () => {\r\n    const newArray = [...newField.rows];\r\n    newArray.shift();\r\n    const updatedField = {\r\n      headRows: field.headRows,\r\n      rows: newArray,\r\n      index: field.index,\r\n      tableId: field.tableId,\r\n      type: 'table',\r\n      currentIndex,\r\n    };\r\n    setNewField(updatedField);\r\n    // If empty, won't be updated to firebase\r\n    databaseUpdate(updatedField);\r\n  };\r\n\r\n  const onColumnDelete = () => {\r\n    const newArrayRows = [...newField.rows];\r\n    newArrayRows.map((row) => {\r\n      row.row.pop();\r\n    });\r\n    const newArrayHeadRows = [...newField.headRows];\r\n    newArrayHeadRows.pop();\r\n    const updatedField = {\r\n      headRows: newArrayHeadRows,\r\n      rows: newArrayRows,\r\n      index: field.index,\r\n      tableId: field.tableId,\r\n      type: 'table',\r\n      currentIndex,\r\n    };\r\n    setNewField(updatedField);\r\n    // Firebase update\r\n    databaseUpdate(updatedField);\r\n  };\r\n\r\n  const onColumnLeftDelete = () => {\r\n    const newArrayRows = [...newField.rows];\r\n    newArrayRows.map((row) => {\r\n      row.row.shift();\r\n    });\r\n    const newArrayHeadRows = [...newField.headRows];\r\n    newArrayHeadRows.shift();\r\n    const updatedField = {\r\n      headRows: newArrayHeadRows,\r\n      rows: newArrayRows,\r\n      index: field.index,\r\n      tableId: field.tableId,\r\n      type: 'table',\r\n      currentIndex,\r\n    };\r\n    setNewField(updatedField);\r\n    // Firebase update\r\n    databaseUpdate(updatedField);\r\n  };\r\n\r\n  return (\r\n    <div ref={provided.innerRef} {...provided.draggableProps} className=\"w-full grid grid-cols-12fr justify-items-center items-center mt-6\">\r\n      <div\r\n        id={`${field.index}container`}\r\n        className=\"col-start-2 col-end-12 relative flex flex-col h-full w-full flex px-8 py-8 rounded-2xl bg-white dark:bg-background\"\r\n      >\r\n        <table className=\"table-element\">\r\n          <thead>\r\n            <tr>\r\n              {newField &&\r\n                newField.headRows.map((row, headRowIndex) => (\r\n                  <th>\r\n                    <input\r\n                      className=\"w-full bg-primary text-background focus:outline-none\"\r\n                      value={row}\r\n                      onChange={(e) => onHeadRowDataChange(e.target.value, headRowIndex)}\r\n                    />\r\n                  </th>\r\n                ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {newField &&\r\n              newField.rows.map((row, rowIndex) => (\r\n                <tr>\r\n                  {row.row.map((rowData, rowDataIndex) => (\r\n                    <td>\r\n                      <input\r\n                        className=\"w-full bg-white focus:outline-none border-l border-primarydark pl-1\"\r\n                        value={rowData}\r\n                        onChange={(e) => onRowDataChange(e.target.value, rowIndex, rowDataIndex)}\r\n                      />\r\n                    </td>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n          </tbody>\r\n        </table>\r\n        {/* <div id={`${field.index}table`} className='w-full overflow-auto h-0'></div> */}\r\n        <div id={`${field.index}table`} className=\"w-full overflow-hidden h-0 flex justify-between items-center gap-4\">\r\n          <div className=\"grid grid-flow-row grid-rows-2fr h-full\">\r\n            <div className=\"flex\">\r\n              <img onClick={onNewRowAdd} className=\"cursor-pointer\" src={`/table/row-add.svg`} height={22} width={22} />\r\n              <img onClick={onRowDelete} className=\"cursor-pointer ml-2\" src={`/table/remove1.svg`} height={26} width={26} />\r\n            </div>\r\n            <div className=\"flex\">\r\n              <img onClick={onNewRowAboveAdd} className=\"cursor-pointer\" src={`/table/row-add-above.svg`} height={22} width={22} />\r\n              <img onClick={onRowAboveDelete} className=\"cursor-pointer ml-2\" src={`/table/remove1.svg`} height={26} width={26} />\r\n            </div>\r\n          </div>\r\n          <div className=\"grid grid-flow-row grid-rows-2fr h-full\">\r\n            <div className=\"flex\">\r\n              <img onClick={onNewColumnAdd} className=\"cursor-pointer mr-2\" src={`/table/column-add.svg`} height={22} width={22} />\r\n              <img onClick={onColumnDelete} className=\"cursor-pointer\" src={`/table/remove1.svg`} height={26} width={26} />\r\n            </div>\r\n            <div className=\"flex\">\r\n              <img onClick={onNewColumnLeftAdd} className=\"cursor-pointer mr-2\" src={`/table/column-add-left.svg`} height={22} width={22} />\r\n              <img onClick={onColumnLeftDelete} className=\"cursor-pointer\" src={`/table/remove1.svg`} height={26} width={26} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-start-12 col-end-13 justify-self-center self-start flex flex-col flex-wrap gap-2\">\r\n        <Image onClick={() => deleteField(field.index)} className=\"cursor-pointer\" src={`/plan-bar/exit4.svg`} height={36} width={36} />\r\n        <Image {...provided.dragHandleProps} className=\"cursor-pointer mt-2\" src={`/plan-bar/drag2.svg`} height={36} width={36} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableElement;\r\n"]},"metadata":{},"sourceType":"module"}