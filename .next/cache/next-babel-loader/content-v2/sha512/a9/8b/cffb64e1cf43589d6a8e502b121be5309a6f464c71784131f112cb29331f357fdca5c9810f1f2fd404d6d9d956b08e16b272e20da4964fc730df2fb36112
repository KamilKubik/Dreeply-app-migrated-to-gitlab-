{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\off-saas\\\\components\\\\dashboard\\\\startup\\\\project\\\\business-app\\\\business-plan\\\\unique\\\\SectionEditor.js\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport dynamic from 'next/dynamic';\nconst ReactQuill = dynamic(() => import('react-quill'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('react-quill')],\n    modules: [\"..\\\\components\\\\dashboard\\\\startup\\\\project\\\\business-app\\\\business-plan\\\\unique\\\\SectionEditor.js -> \" + 'react-quill']\n  }\n});\nimport '../../../../../../../node_modules/react-quill/dist/quill.snow.css';\nimport '../../../../../../../node_modules/react-quill/dist/quill.bubble.css';\nimport '../../../../../../../node_modules/react-quill/dist/quill.core.css';\nimport gsap, { Power4, Linear } from 'gsap';\nimport UniqueHeader from './UniqueHeader';\nimport UniqueText from './UniqueText';\nimport UniqueChart from './UniqueChart'; // import HeaderComponent from './Header';\n// import TextElement from './Text';\n// import TableElement from './Table';\n// import SpacingElement from './Spacing';\n\nconst EditorInputElement = ({\n  selectedSection\n}) => {\n  console.log(selectedSection);\n  const {\n    0: title,\n    1: setTitle\n  } = useState(''); //   useEffect(() => {\n  //     setCurrentIndex(null);\n  //     // selectedSection.fields możesz wyrzucić\n  //   }, [selectedSection.id, selectedSection.fields]);\n\n  useEffect(() => {\n    // if (selectedSection.id !== id) {\n    //   setTitle(selectedSection.title);\n    // }\n    setTitle(selectedSection.title);\n  }, [selectedSection]);\n  const containerRef = useRef();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative flex flex-col h-full w-full flex px-2 py-2 rounded-2xl bg-white dark:bg-background mt-1\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full px-3 bg-white py-3 rounded-2xl flex items-center justify-between\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"text-lg bg-white focus:outline-none w-3/5 text-primarydark\",\n            placeholder: \"Section title...\",\n            value: title ? title : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full flex justify-center items-center flex-col\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), selectedSection && selectedSection.fields.map(field => {\n      return field.type == 'text' && /*#__PURE__*/_jsxDEV(UniqueText // fieldUpdate={fieldUpdate}\n      // currentIndex={currentIndex}\n      // selectedSection={selectedSection}\n      // provided={provided}\n      , {\n        field: field // deleteField={deleteField}\n        // setCurrentIndex={setCurrentIndex}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }, this) || field.type == 'chart' && /*#__PURE__*/_jsxDEV(UniqueChart, {\n        field: field // selectedSection={selectedSection}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }, this) || field.type == 'header' && /*#__PURE__*/_jsxDEV(UniqueHeader // fieldUpdate={fieldUpdate}\n      // currentIndex={currentIndex}\n      // headerUpdate={headerUpdate}\n      // provided={provided}\n      // deleteField={deleteField}\n      , {\n        field: field\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }, this) || field.type == 'table' && /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }, this) || field.type == 'spacing' && /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 41\n      }, this);\n    })]\n  }, void 0, true);\n};\n\nexport default EditorInputElement;","map":{"version":3,"sources":["C:/off-saas/components/dashboard/startup/project/business-app/business-plan/unique/SectionEditor.js"],"names":["React","useEffect","useRef","useState","dynamic","ReactQuill","ssr","gsap","Power4","Linear","UniqueHeader","UniqueText","UniqueChart","EditorInputElement","selectedSection","console","log","title","setTitle","containerRef","fields","map","field","type"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,MAAMC,UAAU,GAAGD,OAAO,CAAC,MAAM,OAAO,aAAP,CAAP,EAA8B;AAAEE,EAAAA,GAAG,EAAE,KAAP;AAAA;AAAA,wCAAhB,aAAgB;AAAA,yHAAhB,aAAgB;AAAA;AAAA,CAA9B,CAA1B;AACA,OAAO,mEAAP;AACA,OAAO,qEAAP;AACA,OAAO,mEAAP;AACA,OAAOC,IAAP,IAAeC,MAAf,EAAuBC,MAAvB,QAAqC,MAArC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB,C,CAEA;AACA;AACA;AACA;;AAEA,MAAMC,kBAAkB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAyB;AAClDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,eAAZ;AACA,QAAM;AAAA,OAACG,KAAD;AAAA,OAAQC;AAAR,MAAoBf,QAAQ,CAAC,EAAD,CAAlC,CAFkD,CAIlD;AACA;AACA;AACA;;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd;AACA;AACA;AACAiB,IAAAA,QAAQ,CAACJ,eAAe,CAACG,KAAjB,CAAR;AACD,GALQ,EAKN,CAACH,eAAD,CALM,CAAT;AAOA,QAAMK,YAAY,GAAGjB,MAAM,EAA3B;AAEA,sBACE;AAAA,4BAEE;AAAK,MAAA,SAAS,EAAC,kGAAf;AAAA,6BACE;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,yEAAf;AAAA,iCACE;AACE,YAAA,SAAS,EAAC,4DADZ;AAEE,YAAA,WAAW,EAAC,kBAFd;AAGE,YAAA,KAAK,EAAEe,KAAK,GAAGA,KAAH,GAAW;AAHzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAaE;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAbF,EAcGH,eAAe,IACdA,eAAe,CAACM,MAAhB,CAAuBC,GAAvB,CAA4BC,KAAD,IAAW;AACpC,aACGA,KAAK,CAACC,IAAN,IAAc,MAAd,iBACC,QAAC,UAAD,CACE;AACA;AACA;AACA;AAJF;AAKE,QAAA,KAAK,EAAED,KALT,CAME;AACA;;AAPF;AAAA;AAAA;AAAA;AAAA,cADF,IAWCA,KAAK,CAACC,IAAN,IAAc,OAAd,iBACC,QAAC,WAAD;AACE,QAAA,KAAK,EAAED,KADT,CAEE;;AAFF;AAAA;AAAA;AAAA;AAAA,cAZF,IAiBCA,KAAK,CAACC,IAAN,IAAc,QAAd,iBACC,QAAC,YAAD,CACE;AACA;AACA;AACA;AACA;AALF;AAME,QAAA,KAAK,EAAED;AANT;AAAA;AAAA;AAAA;AAAA,cAlBF,IA2BCA,KAAK,CAACC,IAAN,IAAc,OAAd,iBACC;AAAA;AAAA;AAAA;AAAA,cA5BF,IAoCCD,KAAK,CAACC,IAAN,IAAc,SAAd,iBAA2B;AAAA;AAAA;AAAA;AAAA,cArC9B;AAuCD,KAxCD,CAfJ;AAAA,kBADF;AAiJD,CAnKD;;AAqKA,eAAeV,kBAAf","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport dynamic from 'next/dynamic';\r\nconst ReactQuill = dynamic(() => import('react-quill'), { ssr: false });\r\nimport '../../../../../../../node_modules/react-quill/dist/quill.snow.css';\r\nimport '../../../../../../../node_modules/react-quill/dist/quill.bubble.css';\r\nimport '../../../../../../../node_modules/react-quill/dist/quill.core.css';\r\nimport gsap, { Power4, Linear } from 'gsap';\r\nimport UniqueHeader from './UniqueHeader';\r\nimport UniqueText from './UniqueText';\r\nimport UniqueChart from './UniqueChart';\r\n\r\n// import HeaderComponent from './Header';\r\n// import TextElement from './Text';\r\n// import TableElement from './Table';\r\n// import SpacingElement from './Spacing';\r\n\r\nconst EditorInputElement = ({ selectedSection }) => {\r\n  console.log(selectedSection);\r\n  const [title, setTitle] = useState('');\r\n\r\n  //   useEffect(() => {\r\n  //     setCurrentIndex(null);\r\n  //     // selectedSection.fields możesz wyrzucić\r\n  //   }, [selectedSection.id, selectedSection.fields]);\r\n\r\n  useEffect(() => {\r\n    // if (selectedSection.id !== id) {\r\n    //   setTitle(selectedSection.title);\r\n    // }\r\n    setTitle(selectedSection.title);\r\n  }, [selectedSection]);\r\n\r\n  const containerRef = useRef();\r\n\r\n  return (\r\n    <>\r\n      {/* <ChartComponent /> */}\r\n      <div className=\"relative flex flex-col h-full w-full flex px-2 py-2 rounded-2xl bg-white dark:bg-background mt-1\">\r\n        <div>\r\n          <div className=\"w-full px-3 bg-white py-3 rounded-2xl flex items-center justify-between\">\r\n            <input\r\n              className=\"text-lg bg-white focus:outline-none w-3/5 text-primarydark\"\r\n              placeholder=\"Section title...\"\r\n              value={title ? title : ''}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"w-full flex justify-center items-center flex-col\"></div>\r\n      {selectedSection &&\r\n        selectedSection.fields.map((field) => {\r\n          return (\r\n            (field.type == 'text' && (\r\n              <UniqueText\r\n                // fieldUpdate={fieldUpdate}\r\n                // currentIndex={currentIndex}\r\n                // selectedSection={selectedSection}\r\n                // provided={provided}\r\n                field={field}\r\n                // deleteField={deleteField}\r\n                // setCurrentIndex={setCurrentIndex}\r\n              />\r\n            )) ||\r\n            (field.type == 'chart' && (\r\n              <UniqueChart\r\n                field={field}\r\n                // selectedSection={selectedSection}\r\n              />\r\n            )) ||\r\n            (field.type == 'header' && (\r\n              <UniqueHeader\r\n                // fieldUpdate={fieldUpdate}\r\n                // currentIndex={currentIndex}\r\n                // headerUpdate={headerUpdate}\r\n                // provided={provided}\r\n                // deleteField={deleteField}\r\n                field={field}\r\n              />\r\n            )) ||\r\n            (field.type == 'table' && (\r\n              <div\r\n              // currentIndex={currentIndex}\r\n              // tableUpdate={tableUpdate}\r\n              // deleteField={deleteField}\r\n              // provided={provided}\r\n              // field={field}\r\n              />\r\n            )) ||\r\n            (field.type == 'spacing' && <div />)\r\n          );\r\n        })}\r\n      {/* <DragDropContext onDragEnd={handleOnDragEnd}>\r\n        <Droppable droppableId=\"elements\">\r\n          {(provided) => (\r\n            <div\r\n              className=\"elements\"\r\n              {...provided.droppableProps}\r\n              ref={provided.innerRef}\r\n              className=\"w-full flex justify-center items-center flex-col\"\r\n            >\r\n              {elementsArray &&\r\n                elementsArray.length !== 0 &&\r\n                elementsArray.map((field, currentIndex) => {\r\n                  console.log('FIELD --> ', field);\r\n                  return (\r\n                    <Draggable key={field.index} draggableId={field.index} index={currentIndex}>\r\n                      {(provided) =>\r\n                        (field.type == 'text' && (\r\n                          <TextElement\r\n                            fieldUpdate={fieldUpdate}\r\n                            currentIndex={currentIndex}\r\n                            selectedSection={selectedSection}\r\n                            provided={provided}\r\n                            field={field}\r\n                            deleteField={deleteField}\r\n                            setCurrentIndex={setCurrentIndex}\r\n                          />\r\n                        )) ||\r\n                        (field.type == 'chart' && (\r\n                          <ChartJsComponent\r\n                            provided={provided}\r\n                            projectId={projectId}\r\n                            addChart={addChart}\r\n                            chartTypeUpdate={chartTypeUpdate}\r\n                            currentIndex={currentIndex}\r\n                            deleteField={deleteField}\r\n                            containerRef={containerRef}\r\n                            datasetLabel6Update={datasetLabel6Update}\r\n                            datasetLabel5Update={datasetLabel5Update}\r\n                            datasetLabel4Update={datasetLabel4Update}\r\n                            datasetLabel3Update={datasetLabel3Update}\r\n                            datasetLabel2Update={datasetLabel2Update}\r\n                            datasetLabel1Update={datasetLabel1Update}\r\n                            dataset6Update={dataset6Update}\r\n                            dataset5Update={dataset5Update}\r\n                            dataset4Update={dataset4Update}\r\n                            dataset3Update={dataset3Update}\r\n                            dataset2Update={dataset2Update}\r\n                            dataset1Update={dataset1Update}\r\n                            labelUpdate={labelUpdate}\r\n                            chartLabelsUpdate={chartLabelsUpdate}\r\n                            field={field}\r\n                            selectedSection={selectedSection}\r\n                            index={field.index}\r\n                            chartValueUpdate={chartValueUpdate}\r\n                            selectedSection={selectedSection}\r\n                          />\r\n                        )) ||\r\n                        (field.type == 'header' && (\r\n                          <HeaderComponent\r\n                            fieldUpdate={fieldUpdate}\r\n                            currentIndex={currentIndex}\r\n                            headerUpdate={headerUpdate}\r\n                            provided={provided}\r\n                            deleteField={deleteField}\r\n                            field={field}\r\n                          />\r\n                        )) ||\r\n                        (field.type == 'table' && (\r\n                          <TableElement\r\n                            currentIndex={currentIndex}\r\n                            tableUpdate={tableUpdate}\r\n                            deleteField={deleteField}\r\n                            provided={provided}\r\n                            field={field}\r\n                          />\r\n                        )) ||\r\n                        (field.type == 'spacing' && <SpacingElement deleteField={deleteField} provided={provided} field={field} />)\r\n                      }\r\n                    </Draggable>\r\n                  );\r\n                })}\r\n              {provided.placeholder}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditorInputElement;\r\n"]},"metadata":{},"sourceType":"module"}