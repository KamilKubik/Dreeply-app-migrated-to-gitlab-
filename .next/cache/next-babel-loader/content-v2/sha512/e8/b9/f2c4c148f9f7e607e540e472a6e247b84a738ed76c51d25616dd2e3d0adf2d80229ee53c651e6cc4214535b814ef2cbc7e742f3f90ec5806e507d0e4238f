{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport Image from 'next/image';\nimport debounce from '../../../../../utils/helpers';\nimport dynamic from 'next/dynamic';\nconst ReactQuill = dynamic(() => import('react-quill'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('react-quill')],\n    modules: [\"..\\\\components\\\\dashboard\\\\startup\\\\project\\\\business-app\\\\Text.js -> \" + 'react-quill']\n  }\n}); // const Quill = dynamic(() => import('react-quill'), { ssr: false });\n// const Quill = dynamic(() =>\n//   import('react-quill').then(module => module.Quill)\n// );\n// const { Quill } = await import(\"react-quill\");\n// const QuillBetterTable = dynamic(() => import('quill-better-table'), { ssr: false });\n// Quill.register(\"modules/better-table\", QuillBetterTable);\n// const editorModules = {\n//   table: true, // disable table module\n//   \"better-table\": {\n//     operationMenu: {\n//       items: {\n//         unmergeCells: {\n//           text: \"Another unmerge cells name\"\n//         }\n//       }\n//     }\n//   },\n//   keyboard: {\n//     bindings: QuillBetterTable.keyboardBindings\n//   }\n// };\n\nconst TextElement = ({\n  fieldUpdate,\n  selectedSection,\n  currentIndex,\n  provided,\n  field,\n  deleteField,\n  setCurrentIndex\n}) => {\n  console.log('Field from text --> ', field);\n  const {\n    0: text,\n    1: setText\n  } = useState('');\n  useEffect(() => {\n    if (!text) {\n      setText(field.body);\n    }\n  }, [field]);\n\n  const updateBody = val => {\n    console.log('val --> ', val);\n    setText(val);\n    const value = {\n      // To może niekoniecznie\n      // id: selectedSection.id,\n      // title,\n      body: val,\n      index: field.index,\n      selSection: selectedSection,\n      currentIndex\n    };\n    update(value);\n  };\n\n  const update = useCallback(debounce(async value => {\n    // sectionUpdate(value.id, value); // TITLE UPDATE\n    console.log(value.selSection);\n    console.log(value);\n    const currentSectionIndex = await value.selSection.fields.findIndex(field => field.index == value.index);\n    console.log(currentSectionIndex == false);\n    console.log(currentSectionIndex !== -1);\n    console.log(currentSectionIndex); // CHYBA DZIAŁA, WSZYSTKO ZALEŻY OD RESETU ZA POMOCĄ setCurrentIndex\n    // if (currentSectionIndex !== -1) {\n\n    fieldUpdate(value, currentSectionIndex, value.currentIndex); // }\n    // const particularIndex = selectedSection.fields.findIndex((doc) => doc.index = value.index);\n  }, 500), []);\n  const modules = {\n    toolbar: [[{\n      header: [1, 2, false]\n    }], ['bold', 'italic', 'underline', 'strike'], [{\n      list: 'ordered'\n    }, {\n      list: 'bullet'\n    }], [{\n      align: ''\n    }, {\n      align: 'center'\n    }, {\n      align: 'right'\n    }, {\n      align: 'justify'\n    }], ['image'], ['clean']]\n  };\n  const formats = ['header', 'font', 'size', 'bold', 'italic', 'underline', 'strike', // 'blockquote',\n  'list', 'bullet', // 'indent',\n  'align', // 'link',\n  'image', 'video', 'code-block'];\n  return /*#__PURE__*/_jsxs(\"div\", _objectSpread(_objectSpread({\n    ref: provided.innerRef\n  }, provided.draggableProps), {}, {\n    className: \"w-full grid grid-cols-12fr justify-items-center items-center mt-6\",\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: \"col-start-2 col-end-12 relative flex flex-col h-full w-full flex px-8 py-8 rounded-2xl bg-white dark:bg-background\",\n      children: /*#__PURE__*/_jsx(ReactQuill // onKeyPress={() => setCurrentIndex(field.index)}\n      , {\n        modules: modules,\n        formats: formats,\n        onKeyUp: () => setCurrentIndex(field.index),\n        onKeyDown: () => setCurrentIndex(field.index),\n        onKeyPress: () => setCurrentIndex(field.index),\n        onFocus: () => setCurrentIndex(field.index),\n        onChangeSelection: () => setCurrentIndex(field.index),\n        className: \"bg-white rounded-2xl border-l-2 border-r-2 border-b-2 border-background\",\n        placeholder: \"Enter your text here\",\n        theme: \"snow\",\n        value: text,\n        onChange: updateBody\n      })\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"col-start-12 col-end-13 justify-self-center self-start flex flex-col flex-wrap gap-2\",\n      children: [/*#__PURE__*/_jsx(Image, {\n        onClick: () => deleteField(field.index),\n        className: \"cursor-pointer\",\n        src: `/plan-bar/exit4.svg`,\n        height: 36,\n        width: 36\n      }), /*#__PURE__*/_jsx(Image, _objectSpread(_objectSpread({}, provided.dragHandleProps), {}, {\n        className: \"cursor-pointer\",\n        src: `/plan-bar/drag2.svg`,\n        height: 36,\n        width: 36\n      }))]\n    })]\n  }));\n};\n\nexport default TextElement;","map":null,"metadata":{},"sourceType":"module"}