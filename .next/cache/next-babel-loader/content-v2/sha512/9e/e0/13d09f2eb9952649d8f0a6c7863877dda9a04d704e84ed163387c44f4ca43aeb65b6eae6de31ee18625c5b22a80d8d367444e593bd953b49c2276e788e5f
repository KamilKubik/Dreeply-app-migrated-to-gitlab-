{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\off-saas\\\\lib\\\\newAuth.js\";\nimport firebase, { auth, db } from '../lib/firebase';\nimport React, { useContext, createContext, useEffect, useState } from 'react';\nimport Cookies from 'js-cookie';\nimport { Router } from 'next/router';\nexport const AuthContext = /*#__PURE__*/createContext(); // Tutaj można umieścić default Value\n\nexport const useAuth = () => {\n  return useContext(AuthContext);\n};\nexport const AuthProvider = ({\n  children\n}) => {\n  const {\n    0: currentUser,\n    1: setCurrentUser\n  } = useState();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n\n  const handleUser = async user => {\n    if (user) {\n      // console.log('user - ', user);\n      // console.log('user name - ', name);\n      const formatedUser = await formatUser(user); // const decodedToken = await firebase.auth().currentUser.getIdTokenResult();\n      // console.log(decodedToken.claims.stripeRole);\n\n      db.collection('users').doc(user.uid).set({\n        formatedUser\n      }, {\n        merge: true\n      });\n      setCurrentUser(formatedUser); // Cookies.set('token', user.za, true);\n\n      Cookies.set('uid', user.uid);\n      setLoading(false);\n      return formatedUser;\n    } else {\n      setCurrentUser(false); // Cookies.remove('token', user.za);\n\n      Cookies.remove('uid');\n      setLoading(false);\n      return false;\n    }\n  };\n\n  const signUp = async (email, password) => {\n    return await auth.createUserWithEmailAndPassword(email, password).then(response => {\n      return handleUser(response.user);\n    });\n  };\n\n  const logIn = (email, password) => {\n    return auth.signInWithEmailAndPassword(email, password);\n  };\n\n  const logOut = () => {\n    return auth.signOut();\n  };\n\n  useEffect(() => {\n    const unsubscribe = auth.onIdTokenChanged(handleUser);\n    return () => unsubscribe();\n  }, []);\n  const value = {\n    currentUser,\n    signUp,\n    logIn,\n    logOut\n  };\n\n  const getStripeRole = async () => {\n    await firebase.auth().currentUser.getIdToken(true);\n    const decodedToken = await firebase.auth().currentUser.getIdTokenResult();\n    return decodedToken.claims.stripeRole || 'free';\n  };\n\n  const formatUser = async user => {\n    console.log('OFF - ', user);\n    const token = await user.getIdToken();\n    return {\n      uid: user.uid,\n      email: user.email,\n      // name,\n      // token: user.za, // token JWT, generowany automatycznie przez firebase przy zakładaniu konta\n      provider: user.providerData[0].providerId,\n      stripeRole: await getStripeRole(),\n      token\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 10\n  }, this);\n};","map":{"version":3,"sources":["C:/off-saas/lib/newAuth.js"],"names":["firebase","auth","db","React","useContext","createContext","useEffect","useState","Cookies","Router","AuthContext","useAuth","AuthProvider","children","currentUser","setCurrentUser","loading","setLoading","handleUser","user","formatedUser","formatUser","collection","doc","uid","set","merge","remove","signUp","email","password","createUserWithEmailAndPassword","then","response","logIn","signInWithEmailAndPassword","logOut","signOut","unsubscribe","onIdTokenChanged","value","getStripeRole","getIdToken","decodedToken","getIdTokenResult","claims","stripeRole","console","log","token","provider","providerData","providerId"],"mappings":"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","sourcesContent":["import firebase, { auth, db } from '../lib/firebase';\r\nimport React, { useContext, createContext, useEffect, useState } from 'react';\r\nimport Cookies from 'js-cookie';\r\nimport { Router } from 'next/router';\r\n\r\nexport const AuthContext = createContext(); // Tutaj można umieścić default Value\r\n\r\nexport const useAuth = () => {\r\n  return useContext(AuthContext);\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const handleUser = async (user) => {\r\n    if (user) {\r\n      // console.log('user - ', user);\r\n      // console.log('user name - ', name);\r\n      const formatedUser = await formatUser(user);\r\n\r\n      // const decodedToken = await firebase.auth().currentUser.getIdTokenResult();\r\n      // console.log(decodedToken.claims.stripeRole);\r\n\r\n      db.collection('users').doc(user.uid).set({ formatedUser }, { merge: true });\r\n\r\n      setCurrentUser(formatedUser);\r\n      // Cookies.set('token', user.za, true);\r\n      Cookies.set('uid', user.uid);\r\n\r\n      setLoading(false);\r\n      return formatedUser;\r\n    } else {\r\n      setCurrentUser(false);\r\n      // Cookies.remove('token', user.za);\r\n      Cookies.remove('uid');\r\n\r\n      setLoading(false);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const signUp = async (email, password) => {\r\n    return await auth.createUserWithEmailAndPassword(email, password).then((response) => {\r\n      return handleUser(response.user);\r\n    });\r\n  };\r\n\r\n  const logIn = (email, password) => {\r\n    return auth.signInWithEmailAndPassword(email, password);\r\n  };\r\n\r\n  const logOut = () => {\r\n    return auth.signOut();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onIdTokenChanged(handleUser);\r\n\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  const value = {\r\n    currentUser,\r\n    signUp,\r\n    logIn,\r\n    logOut,\r\n  };\r\n\r\n  const getStripeRole = async () => {\r\n    await firebase.auth().currentUser.getIdToken(true);\r\n    const decodedToken = await firebase.auth().currentUser.getIdTokenResult();\r\n    return decodedToken.claims.stripeRole || 'free';\r\n  };\r\n\r\n  const formatUser = async (user) => {\r\n    console.log('OFF - ', user);\r\n    const token = await user.getIdToken();\r\n    return {\r\n      uid: user.uid,\r\n      email: user.email,\r\n      // name,\r\n      // token: user.za, // token JWT, generowany automatycznie przez firebase przy zakładaniu konta\r\n      provider: user.providerData[0].providerId,\r\n      stripeRole: await getStripeRole(),\r\n      token,\r\n    };\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{!loading && children}</AuthContext.Provider>;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}