{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\off-saas\\\\components\\\\dashboard\\\\startup\\\\project\\\\business-plan\\\\SectionManager.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useMemo, useEffect } from 'react';\nimport Image from 'next/image';\nimport { sections } from '../../../../../utils/business-plan';\nimport useSWR, { mutate } from 'swr';\nimport firebase, { db } from '../../../../../lib/firebase';\nimport { useAuth } from '../../../../../lib/newAuth';\nimport { useRouter } from 'next/router';\nimport fetcher from '../../../../../utils/fetcher';\n\nconst SectionManager = ({\n  setSections1,\n  dataFromInput,\n  setDataFromInput,\n  activeSection,\n  setActiveSection\n}) => {\n  const {\n    0: sections,\n    1: setSections\n  } = useState();\n  const {\n    0: inputValue,\n    1: setInputValue\n  } = useState();\n  const {\n    0: projectId,\n    1: setProjectId\n  } = useState();\n  const {\n    currentUser\n  } = useAuth();\n  const router = useRouter();\n  const ref = db.collection('currentBusinessPlan');\n  useEffect(() => {\n    // PROJECT ID\n    const gcp = async () => {\n      await db.collection('projects').where('uid', '==', currentUser.uid).where('projectName', '==', router.query.project).get().then(querySnapshot => {\n        querySnapshot.forEach(doc => {\n          return setProjectId(doc.data().projectId);\n        });\n      });\n    };\n\n    gcp();\n    ref.where('uid', '==', currentUser.uid).onSnapshot(querySnapshot => {\n      const items = [];\n      querySnapshot.forEach(doc => {\n        items.push(...doc.data().sections);\n      });\n      setSections(items);\n    });\n  }, []); // const getProjectSections = () => {\n  //   const { data } = useSWR(\n  //     currentUser && projectId\n  //       ? [`/api/business-plan/${projectId}`, currentUser.token]\n  //       : null,\n  //     fetcher\n  //   );\n  //   useMemo(\n  //     () =>\n  //       data &&\n  //       data.map((project) => {\n  //         // useMemo jest po to, żeby nie było rerenderów (w sensie wyskakuje wtedy błąd, że za dużo renderowań)\n  //         setSections(project.sections);\n  //       }),\n  //     [data]\n  //   );\n  // };\n  // getProjectSections();\n\n  console.log('SECTIONS --> ', sections);\n\n  const onSectionAdd = async e => {\n    e.preventDefault();\n    sections.push({\n      name: inputValue\n    });\n    ref.doc(currentUser.uid).set({\n      sections\n    }, {\n      merge: true\n    }); // sections.push({ name: inputValue });\n    // await db.collection('currentBusinessPlan').doc(currentUser.uid).set({ sections }, { merge: true });\n    // console.log(sections);\n    // mutate([`/api/business-plan/${projectId}`, currentUser.token], sections);\n  };\n\n  const onSectionDelete = (e, name) => {\n    e.preventDefault();\n    console.log(name);\n    const newSections = sections.filter(section => section.name !== name);\n    console.log('NEW SECTIONS - ', newSections);\n    ref.doc(currentUser.uid).set({\n      sections: newSections\n    }, {\n      merge: true\n    });\n  };\n\n  useEffect(() => {\n    console.log(dataFromInput);\n  });\n  console.log('INPUT DATA --> ', dataFromInput);\n\n  const onSectionClick = async (e, namer) => {\n    e.preventDefault();\n\n    if (namer == activeSection) {\n      return;\n    } // UPDATE ALL DATA OF CURRENT SECTION(?)\n    // const dataToUpload = dataFromInput ? dataFromInput : { inputs: [] }\n\n\n    if (dataFromInput) {\n      await db.collection('currentBusinessPlan').doc(currentUser.uid).collection('data').doc(activeSection).update({\n        values: firebase.firestore.FieldValue.arrayUnion(_objectSpread({\n          id: 'e08855cc-fcbc-46a0-881c-c933d84bd962'\n        }, dataFromInput))\n      });\n    } // Nowa nazwa wybranej sekcji następuje po tym, jak dodamy data z aktualnego inputa, bo jak było przed tym, to data z inputa dodawało się do innej sekcji\n    // setSections1(null);\n\n\n    setActiveSection(namer); // Data input reset\n\n    setDataFromInput(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-start-7 col-end-9 mt-12\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"ml-4 text-primarydark text-base dark:text-background\",\n      children: \"Manage your sections\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full ml-4 mt-1 bg-white flex flex-col py-2 px-4 rounded-2xl\",\n      children: [sections && sections.map(section => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: e => onSectionClick(e, section.name),\n          className: \"h-10 bg-background mt-4 rounded-2xl flex justify-around items-center transform hover:scale-105 hover:-translate-y-1 hover:-translate-x-1 transition duration-500 ease-in-out cursor-pointer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-primarydark text-sm\",\n              children: section.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Image, {\n            onClick: e => onSectionDelete(e, section.name),\n            src: \"/business-model/delete.svg\",\n            height: 20,\n            width: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 17\n          }, this)]\n        }, section.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-10 mt-4 rounded-2xl flex justify-around items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => onSectionAdd(e),\n            className: \"hover:bg-primary hover:text-white dark:hover:bg-primarydark dark:hover:text-background focus:outline-none border border-primary text-primary dark:text-primarydark dark:border-primarydark text-sm font-light py-2 px-6 rounded-2xl\",\n            children: \"New section\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"border border-primarydark\",\n          type: \"text\",\n          value: inputValue,\n          onChange: e => setInputValue(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n\nexport default SectionManager;","map":{"version":3,"sources":["C:/off-saas/components/dashboard/startup/project/business-plan/SectionManager.js"],"names":["React","useState","useMemo","useEffect","Image","sections","useSWR","mutate","firebase","db","useAuth","useRouter","fetcher","SectionManager","setSections1","dataFromInput","setDataFromInput","activeSection","setActiveSection","setSections","inputValue","setInputValue","projectId","setProjectId","currentUser","router","ref","collection","gcp","where","uid","query","project","get","then","querySnapshot","forEach","doc","data","onSnapshot","items","push","console","log","onSectionAdd","e","preventDefault","name","set","merge","onSectionDelete","newSections","filter","section","onSectionClick","namer","update","values","firestore","FieldValue","arrayUnion","id","map","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useMemo, useEffect } from 'react';\r\nimport Image from 'next/image';\r\nimport { sections } from '../../../../../utils/business-plan';\r\nimport useSWR, { mutate } from 'swr';\r\nimport firebase, { db } from '../../../../../lib/firebase';\r\nimport { useAuth } from '../../../../../lib/newAuth';\r\nimport { useRouter } from 'next/router';\r\nimport fetcher from '../../../../../utils/fetcher';\r\n\r\nconst SectionManager = ({ setSections1, dataFromInput, setDataFromInput, activeSection, setActiveSection }) => {\r\n  const [sections, setSections] = useState();\r\n  const [inputValue, setInputValue] = useState();\r\n  const [projectId, setProjectId] = useState();\r\n\r\n  const { currentUser } = useAuth();\r\n  const router = useRouter();\r\n\r\n  const ref = db.collection('currentBusinessPlan');\r\n\r\n  useEffect(() => {\r\n    // PROJECT ID\r\n    const gcp = async () => {\r\n      await db\r\n        .collection('projects')\r\n        .where('uid', '==', currentUser.uid)\r\n        .where('projectName', '==', router.query.project)\r\n        .get()\r\n        .then((querySnapshot) => {\r\n          querySnapshot.forEach((doc) => {\r\n            return setProjectId(doc.data().projectId);\r\n          });\r\n        });\r\n    };\r\n    gcp();\r\n\r\n    ref.where('uid', '==', currentUser.uid).onSnapshot((querySnapshot) => {\r\n      const items = [];\r\n      querySnapshot.forEach((doc) => {\r\n        items.push(...doc.data().sections);\r\n      });\r\n      setSections(items);\r\n    });\r\n  }, []);\r\n\r\n  // const getProjectSections = () => {\r\n  //   const { data } = useSWR(\r\n  //     currentUser && projectId\r\n  //       ? [`/api/business-plan/${projectId}`, currentUser.token]\r\n  //       : null,\r\n  //     fetcher\r\n  //   );\r\n  //   useMemo(\r\n  //     () =>\r\n  //       data &&\r\n  //       data.map((project) => {\r\n  //         // useMemo jest po to, żeby nie było rerenderów (w sensie wyskakuje wtedy błąd, że za dużo renderowań)\r\n  //         setSections(project.sections);\r\n  //       }),\r\n  //     [data]\r\n  //   );\r\n  // };\r\n  // getProjectSections();\r\n\r\n  console.log('SECTIONS --> ', sections);\r\n\r\n  const onSectionAdd = async (e) => {\r\n    e.preventDefault();\r\n    sections.push({ name: inputValue });\r\n    ref.doc(currentUser.uid).set({ sections }, { merge: true });\r\n    // sections.push({ name: inputValue });\r\n    // await db.collection('currentBusinessPlan').doc(currentUser.uid).set({ sections }, { merge: true });\r\n    // console.log(sections);\r\n    // mutate([`/api/business-plan/${projectId}`, currentUser.token], sections);\r\n  };\r\n\r\n  const onSectionDelete = (e, name) => {\r\n    e.preventDefault();\r\n    console.log(name);\r\n    const newSections = sections.filter((section) => section.name !== name);\r\n    console.log('NEW SECTIONS - ', newSections);\r\n    ref.doc(currentUser.uid).set({ sections: newSections }, { merge: true });\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(dataFromInput);\r\n  });\r\n\r\n  console.log('INPUT DATA --> ', dataFromInput);\r\n\r\n  const onSectionClick = async (e, namer) => {\r\n    e.preventDefault();\r\n\r\n    if (namer == activeSection) {\r\n      return;\r\n    }\r\n\r\n    // UPDATE ALL DATA OF CURRENT SECTION(?)\r\n    // const dataToUpload = dataFromInput ? dataFromInput : { inputs: [] }\r\n    if (dataFromInput) {\r\n      await db\r\n        .collection('currentBusinessPlan')\r\n        .doc(currentUser.uid)\r\n        .collection('data')\r\n        .doc(activeSection)\r\n        .update({\r\n          values: firebase.firestore.FieldValue.arrayUnion({\r\n            id: 'e08855cc-fcbc-46a0-881c-c933d84bd962',\r\n            ...dataFromInput\r\n          })\r\n        });\r\n    }\r\n    // Nowa nazwa wybranej sekcji następuje po tym, jak dodamy data z aktualnego inputa, bo jak było przed tym, to data z inputa dodawało się do innej sekcji\r\n    // setSections1(null);\r\n    setActiveSection(namer);\r\n    // Data input reset\r\n    setDataFromInput(null);\r\n  };\r\n\r\n  return (\r\n    <div className='col-start-7 col-end-9 mt-12'>\r\n      <h1 className='ml-4 text-primarydark text-base dark:text-background'>\r\n        Manage your sections\r\n      </h1>\r\n      <div className='w-full ml-4 mt-1 bg-white flex flex-col py-2 px-4 rounded-2xl'>\r\n        {sections &&\r\n          sections.map((section) => {\r\n            return (\r\n              <div\r\n                onClick={(e) => onSectionClick(e, section.name)}\r\n                key={section.name}\r\n                className='h-10 bg-background mt-4 rounded-2xl flex justify-around items-center transform hover:scale-105 hover:-translate-y-1 hover:-translate-x-1 transition duration-500 ease-in-out cursor-pointer'\r\n              >\r\n                <div>\r\n                  <p className='text-primarydark text-sm'>{section.name}</p>\r\n                </div>\r\n                <Image\r\n                  onClick={(e) => onSectionDelete(e, section.name)}\r\n                  src='/business-model/delete.svg'\r\n                  height={20}\r\n                  width={20}\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n        <div className='h-10 mt-4 rounded-2xl flex justify-around items-center'>\r\n          <div>\r\n            <button\r\n              onClick={(e) => onSectionAdd(e)}\r\n              className='hover:bg-primary hover:text-white dark:hover:bg-primarydark dark:hover:text-background focus:outline-none border border-primary text-primary dark:text-primarydark dark:border-primarydark text-sm font-light py-2 px-6 rounded-2xl'\r\n            >\r\n              New section\r\n            </button>\r\n          </div>\r\n          <input\r\n            className='border border-primarydark'\r\n            type='text'\r\n            value={inputValue}\r\n            onChange={(e) => setInputValue(e.target.value)}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SectionManager;\r\n"]},"metadata":{},"sourceType":"module"}