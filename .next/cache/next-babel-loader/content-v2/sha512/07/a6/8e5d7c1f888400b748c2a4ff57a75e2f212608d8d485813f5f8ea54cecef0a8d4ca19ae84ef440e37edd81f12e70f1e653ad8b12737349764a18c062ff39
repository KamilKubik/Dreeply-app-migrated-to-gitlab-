{"ast":null,"code":"import _regeneratorRuntime from \"C:/off-saas/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/off-saas/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport Router from 'next/router';\nimport firebase, { db } from '../../../../../../../lib/firebase'; // Add new section\n\nexport var newSectionPage = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(title, sections, setSelectedSection, projectId) {\n    var section, newFromDB, newID, newSectionIndex;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            section = {\n              position: sections.length,\n              title: title,\n              body: ''\n            };\n            _context.next = 3;\n            return db.collection('projects').doc(projectId).collection('businessPlan').doc(Router.query.project).collection('inputs').add({\n              position: section.position,\n              title: section.title,\n              // body: section.body,\n              fields: [],\n              timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n              createdAt: new Date()\n            });\n\n          case 3:\n            newFromDB = _context.sent;\n            newID = newFromDB.id; // await this.setState({ sections: [...this.state.sections, section] });\n\n            newSectionIndex = sections.indexOf(sections.filter(function (_section) {\n              return _section.id === newID;\n            })[0]);\n            setSelectedSection(sections[newSectionIndex]);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function newSectionPage(_x, _x2, _x3, _x4) {\n    return _ref.apply(this, arguments);\n  };\n}(); // Select section\n\nexport var selectSectionPage = function selectSectionPage(section, index, setSelectedSection) {\n  return setSelectedSection(section);\n};","map":null,"metadata":{},"sourceType":"module"}