{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _taggedTemplateLiteral from \"C:/off-saas/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _toConsumableArray from \"C:/off-saas/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"C:/off-saas/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/off-saas/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:/off-saas/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/off-saas/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:/off-saas/node_modules/next/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:/off-saas/node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/off-saas/node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/off-saas/node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"C:/off-saas/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    position: absolute;\\n    top: 50%;\\n    left: 50%;\\n    transform: translate(-50%, -50%);\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, useEffect, useMemo, useState } from 'react';\nimport firebase, { db } from '../../../../../lib/firebase';\nimport { useAuth } from '../../../../../lib/newAuth';\nimport NavbarTemplate from '../../../NavbarTemplate';\nimport EditorInputElement from './Editor';\nimport SectionManager from './SectionManager';\nimport { useStateWithPromise } from '../../../../../utils/useStateWithPromise';\nimport { useCustomState } from '../../../../../utils/useCustomState';\nimport { v4 as uuidv4 } from 'uuid';\nimport ChartComponent from './Chart';\nimport PDFDocument from './PDFDocument';\nimport Image from 'next/image';\nimport gsap, { Linear } from 'gsap';\nimport Cookies from 'js-cookie';\nimport Router from 'next/router';\nimport ChartJsImage from 'chartjs-to-image';\nimport { isMobile } from 'react-device-detect';\nimport TippyMonster from '../../../Tippy';\nimport ExitComponent from '../../ExitComponent';\nimport ReactPDFDocument from './ReactPDFDocument';\nimport BounceLoaderComponent from '../../../../BounceLoader'; // Class based component\n\nvar BusinessPlanApp = /*#__PURE__*/function (_Component) {\n  _inherits(BusinessPlanApp, _Component);\n\n  var _super = _createSuper(BusinessPlanApp);\n\n  function BusinessPlanApp() {\n    var _this;\n\n    _classCallCheck(this, BusinessPlanApp);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var userUid;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              userUid = Cookies.get('uid'); // console.log(Router.query.project);\n\n              if (!(userUid && Router.query.project)) {\n                _context.next = 7;\n                break;\n              }\n\n              _context.next = 4;\n              return db.collection('projects').where('uid', '==', userUid).where('projectName', '==', Router.query.project).get().then(function (querySnapshot) {\n                console.log(querySnapshot);\n                var querySnap = querySnapshot.forEach(function (doc) {\n                  console.log(doc.data());\n                  var data = doc.data();\n                  return _this.setState({\n                    projectId: data.projectId,\n                    projectName: data.projectName,\n                    projectDescription: data.projectDescription,\n                    projectCountry: data.projectCountry,\n                    projectField: data.projectField,\n                    projectEmail: data.projectEmail,\n                    projectNumber: data.projectNumber,\n                    imageName: data.imageName,\n                    imageFileUrl: data.imageFileUrl\n                  });\n                });\n                console.log(querySnap);\n                return querySnap;\n              });\n\n            case 4:\n              console.log(_this.state.projectId);\n              _context.next = 7;\n              return db.collection('projects').doc(_this.state.projectId).collection('businessPlan').doc(Router.query.project).collection('inputs').onSnapshot(function (serverUpdate) {\n                var sections = serverUpdate.docs.map(function (_doc) {\n                  var data = _doc.data();\n\n                  data['id'] = _doc.id;\n                  return data;\n                });\n                console.log(sections); // sections.sort((a, b) => b.createdAt - a.createdAt);\n\n                sections.sort(function (a, b) {\n                  return a.position - b.position;\n                });\n\n                _this.setState({\n                  sections: sections\n                }); // Initial section\n\n\n                if (sections && sections.length !== 0 && !_this.state.selectedSection) {\n                  _this.setState({\n                    selectedSection: sections[0]\n                  });\n                }\n              });\n\n            case 7:\n              if (_this.exitImage.current) {\n                _this.exitImage.current.addEventListener('mouseenter', function () {\n                  gsap.to(_this.exitImage.current, {\n                    rotation: '180_cw',\n                    duration: 0.5,\n                    ease: Linear.easeIn\n                  });\n                });\n\n                _this.exitImage.current.addEventListener('mouseleave', function () {\n                  gsap.to(_this.exitImage.current, {\n                    rotation: '0_cw',\n                    duration: 0.5,\n                    ease: Linear.easeIn\n                  });\n                });\n              }\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"selectSectionPage\", function (section, index) {\n      return _this.setState({\n        selectedSectionIndex: index,\n        selectedSection: section\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"sectionTitleUpdate\", /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(title) {\n        var newSectionsArray;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                newSectionsArray = _toConsumableArray(_this.state.sections);\n                newSectionsArray[_this.state.selectedSectionIndex] = {\n                  // createdAt: this.state.selectedSection.createdAt,\n                  fields: _this.state.selectedSection.fields,\n                  // timestamp: this.state.selectedSection.timestamp,\n                  title: title,\n                  position: _this.state.selectedSection.position\n                };\n                _context2.next = 4;\n                return _this.setState({\n                  sections: newSectionsArray\n                });\n\n              case 4:\n                db.collection('projects').doc(_this.state.projectId).collection('businessPlan').doc(Router.query.project).collection('inputs').doc(_this.state.selectedSection.id).update({\n                  title: title\n                });\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"reorderElements\", /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(elements) {\n        var newSectionsArray, newSelectedSection;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                console.log(elements);\n                console.log(_this.state.selectedSection.id);\n                newSectionsArray = _toConsumableArray(_this.state.sections);\n                newSectionsArray[_this.state.selectedSectionIndex] = {\n                  // createdAt: this.state.selectedSection.createdAt,\n                  fields: elements,\n                  // timestamp: this.state.selectedSection.timestamp,\n                  title: _this.state.selectedSection.title,\n                  position: _this.state.selectedSection.position,\n                  id: _this.state.selectedSection.id\n                };\n                newSelectedSection = {\n                  // createdAt: this.state.selectedSection.createdAt,\n                  fields: elements,\n                  // timestamp: this.state.selectedSection.timestamp,\n                  title: _this.state.selectedSection.title,\n                  position: _this.state.selectedSection.position,\n                  id: _this.state.selectedSection.id\n                };\n                _context3.next = 7;\n                return _this.setState({\n                  sections: newSectionsArray\n                });\n\n              case 7:\n                _context3.next = 9;\n                return _this.setState({\n                  selectedSection: newSelectedSection\n                });\n\n              case 9:\n                db.collection('projects').doc(_this.state.projectId).collection('businessPlan').doc(Router.query.project).collection('inputs').doc(_this.state.selectedSection.id).update({\n                  fields: elements\n                });\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"reorderSections\", /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(sections) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                console.log(sections);\n                _context4.next = 3;\n                return sections.forEach(function (section, index) {\n                  db.collection('projects').doc(_this.state.projectId).collection('businessPlan').doc(Router.query.project).collection('inputs').doc(section.id).update({\n                    position: index\n                  });\n                });\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x3) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"deleteParticularField\", /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(index) {\n        var selectedSection, newFields, newSelectedSection;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                console.log(index);\n                selectedSection = _this.state.selectedSection;\n                console.log(selectedSection); // this.setState({ selectedSection: this.state.selectedSection.fields.filter((field) => index == field.index)})\n                // console.log(this.state.selectedSection.fields.filter((field) => index !== field.index));\n\n                newFields = _this.state.selectedSection.fields.filter(function (field) {\n                  return index !== field.index;\n                });\n                console.log(_this.state.selectedSection);\n                newSelectedSection = {\n                  // createdAt: this.state.selectedSection.createdAt,\n                  fields: newFields,\n                  // timestamp: selectedSection.timestamp,\n                  title: selectedSection.title,\n                  id: selectedSection.id\n                };\n                _context5.next = 8;\n                return db.collection('projects').doc(_this.state.projectId).collection('businessPlan').doc(Router.query.project).collection('inputs') // .collection('currentBusinessPlan')\n                // .doc('GrcvhyJwvlWVy31QsiudoQKdKI72')\n                // .collection('inputs')\n                .doc(selectedSection.id).update({\n                  fields: newFields\n                });\n\n              case 8:\n                _context5.next = 10;\n                return _this.setState({\n                  selectedSection: newSelectedSection\n                });\n\n              case 10:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function (_x4) {\n        return _ref5.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"addNewField\", /*#__PURE__*/function () {\n      var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(setCurrentIndex) {\n        var newArrayItem;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                newArrayItem = {\n                  // title: this.state.selectedSection.title,\n                  body: '',\n                  index: uuidv4(),\n                  type: 'text'\n                };\n                _context6.next = 3;\n                return db.collection('projects').doc(_this.state.projectId).collection('businessPlan').doc(Router.query.project).collection('inputs') // .collection('currentBusinessPlan')\n                // .doc('GrcvhyJwvlWVy31QsiudoQKdKI72')\n                // .collection('inputs')\n                .doc(_this.state.selectedSection.id).update({\n                  fields: firebase.firestore.FieldValue.arrayUnion(newArrayItem)\n                });\n\n              case 3:\n                console.log('SELECTED SECTION --> ', _this.state.selectedSection);\n                _context6.next = 6;\n                return _this.state.selectedSection.fields.push(newArrayItem);\n\n              case 6:\n                console.log(_this.state.selectedSection);\n                _context6.next = 9;\n                return _this.setState({\n                  selectedSection: _this.state.selectedSection\n                });\n\n              case 9:\n                console.log(_this.state.selectedSection); // To jest testowe, więc możesz to wyrzucić (03.04.2021 00:10)\n                // setCurrentIndex(null);\n\n              case 10:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      return function (_x5) {\n        return _ref6.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"addNewSpacing\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n      var newArrayItem;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              newArrayItem = {\n                // title: this.state.selectedSection.title,\n                index: uuidv4(),\n                type: 'spacing',\n                spacingId: uuidv4()\n              };\n              _context7.next = 3;\n              return db.collection('projects').doc(_this.state.projectId).collection('businessPlan').doc(Router.query.project).collection('inputs').doc(_this.state.selectedSection.id).update({\n                fields: firebase.firestore.FieldValue.arrayUnion(newArrayItem)\n              });\n\n            case 3:\n              _context7.next = 5;\n              return _this.state.selectedSection.fields.push(newArrayItem);\n\n            case 5:\n              _context7.next = 7;\n              return _this.setState({\n                selectedSection: _this.state.selectedSection\n              });\n\n            case 7:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"addNewChart\", /*#__PURE__*/function () {\n      var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(setCurrentIndex) {\n        var newArrayItem;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                newArrayItem = {\n                  // title: this.state.selectedSection.title,\n                  index: uuidv4(),\n                  type: 'chart',\n                  chartType: 'Bar chart',\n                  stacked: false,\n                  labels: ['', '', '', '', '', '', '', '', '', '', '', ''],\n                  dataset1Label: '',\n                  dataset2Label: '',\n                  dataset3Label: '',\n                  dataset4Label: '',\n                  dataset5Label: '',\n                  dataset6Label: '',\n                  dataset1: [],\n                  dataset2: [],\n                  dataset3: [],\n                  dataset4: [],\n                  dataset5: [],\n                  dataset6: [],\n                  chartId: uuidv4()\n                };\n                _context8.next = 3;\n                return db.collection('projects').doc(_this.state.projectId).collection('businessPlan').doc(Router.query.project).collection('inputs') // .collection('currentBusinessPlan')\n                // .doc('GrcvhyJwvlWVy31QsiudoQKdKI72')\n                // .collection('inputs')\n                .doc(_this.state.selectedSection.id).update({\n                  fields: firebase.firestore.FieldValue.arrayUnion(newArrayItem)\n                });\n\n              case 3:\n                console.log('SELECTED SECTION --> ', _this.state.selectedSection);\n                _context8.next = 6;\n                return _this.state.selectedSection.fields.push(newArrayItem);\n\n              case 6:\n                console.log(_this.state.selectedSection);\n                _context8.next = 9;\n                return _this.setState({\n                  selectedSection: _this.state.selectedSection\n                });\n\n              case 9:\n                console.log(_this.state.selectedSection); // To jest testowe, więc możesz to wyrzucić (03.04.2021 00:10)\n                // setCurrentIndex(null);\n\n              case 10:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }));\n\n      return function (_x6) {\n        return _ref8.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"addNewHeader\", /*#__PURE__*/function () {\n      var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(setCurrentIndex) {\n        var newArrayItem;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                newArrayItem = {\n                  text: '',\n                  index: uuidv4(),\n                  type: 'header'\n                };\n                _context9.next = 3;\n                return db.collection('projects').doc(_this.state.projectId).collection('businessPlan').doc(Router.query.project).collection('inputs') // .collection('currentBusinessPlan')\n                // .doc('GrcvhyJwvlWVy31QsiudoQKdKI72')\n                // .collection('inputs')\n                .doc(_this.state.selectedSection.id).update({\n                  fields: firebase.firestore.FieldValue.arrayUnion(newArrayItem)\n                });\n\n              case 3:\n                _context9.next = 5;\n                return _this.state.selectedSection.fields.push(newArrayItem);\n\n              case 5:\n                _context9.next = 7;\n                return _this.setState({\n                  selectedSection: _this.state.selectedSection\n                });\n\n              case 7:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9);\n      }));\n\n      return function (_x7) {\n        return _ref9.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"headerUpdate\", /*#__PURE__*/function () {\n      var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(title, index, currentIndex) {\n        var newFieldsArray, newSection;\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                console.log('Title --> ', title);\n                console.log(currentIndex);\n                newFieldsArray = _toConsumableArray(_this.state.selectedSection.fields);\n                newFieldsArray[currentIndex] = {\n                  title: title,\n                  index: index,\n                  type: 'header'\n                };\n                newSection = {\n                  title: _this.state.selectedSection.title,\n                  // createdAt: this.state.selectedSection.createdAt,\n                  fields: newFieldsArray,\n                  id: _this.state.selectedSection.id,\n                  position: _this.state.selectedSection.position\n                };\n                _context10.next = 7;\n                return _this.setState({\n                  selectedSection: newSection\n                });\n\n              case 7:\n                // Update database\n                db.collection('projects').doc(_this.state.projectId).collection('businessPlan').doc(Router.query.project).collection('inputs') // .collection('currentBusinessPlan')\n                //   .doc('GrcvhyJwvlWVy31QsiudoQKdKI72')\n                //   .collection('inputs')\n                .doc(_this.state.selectedSection.id).update({\n                  fields: newFieldsArray\n                });\n\n              case 8:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10);\n      }));\n\n      return function (_x8, _x9, _x10) {\n        return _ref10.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"fieldUpdate\", /*#__PURE__*/function () {\n      var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11(fieldObj, index, currentIndex) {\n        var objToUpdate, newFieldsArray, testSection;\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                console.log(fieldObj);\n                objToUpdate = {\n                  // title: fieldObj.title,\n                  body: fieldObj.body,\n                  index: fieldObj.index,\n                  type: 'text'\n                }; // console.log('SELECTED SECTION --> ', this.state.selectedSection);\n                // console.log('FILEOBJ --> ', fieldObj);\n                // if (index !== -1) {\n\n                newFieldsArray = _toConsumableArray(_this.state.selectedSection.fields);\n                console.log(newFieldsArray);\n                newFieldsArray[currentIndex] = objToUpdate; // TO JEST OFICJALNA TABLICA INPUTS, KTÓRĄ TRZEBA WRZUCIĆ DO FIREBASE'A !!!\n\n                console.log(newFieldsArray);\n                testSection = {\n                  title: _this.state.selectedSection.title,\n                  // createdAt: this.state.selectedSection.createdAt,\n                  fields: newFieldsArray,\n                  // id: id,\n                  id: _this.state.selectedSection.id\n                };\n                console.log('TEST SECTION --> ', testSection);\n                console.log('SELECTED SECTION --> ', _this.state.selectedSection);\n\n                _this.setState({\n                  selectedSection: testSection\n                }); // console.log(this.state.selectedSection.fields[index].body == fieldObj.body);\n                // Chodzi o to, że jakby po wybraniu nowego inputu (czyli po zmianie indexu), ten index zanim się zmieni, dalej pozostaje taki sam (zobacz że w linijce 298 i 299 są jakby zupełnie inne wartości)\n                // Nie patrz na to u góry !!! Jakby nie działało, to spróbuj odpalić to sprawdzenie pod spodem (na wypadek zbyt późnego wczytania się obecnego indexu)\n                // if (this.state.selectedSection.fields[index].body == fieldObj.body) {\n\n\n                _context11.next = 12;\n                return db.collection('projects').doc(_this.state.projectId).collection('businessPlan').doc(Router.query.project).collection('inputs') // .collection('currentBusinessPlan')\n                //   .doc('GrcvhyJwvlWVy31QsiudoQKdKI72')\n                //   .collection('inputs')\n                .doc(_this.state.selectedSection.id).update({\n                  fields: newFieldsArray\n                });\n\n              case 12:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11);\n      }));\n\n      return function (_x11, _x12, _x13) {\n        return _ref11.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"addNewTable\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12() {\n      var newArrayItem;\n      return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              newArrayItem = {\n                // title: this.state.selectedSection.title,\n                index: uuidv4(),\n                type: 'table',\n                tableId: uuidv4(),\n                headRows: ['Name', 'Surname', 'Age'],\n                rows: [{\n                  row: ['Kamil', 'Kubik', '32']\n                }, {\n                  row: ['Szymon', 'Kubik', '43']\n                }, {\n                  row: ['John', 'Kubik', '51']\n                }]\n              };\n              _context12.next = 3;\n              return db.collection('projects').doc(_this.state.projectId).collection('businessPlan').doc(Router.query.project).collection('inputs') // .collection('currentBusinessPlan')\n              // .doc('GrcvhyJwvlWVy31QsiudoQKdKI72')\n              // .collection('inputs')\n              .doc(_this.state.selectedSection.id).update({\n                fields: firebase.firestore.FieldValue.arrayUnion(newArrayItem)\n              });\n\n            case 3:\n              _context12.next = 5;\n              return _this.state.selectedSection.fields.push(newArrayItem);\n\n            case 5:\n              _context12.next = 7;\n              return _this.setState({\n                selectedSection: _this.state.selectedSection\n              });\n\n            case 7:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee12);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"tableUpdate\", /*#__PURE__*/function () {\n      var _ref13 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13(newArray, fieldIndex, tableId, index) {\n        var newFieldsArray, newSection;\n        return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                console.log(newArray);\n                newFieldsArray = _toConsumableArray(_this.state.selectedSection.fields);\n                newFieldsArray[fieldIndex] = newArray;\n                newSection = {\n                  title: _this.state.selectedSection.title,\n                  // createdAt: this.state.selectedSection.createdAt,\n                  fields: newFieldsArray,\n                  id: _this.state.selectedSection.id\n                };\n                _context13.next = 6;\n                return _this.setState({\n                  selectedSection: newSection\n                });\n\n              case 6:\n                // Update database\n                db.collection('projects').doc(_this.state.projectId).collection('businessPlan').doc(Router.query.project).collection('inputs') // .collection('currentBusinessPlan')\n                //   .doc('GrcvhyJwvlWVy31QsiudoQKdKI72')\n                //   .collection('inputs')\n                .doc(_this.state.selectedSection.id).update({\n                  fields: newFieldsArray\n                });\n\n              case 7:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13);\n      }));\n\n      return function (_x14, _x15, _x16, _x17) {\n        return _ref13.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"addChart\", /*#__PURE__*/function () {\n      var _ref14 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14(chart, currentSectionIndex, index, selectedSection) {\n        var newFieldsArray, newSection;\n        return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                console.log(currentSectionIndex); // Take current array copy\n\n                newFieldsArray = _toConsumableArray(_this.state.selectedSection.fields);\n                newFieldsArray[currentSectionIndex] = {\n                  chartId: selectedSection.chartId,\n                  chart: chart,\n                  index: index,\n                  type: 'chart',\n                  chartType: selectedSection.fields[currentSectionIndex].chartType,\n                  stacked: selectedSection.fields[currentSectionIndex].stacked,\n                  labels: selectedSection.fields[currentSectionIndex].labels,\n                  dataset1: selectedSection.fields[currentSectionIndex].dataset1,\n                  dataset2: selectedSection.fields[currentSectionIndex].dataset2,\n                  dataset3: selectedSection.fields[currentSectionIndex].dataset3,\n                  dataset4: selectedSection.fields[currentSectionIndex].dataset4,\n                  dataset5: selectedSection.fields[currentSectionIndex].dataset5,\n                  dataset6: selectedSection.fields[currentSectionIndex].dataset6,\n                  // Dataset labels\n                  dataset1Label: selectedSection.fields[currentSectionIndex].dataset1Label,\n                  dataset2Label: selectedSection.fields[currentSectionIndex].dataset2Label,\n                  dataset3Label: selectedSection.fields[currentSectionIndex].dataset3Label,\n                  dataset4Label: selectedSection.fields[currentSectionIndex].dataset4Label,\n                  dataset5Label: selectedSection.fields[currentSectionIndex].dataset5Label,\n                  dataset6Label: selectedSection.fields[currentSectionIndex].dataset6Label\n                };\n                newSection = {\n                  title: _this.state.selectedSection.title,\n                  // createdAt: this.state.selectedSection.createdAt,\n                  fields: newFieldsArray,\n                  id: _this.state.selectedSection.id\n                };\n                _context14.next = 6;\n                return _this.setState({\n                  selectedSection: newSection\n                });\n\n              case 6:\n                // Update database\n                db.collection('projects').doc(_this.state.projectId).collection('businessPlan').doc(Router.query.project).collection('inputs') // .collection('currentBusinessPlan')\n                //   .doc('GrcvhyJwvlWVy31QsiudoQKdKI72')\n                //   .collection('inputs')\n                .doc(_this.state.selectedSection.id).update({\n                  fields: newFieldsArray\n                });\n\n              case 7:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14);\n      }));\n\n      return function (_x18, _x19, _x20, _x21) {\n        return _ref14.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"chartLabelsUpdate\", /*#__PURE__*/function () {\n      var _ref15 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee15(data, index, currentSectionIndex, selectedSection) {\n        var newArrayObj, newObj, _newObj, _newObj2, _newObj3, _newObj4, _newObj5, _newObj6, _newObj7, _newObj8, _newObj9, _newObj10, _newObj11, newFieldsArray, newSection;\n\n        return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                console.log(selectedSection);\n                newArrayObj = [];\n\n                if (data.labelOne) {\n                  console.log('Label 1 --> ', data.label1);\n                  newObj = [data.label1 ? data.label1 : '', selectedSection.fields[currentSectionIndex].labels[1], selectedSection.fields[currentSectionIndex].labels[2], selectedSection.fields[currentSectionIndex].labels[3], selectedSection.fields[currentSectionIndex].labels[4], selectedSection.fields[currentSectionIndex].labels[5], selectedSection.fields[currentSectionIndex].labels[6], selectedSection.fields[currentSectionIndex].labels[7], selectedSection.fields[currentSectionIndex].labels[8], selectedSection.fields[currentSectionIndex].labels[9], selectedSection.fields[currentSectionIndex].labels[10], selectedSection.fields[currentSectionIndex].labels[11]];\n                  newArrayObj.push.apply(newArrayObj, newObj);\n                } else if (data.label22) {\n                  console.log('Label 2 --> ', data.label2);\n                  _newObj = [selectedSection.fields[currentSectionIndex].labels[0], data.label2 ? data.label2 : '', selectedSection.fields[currentSectionIndex].labels[2], selectedSection.fields[currentSectionIndex].labels[3], selectedSection.fields[currentSectionIndex].labels[4], selectedSection.fields[currentSectionIndex].labels[5], selectedSection.fields[currentSectionIndex].labels[6], selectedSection.fields[currentSectionIndex].labels[7], selectedSection.fields[currentSectionIndex].labels[8], selectedSection.fields[currentSectionIndex].labels[9], selectedSection.fields[currentSectionIndex].labels[10], selectedSection.fields[currentSectionIndex].labels[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj);\n                } else if (data.label33) {\n                  console.log('Label 3 --> ', data.label3);\n                  _newObj2 = [selectedSection.fields[currentSectionIndex].labels[0], selectedSection.fields[currentSectionIndex].labels[1], data.label3 ? data.label3 : '', selectedSection.fields[currentSectionIndex].labels[3], selectedSection.fields[currentSectionIndex].labels[4], selectedSection.fields[currentSectionIndex].labels[5], selectedSection.fields[currentSectionIndex].labels[6], selectedSection.fields[currentSectionIndex].labels[7], selectedSection.fields[currentSectionIndex].labels[8], selectedSection.fields[currentSectionIndex].labels[9], selectedSection.fields[currentSectionIndex].labels[10], selectedSection.fields[currentSectionIndex].labels[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj2);\n                } else if (data.label44) {\n                  _newObj3 = [selectedSection.fields[currentSectionIndex].labels[0], selectedSection.fields[currentSectionIndex].labels[1], selectedSection.fields[currentSectionIndex].labels[2], data.label4 ? data.label4 : '', selectedSection.fields[currentSectionIndex].labels[4], selectedSection.fields[currentSectionIndex].labels[5], selectedSection.fields[currentSectionIndex].labels[6], selectedSection.fields[currentSectionIndex].labels[7], selectedSection.fields[currentSectionIndex].labels[8], selectedSection.fields[currentSectionIndex].labels[9], selectedSection.fields[currentSectionIndex].labels[10], selectedSection.fields[currentSectionIndex].labels[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj3);\n                } else if (data.label55) {\n                  _newObj4 = [selectedSection.fields[currentSectionIndex].labels[0], selectedSection.fields[currentSectionIndex].labels[1], selectedSection.fields[currentSectionIndex].labels[2], selectedSection.fields[currentSectionIndex].labels[3], data.label5 ? data.label5 : '', selectedSection.fields[currentSectionIndex].labels[5], selectedSection.fields[currentSectionIndex].labels[6], selectedSection.fields[currentSectionIndex].labels[7], selectedSection.fields[currentSectionIndex].labels[8], selectedSection.fields[currentSectionIndex].labels[9], selectedSection.fields[currentSectionIndex].labels[10], selectedSection.fields[currentSectionIndex].labels[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj4);\n                } else if (data.label66) {\n                  _newObj5 = [selectedSection.fields[currentSectionIndex].labels[0], selectedSection.fields[currentSectionIndex].labels[1], selectedSection.fields[currentSectionIndex].labels[2], selectedSection.fields[currentSectionIndex].labels[3], selectedSection.fields[currentSectionIndex].labels[4], data.label6 ? data.label6 : '', selectedSection.fields[currentSectionIndex].labels[6], selectedSection.fields[currentSectionIndex].labels[7], selectedSection.fields[currentSectionIndex].labels[8], selectedSection.fields[currentSectionIndex].labels[9], selectedSection.fields[currentSectionIndex].labels[10], selectedSection.fields[currentSectionIndex].labels[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj5);\n                } else if (data.label77) {\n                  _newObj6 = [selectedSection.fields[currentSectionIndex].labels[0], selectedSection.fields[currentSectionIndex].labels[1], selectedSection.fields[currentSectionIndex].labels[2], selectedSection.fields[currentSectionIndex].labels[3], selectedSection.fields[currentSectionIndex].labels[4], selectedSection.fields[currentSectionIndex].labels[5], data.label7 ? data.label7 : '', selectedSection.fields[currentSectionIndex].labels[7], selectedSection.fields[currentSectionIndex].labels[8], selectedSection.fields[currentSectionIndex].labels[9], selectedSection.fields[currentSectionIndex].labels[10], selectedSection.fields[currentSectionIndex].labels[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj6);\n                } else if (data.label88) {\n                  _newObj7 = [selectedSection.fields[currentSectionIndex].labels[0], selectedSection.fields[currentSectionIndex].labels[1], selectedSection.fields[currentSectionIndex].labels[2], selectedSection.fields[currentSectionIndex].labels[3], selectedSection.fields[currentSectionIndex].labels[4], selectedSection.fields[currentSectionIndex].labels[5], selectedSection.fields[currentSectionIndex].labels[6], data.label8 ? data.label8 : '', selectedSection.fields[currentSectionIndex].labels[8], selectedSection.fields[currentSectionIndex].labels[9], selectedSection.fields[currentSectionIndex].labels[10], selectedSection.fields[currentSectionIndex].labels[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj7);\n                } else if (data.label99) {\n                  _newObj8 = [selectedSection.fields[currentSectionIndex].labels[0], selectedSection.fields[currentSectionIndex].labels[1], selectedSection.fields[currentSectionIndex].labels[2], selectedSection.fields[currentSectionIndex].labels[3], selectedSection.fields[currentSectionIndex].labels[4], selectedSection.fields[currentSectionIndex].labels[5], selectedSection.fields[currentSectionIndex].labels[6], selectedSection.fields[currentSectionIndex].labels[7], data.label9 ? data.label9 : '', selectedSection.fields[currentSectionIndex].labels[9], selectedSection.fields[currentSectionIndex].labels[10], selectedSection.fields[currentSectionIndex].labels[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj8);\n                } else if (data.label100) {\n                  _newObj9 = [selectedSection.fields[currentSectionIndex].labels[0], selectedSection.fields[currentSectionIndex].labels[1], selectedSection.fields[currentSectionIndex].labels[2], selectedSection.fields[currentSectionIndex].labels[3], selectedSection.fields[currentSectionIndex].labels[4], selectedSection.fields[currentSectionIndex].labels[5], selectedSection.fields[currentSectionIndex].labels[6], selectedSection.fields[currentSectionIndex].labels[7], selectedSection.fields[currentSectionIndex].labels[8], data.label10 ? data.label10 : '', selectedSection.fields[currentSectionIndex].labels[10], selectedSection.fields[currentSectionIndex].labels[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj9);\n                } else if (data.label111) {\n                  _newObj10 = [selectedSection.fields[currentSectionIndex].labels[0], selectedSection.fields[currentSectionIndex].labels[1], selectedSection.fields[currentSectionIndex].labels[2], selectedSection.fields[currentSectionIndex].labels[3], selectedSection.fields[currentSectionIndex].labels[4], selectedSection.fields[currentSectionIndex].labels[5], selectedSection.fields[currentSectionIndex].labels[6], selectedSection.fields[currentSectionIndex].labels[7], selectedSection.fields[currentSectionIndex].labels[8], selectedSection.fields[currentSectionIndex].labels[9], data.label11 ? data.label11 : '', selectedSection.fields[currentSectionIndex].labels[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj10);\n                } else if (data.label120) {\n                  _newObj11 = [selectedSection.fields[currentSectionIndex].labels[0], selectedSection.fields[currentSectionIndex].labels[1], selectedSection.fields[currentSectionIndex].labels[2], selectedSection.fields[currentSectionIndex].labels[3], selectedSection.fields[currentSectionIndex].labels[4], selectedSection.fields[currentSectionIndex].labels[5], selectedSection.fields[currentSectionIndex].labels[6], selectedSection.fields[currentSectionIndex].labels[7], selectedSection.fields[currentSectionIndex].labels[8], selectedSection.fields[currentSectionIndex].labels[9], selectedSection.fields[currentSectionIndex].labels[10], data.label12 ? data.label12 : ''];\n                  newArrayObj.push.apply(newArrayObj, _newObj11);\n                } // Take current array copy\n\n\n                newFieldsArray = _toConsumableArray(_this.state.selectedSection.fields);\n                newFieldsArray[currentSectionIndex] = {\n                  index: index,\n                  type: 'chart',\n                  chartType: selectedSection.fields[currentSectionIndex].chartType,\n                  stacked: selectedSection.fields[currentSectionIndex].stacked,\n                  labels: newArrayObj,\n                  dataset1: selectedSection.fields[currentSectionIndex].dataset1,\n                  dataset2: selectedSection.fields[currentSectionIndex].dataset2,\n                  dataset3: selectedSection.fields[currentSectionIndex].dataset3,\n                  dataset4: selectedSection.fields[currentSectionIndex].dataset4,\n                  dataset5: selectedSection.fields[currentSectionIndex].dataset5,\n                  dataset6: selectedSection.fields[currentSectionIndex].dataset6,\n                  // Dataset labels\n                  dataset1Label: selectedSection.fields[currentSectionIndex].dataset1Label,\n                  dataset2Label: selectedSection.fields[currentSectionIndex].dataset2Label,\n                  dataset3Label: selectedSection.fields[currentSectionIndex].dataset3Label,\n                  dataset4Label: selectedSection.fields[currentSectionIndex].dataset4Label,\n                  dataset5Label: selectedSection.fields[currentSectionIndex].dataset5Label,\n                  dataset6Label: selectedSection.fields[currentSectionIndex].dataset6Label\n                };\n                newSection = {\n                  title: _this.state.selectedSection.title,\n                  // createdAt: this.state.selectedSection.createdAt,\n                  fields: newFieldsArray,\n                  id: _this.state.selectedSection.id\n                };\n                _context15.next = 8;\n                return _this.setState({\n                  selectedSection: newSection\n                });\n\n              case 8:\n                // Update database\n                db.collection('projects').doc(_this.state.projectId).collection('businessPlan').doc(Router.query.project).collection('inputs') // .collection('currentBusinessPlan')\n                //   .doc('GrcvhyJwvlWVy31QsiudoQKdKI72')\n                //   .collection('inputs')\n                .doc(_this.state.selectedSection.id).update({\n                  fields: newFieldsArray\n                });\n\n              case 9:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15);\n      }));\n\n      return function (_x22, _x23, _x24, _x25) {\n        return _ref15.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"onDataset1Update\", /*#__PURE__*/function () {\n      var _ref16 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee16(data, index, currentSectionIndex, selectedSection) {\n        var newArrayObj, newObj, _newObj12, _newObj13, _newObj14, _newObj15, _newObj16, _newObj17, _newObj18, _newObj19, _newObj20, _newObj21, _newObj22, filteredArrayObj, newArr, newFieldsArray, newSection;\n\n        return _regeneratorRuntime.wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                newArrayObj = [];\n                console.log('IMPORTANT --> ', data.dataset1ValueOne);\n\n                if (data.dataset1ValueOne) {\n                  newObj = [data.dataset1Value1 ? data.dataset1Value1 : '', selectedSection.fields[currentSectionIndex].dataset1[1], selectedSection.fields[currentSectionIndex].dataset1[2], selectedSection.fields[currentSectionIndex].dataset1[3], selectedSection.fields[currentSectionIndex].dataset1[4], selectedSection.fields[currentSectionIndex].dataset1[5], selectedSection.fields[currentSectionIndex].dataset1[6], selectedSection.fields[currentSectionIndex].dataset1[7], selectedSection.fields[currentSectionIndex].dataset1[8], selectedSection.fields[currentSectionIndex].dataset1[9], selectedSection.fields[currentSectionIndex].dataset1[10], selectedSection.fields[currentSectionIndex].dataset1[11]];\n                  newArrayObj.push.apply(newArrayObj, newObj);\n                } else if (data.dataset1Value22) {\n                  _newObj12 = [selectedSection.fields[currentSectionIndex].dataset1[0], data.dataset1Value2 ? data.dataset1Value2 : '', selectedSection.fields[currentSectionIndex].dataset1[2], selectedSection.fields[currentSectionIndex].dataset1[3], selectedSection.fields[currentSectionIndex].dataset1[4], selectedSection.fields[currentSectionIndex].dataset1[5], selectedSection.fields[currentSectionIndex].dataset1[6], selectedSection.fields[currentSectionIndex].dataset1[7], selectedSection.fields[currentSectionIndex].dataset1[8], selectedSection.fields[currentSectionIndex].dataset1[9], selectedSection.fields[currentSectionIndex].dataset1[10], selectedSection.fields[currentSectionIndex].dataset1[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj12);\n                } else if (data.dataset1Value33) {\n                  _newObj13 = [selectedSection.fields[currentSectionIndex].dataset1[0], selectedSection.fields[currentSectionIndex].dataset1[1], data.dataset1Value3 ? data.dataset1Value3 : '', selectedSection.fields[currentSectionIndex].dataset1[3], selectedSection.fields[currentSectionIndex].dataset1[4], selectedSection.fields[currentSectionIndex].dataset1[5], selectedSection.fields[currentSectionIndex].dataset1[6], selectedSection.fields[currentSectionIndex].dataset1[7], selectedSection.fields[currentSectionIndex].dataset1[8], selectedSection.fields[currentSectionIndex].dataset1[9], selectedSection.fields[currentSectionIndex].dataset1[10], selectedSection.fields[currentSectionIndex].dataset1[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj13);\n                } else if (data.dataset1Value44) {\n                  _newObj14 = [selectedSection.fields[currentSectionIndex].dataset1[0], selectedSection.fields[currentSectionIndex].dataset1[1], selectedSection.fields[currentSectionIndex].dataset1[2], data.dataset1Value4 ? data.dataset1Value4 : '', selectedSection.fields[currentSectionIndex].dataset1[4], selectedSection.fields[currentSectionIndex].dataset1[5], selectedSection.fields[currentSectionIndex].dataset1[6], selectedSection.fields[currentSectionIndex].dataset1[7], selectedSection.fields[currentSectionIndex].dataset1[8], selectedSection.fields[currentSectionIndex].dataset1[9], selectedSection.fields[currentSectionIndex].dataset1[10], selectedSection.fields[currentSectionIndex].dataset1[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj14);\n                } else if (data.dataset1Value55) {\n                  _newObj15 = [selectedSection.fields[currentSectionIndex].dataset1[0], selectedSection.fields[currentSectionIndex].dataset1[1], selectedSection.fields[currentSectionIndex].dataset1[2], selectedSection.fields[currentSectionIndex].dataset1[3], data.dataset1Value5 ? data.dataset1Value5 : '', selectedSection.fields[currentSectionIndex].dataset1[5], selectedSection.fields[currentSectionIndex].dataset1[6], selectedSection.fields[currentSectionIndex].dataset1[7], selectedSection.fields[currentSectionIndex].dataset1[8], selectedSection.fields[currentSectionIndex].dataset1[9], selectedSection.fields[currentSectionIndex].dataset1[10], selectedSection.fields[currentSectionIndex].dataset1[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj15);\n                } else if (data.dataset1Value66) {\n                  _newObj16 = [selectedSection.fields[currentSectionIndex].dataset1[0], selectedSection.fields[currentSectionIndex].dataset1[1], selectedSection.fields[currentSectionIndex].dataset1[2], selectedSection.fields[currentSectionIndex].dataset1[3], selectedSection.fields[currentSectionIndex].dataset1[4], data.dataset1Value6 ? data.dataset1Value6 : '', selectedSection.fields[currentSectionIndex].dataset1[6], selectedSection.fields[currentSectionIndex].dataset1[7], selectedSection.fields[currentSectionIndex].dataset1[8], selectedSection.fields[currentSectionIndex].dataset1[9], selectedSection.fields[currentSectionIndex].dataset1[10], selectedSection.fields[currentSectionIndex].dataset1[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj16);\n                } else if (data.dataset1Value77) {\n                  _newObj17 = [selectedSection.fields[currentSectionIndex].dataset1[0], selectedSection.fields[currentSectionIndex].dataset1[1], selectedSection.fields[currentSectionIndex].dataset1[2], selectedSection.fields[currentSectionIndex].dataset1[3], selectedSection.fields[currentSectionIndex].dataset1[4], selectedSection.fields[currentSectionIndex].dataset1[5], data.dataset1Value7 ? data.dataset1Value7 : '', selectedSection.fields[currentSectionIndex].dataset1[7], selectedSection.fields[currentSectionIndex].dataset1[8], selectedSection.fields[currentSectionIndex].dataset1[9], selectedSection.fields[currentSectionIndex].dataset1[10], selectedSection.fields[currentSectionIndex].dataset1[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj17);\n                } else if (data.dataset1Value88) {\n                  _newObj18 = [selectedSection.fields[currentSectionIndex].dataset1[0], selectedSection.fields[currentSectionIndex].dataset1[1], selectedSection.fields[currentSectionIndex].dataset1[2], selectedSection.fields[currentSectionIndex].dataset1[3], selectedSection.fields[currentSectionIndex].dataset1[4], selectedSection.fields[currentSectionIndex].dataset1[5], selectedSection.fields[currentSectionIndex].dataset1[6], data.dataset1Value8 ? data.dataset1Value8 : '', selectedSection.fields[currentSectionIndex].dataset1[8], selectedSection.fields[currentSectionIndex].dataset1[9], selectedSection.fields[currentSectionIndex].dataset1[10], selectedSection.fields[currentSectionIndex].dataset1[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj18);\n                } else if (data.dataset1Value99) {\n                  _newObj19 = [selectedSection.fields[currentSectionIndex].dataset1[0], selectedSection.fields[currentSectionIndex].dataset1[1], selectedSection.fields[currentSectionIndex].dataset1[2], selectedSection.fields[currentSectionIndex].dataset1[3], selectedSection.fields[currentSectionIndex].dataset1[4], selectedSection.fields[currentSectionIndex].dataset1[5], selectedSection.fields[currentSectionIndex].dataset1[6], selectedSection.fields[currentSectionIndex].dataset1[7], data.dataset1Value9 ? data.dataset1Value9 : '', selectedSection.fields[currentSectionIndex].dataset1[9], selectedSection.fields[currentSectionIndex].dataset1[10], selectedSection.fields[currentSectionIndex].dataset1[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj19);\n                } else if (data.dataset1Value100) {\n                  _newObj20 = [selectedSection.fields[currentSectionIndex].dataset1[0], selectedSection.fields[currentSectionIndex].dataset1[1], selectedSection.fields[currentSectionIndex].dataset1[2], selectedSection.fields[currentSectionIndex].dataset1[3], selectedSection.fields[currentSectionIndex].dataset1[4], selectedSection.fields[currentSectionIndex].dataset1[5], selectedSection.fields[currentSectionIndex].dataset1[6], selectedSection.fields[currentSectionIndex].dataset1[7], selectedSection.fields[currentSectionIndex].dataset1[8], data.dataset1Value10 ? data.dataset1Value10 : '', selectedSection.fields[currentSectionIndex].dataset1[10], selectedSection.fields[currentSectionIndex].dataset1[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj20);\n                } else if (data.dataset1Value111) {\n                  _newObj21 = [selectedSection.fields[currentSectionIndex].dataset1[0], selectedSection.fields[currentSectionIndex].dataset1[1], selectedSection.fields[currentSectionIndex].dataset1[2], selectedSection.fields[currentSectionIndex].dataset1[3], selectedSection.fields[currentSectionIndex].dataset1[4], selectedSection.fields[currentSectionIndex].dataset1[5], selectedSection.fields[currentSectionIndex].dataset1[6], selectedSection.fields[currentSectionIndex].dataset1[7], selectedSection.fields[currentSectionIndex].dataset1[8], selectedSection.fields[currentSectionIndex].dataset1[9], data.dataset1Value11 ? data.dataset1Value11 : '', selectedSection.fields[currentSectionIndex].dataset1[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj21);\n                } else if (data.dataset1Value120) {\n                  _newObj22 = [selectedSection.fields[currentSectionIndex].dataset1[0], selectedSection.fields[currentSectionIndex].dataset1[1], selectedSection.fields[currentSectionIndex].dataset1[2], selectedSection.fields[currentSectionIndex].dataset1[3], selectedSection.fields[currentSectionIndex].dataset1[4], selectedSection.fields[currentSectionIndex].dataset1[5], selectedSection.fields[currentSectionIndex].dataset1[6], selectedSection.fields[currentSectionIndex].dataset1[7], selectedSection.fields[currentSectionIndex].dataset1[8], selectedSection.fields[currentSectionIndex].dataset1[9], selectedSection.fields[currentSectionIndex].dataset1[10], data.dataset1Value12 ? data.dataset1Value12 : ''];\n                  newArrayObj.push.apply(newArrayObj, _newObj22);\n                }\n\n                filteredArrayObj = newArrayObj.map(function (obj) {\n                  if (obj == undefined) {\n                    return '';\n                  } else {\n                    return obj;\n                  }\n                });\n                newArr = filteredArrayObj.filter(function (element) {\n                  return element !== '';\n                }); // Take current array copy\n\n                newFieldsArray = _toConsumableArray(_this.state.selectedSection.fields);\n                newFieldsArray[currentSectionIndex] = {\n                  index: index,\n                  type: 'chart',\n                  chartType: selectedSection.fields[currentSectionIndex].chartType,\n                  stacked: selectedSection.fields[currentSectionIndex].stacked,\n                  dataset1: newArr,\n                  labels: selectedSection.fields[currentSectionIndex].labels,\n                  dataset2: selectedSection.fields[currentSectionIndex].dataset2,\n                  dataset3: selectedSection.fields[currentSectionIndex].dataset3,\n                  dataset4: selectedSection.fields[currentSectionIndex].dataset4,\n                  dataset5: selectedSection.fields[currentSectionIndex].dataset5,\n                  dataset6: selectedSection.fields[currentSectionIndex].dataset6,\n                  // Dataset labels\n                  dataset1Label: selectedSection.fields[currentSectionIndex].dataset1Label,\n                  dataset2Label: selectedSection.fields[currentSectionIndex].dataset2Label,\n                  dataset3Label: selectedSection.fields[currentSectionIndex].dataset3Label,\n                  dataset4Label: selectedSection.fields[currentSectionIndex].dataset4Label,\n                  dataset5Label: selectedSection.fields[currentSectionIndex].dataset5Label,\n                  dataset6Label: selectedSection.fields[currentSectionIndex].dataset6Label\n                };\n                console.log(newFieldsArray);\n                newSection = {\n                  title: _this.state.selectedSection.title,\n                  // createdAt: this.state.selectedSection.createdAt,\n                  fields: newFieldsArray,\n                  id: _this.state.selectedSection.id\n                };\n                _context16.next = 11;\n                return _this.setState({\n                  selectedSection: newSection\n                });\n\n              case 11:\n                // Update database\n                db.collection('projects').doc(_this.state.projectId).collection('businessPlan').doc(Router.query.project).collection('inputs') // .collection('currentBusinessPlan')\n                //   .doc('GrcvhyJwvlWVy31QsiudoQKdKI72')\n                //   .collection('inputs')\n                .doc(_this.state.selectedSection.id).update({\n                  fields: newFieldsArray\n                });\n\n              case 12:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16);\n      }));\n\n      return function (_x26, _x27, _x28, _x29) {\n        return _ref16.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"onDataset2Update\", /*#__PURE__*/function () {\n      var _ref17 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee17(data, index, currentSectionIndex, selectedSection) {\n        var newArrayObj, newObj, _newObj23, _newObj24, _newObj25, _newObj26, _newObj27, _newObj28, _newObj29, _newObj30, _newObj31, _newObj32, _newObj33, filteredArrayObj, newArr, newFieldsArray, newSection;\n\n        return _regeneratorRuntime.wrap(function _callee17$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                newArrayObj = [];\n                console.log('DATA --> ', selectedSection);\n\n                if (data.dataset2ValueOne) {\n                  newObj = [data.dataset2Value1 ? data.dataset2Value1 : '', selectedSection.fields[currentSectionIndex].dataset2[1], selectedSection.fields[currentSectionIndex].dataset2[2], selectedSection.fields[currentSectionIndex].dataset2[3], selectedSection.fields[currentSectionIndex].dataset2[4], selectedSection.fields[currentSectionIndex].dataset2[5], selectedSection.fields[currentSectionIndex].dataset2[6], selectedSection.fields[currentSectionIndex].dataset2[7], selectedSection.fields[currentSectionIndex].dataset2[8], selectedSection.fields[currentSectionIndex].dataset2[9], selectedSection.fields[currentSectionIndex].dataset2[10], selectedSection.fields[currentSectionIndex].dataset2[11]];\n                  newArrayObj.push.apply(newArrayObj, newObj);\n                } else if (data.dataset2Value22) {\n                  _newObj23 = [selectedSection.fields[currentSectionIndex].dataset2[0], data.dataset2Value2 ? data.dataset2Value2 : '', selectedSection.fields[currentSectionIndex].dataset2[2], selectedSection.fields[currentSectionIndex].dataset2[3], selectedSection.fields[currentSectionIndex].dataset2[4], selectedSection.fields[currentSectionIndex].dataset2[5], selectedSection.fields[currentSectionIndex].dataset2[6], selectedSection.fields[currentSectionIndex].dataset2[7], selectedSection.fields[currentSectionIndex].dataset2[8], selectedSection.fields[currentSectionIndex].dataset2[9], selectedSection.fields[currentSectionIndex].dataset2[10], selectedSection.fields[currentSectionIndex].dataset2[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj23);\n                } else if (data.dataset2Value33) {\n                  _newObj24 = [selectedSection.fields[currentSectionIndex].dataset2[0], selectedSection.fields[currentSectionIndex].dataset2[1], data.dataset2Value3 ? data.dataset2Value3 : '', selectedSection.fields[currentSectionIndex].dataset2[3], selectedSection.fields[currentSectionIndex].dataset2[4], selectedSection.fields[currentSectionIndex].dataset2[5], selectedSection.fields[currentSectionIndex].dataset2[6], selectedSection.fields[currentSectionIndex].dataset2[7], selectedSection.fields[currentSectionIndex].dataset2[8], selectedSection.fields[currentSectionIndex].dataset2[9], selectedSection.fields[currentSectionIndex].dataset2[10], selectedSection.fields[currentSectionIndex].dataset2[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj24);\n                } else if (data.dataset2Value44) {\n                  _newObj25 = [selectedSection.fields[currentSectionIndex].dataset2[0], selectedSection.fields[currentSectionIndex].dataset2[1], selectedSection.fields[currentSectionIndex].dataset2[2], data.dataset2Value4 ? data.dataset2Value4 : '', selectedSection.fields[currentSectionIndex].dataset2[4], selectedSection.fields[currentSectionIndex].dataset2[5], selectedSection.fields[currentSectionIndex].dataset2[6], selectedSection.fields[currentSectionIndex].dataset2[7], selectedSection.fields[currentSectionIndex].dataset2[8], selectedSection.fields[currentSectionIndex].dataset2[9], selectedSection.fields[currentSectionIndex].dataset2[10], selectedSection.fields[currentSectionIndex].dataset2[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj25);\n                } else if (data.dataset2Value55) {\n                  _newObj26 = [selectedSection.fields[currentSectionIndex].dataset2[0], selectedSection.fields[currentSectionIndex].dataset2[1], selectedSection.fields[currentSectionIndex].dataset2[2], selectedSection.fields[currentSectionIndex].dataset2[3], data.dataset2Value5 ? data.dataset2Value5 : '', selectedSection.fields[currentSectionIndex].dataset2[5], selectedSection.fields[currentSectionIndex].dataset2[6], selectedSection.fields[currentSectionIndex].dataset2[7], selectedSection.fields[currentSectionIndex].dataset2[8], selectedSection.fields[currentSectionIndex].dataset2[9], selectedSection.fields[currentSectionIndex].dataset2[10], selectedSection.fields[currentSectionIndex].dataset2[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj26);\n                } else if (data.dataset2Value66) {\n                  _newObj27 = [selectedSection.fields[currentSectionIndex].dataset2[0], selectedSection.fields[currentSectionIndex].dataset2[1], selectedSection.fields[currentSectionIndex].dataset2[2], selectedSection.fields[currentSectionIndex].dataset2[3], selectedSection.fields[currentSectionIndex].dataset2[4], data.dataset2Value6 ? data.dataset2Value6 : '', selectedSection.fields[currentSectionIndex].dataset2[6], selectedSection.fields[currentSectionIndex].dataset2[7], selectedSection.fields[currentSectionIndex].dataset2[8], selectedSection.fields[currentSectionIndex].dataset2[9], selectedSection.fields[currentSectionIndex].dataset2[10], selectedSection.fields[currentSectionIndex].dataset2[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj27);\n                } else if (data.dataset2Value77) {\n                  _newObj28 = [selectedSection.fields[currentSectionIndex].dataset2[0], selectedSection.fields[currentSectionIndex].dataset2[1], selectedSection.fields[currentSectionIndex].dataset2[2], selectedSection.fields[currentSectionIndex].dataset2[3], selectedSection.fields[currentSectionIndex].dataset2[4], selectedSection.fields[currentSectionIndex].dataset2[5], data.dataset2Value7 ? data.dataset2Value7 : '', selectedSection.fields[currentSectionIndex].dataset2[7], selectedSection.fields[currentSectionIndex].dataset2[8], selectedSection.fields[currentSectionIndex].dataset2[9], selectedSection.fields[currentSectionIndex].dataset2[10], selectedSection.fields[currentSectionIndex].dataset2[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj28);\n                } else if (data.dataset2Value88) {\n                  _newObj29 = [selectedSection.fields[currentSectionIndex].dataset2[0], selectedSection.fields[currentSectionIndex].dataset2[1], selectedSection.fields[currentSectionIndex].dataset2[2], selectedSection.fields[currentSectionIndex].dataset2[3], selectedSection.fields[currentSectionIndex].dataset2[4], selectedSection.fields[currentSectionIndex].dataset2[5], selectedSection.fields[currentSectionIndex].dataset2[6], data.dataset2Value8 ? data.dataset2Value8 : '', selectedSection.fields[currentSectionIndex].dataset2[8], selectedSection.fields[currentSectionIndex].dataset2[9], selectedSection.fields[currentSectionIndex].dataset2[10], selectedSection.fields[currentSectionIndex].dataset2[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj29);\n                } else if (data.dataset2Value99) {\n                  _newObj30 = [selectedSection.fields[currentSectionIndex].dataset2[0], selectedSection.fields[currentSectionIndex].dataset2[1], selectedSection.fields[currentSectionIndex].dataset2[2], selectedSection.fields[currentSectionIndex].dataset2[3], selectedSection.fields[currentSectionIndex].dataset2[4], selectedSection.fields[currentSectionIndex].dataset2[5], selectedSection.fields[currentSectionIndex].dataset2[6], selectedSection.fields[currentSectionIndex].dataset2[7], data.dataset2Value9 ? data.dataset2Value9 : '', selectedSection.fields[currentSectionIndex].dataset2[9], selectedSection.fields[currentSectionIndex].dataset2[10], selectedSection.fields[currentSectionIndex].dataset2[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj30);\n                } else if (data.dataset2Value100) {\n                  _newObj31 = [selectedSection.fields[currentSectionIndex].dataset2[0], selectedSection.fields[currentSectionIndex].dataset2[1], selectedSection.fields[currentSectionIndex].dataset2[2], selectedSection.fields[currentSectionIndex].dataset2[3], selectedSection.fields[currentSectionIndex].dataset2[4], selectedSection.fields[currentSectionIndex].dataset2[5], selectedSection.fields[currentSectionIndex].dataset2[6], selectedSection.fields[currentSectionIndex].dataset2[7], selectedSection.fields[currentSectionIndex].dataset2[8], data.dataset2Value10 ? data.dataset2Value10 : '', selectedSection.fields[currentSectionIndex].dataset2[10], selectedSection.fields[currentSectionIndex].dataset2[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj31);\n                } else if (data.dataset2Value111) {\n                  _newObj32 = [selectedSection.fields[currentSectionIndex].dataset2[0], selectedSection.fields[currentSectionIndex].dataset2[1], selectedSection.fields[currentSectionIndex].dataset2[2], selectedSection.fields[currentSectionIndex].dataset2[3], selectedSection.fields[currentSectionIndex].dataset2[4], selectedSection.fields[currentSectionIndex].dataset2[5], selectedSection.fields[currentSectionIndex].dataset2[6], selectedSection.fields[currentSectionIndex].dataset2[7], selectedSection.fields[currentSectionIndex].dataset2[8], selectedSection.fields[currentSectionIndex].dataset2[9], data.dataset2Value11 ? data.dataset2Value11 : '', selectedSection.fields[currentSectionIndex].dataset2[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj32);\n                } else if (data.dataset2Value120) {\n                  _newObj33 = [selectedSection.fields[currentSectionIndex].dataset2[0], selectedSection.fields[currentSectionIndex].dataset2[1], selectedSection.fields[currentSectionIndex].dataset2[2], selectedSection.fields[currentSectionIndex].dataset2[3], selectedSection.fields[currentSectionIndex].dataset2[4], selectedSection.fields[currentSectionIndex].dataset2[5], selectedSection.fields[currentSectionIndex].dataset2[6], selectedSection.fields[currentSectionIndex].dataset2[7], selectedSection.fields[currentSectionIndex].dataset2[8], selectedSection.fields[currentSectionIndex].dataset2[9], selectedSection.fields[currentSectionIndex].dataset2[10], data.dataset2Value12 ? data.dataset2Value12 : ''];\n                  newArrayObj.push.apply(newArrayObj, _newObj33);\n                }\n\n                filteredArrayObj = newArrayObj.map(function (obj) {\n                  if (obj == undefined) {\n                    return '';\n                  } else {\n                    return obj;\n                  }\n                });\n                newArr = filteredArrayObj.filter(function (element) {\n                  return element !== '';\n                }); // Take current array copy\n\n                newFieldsArray = _toConsumableArray(_this.state.selectedSection.fields);\n                newFieldsArray[currentSectionIndex] = {\n                  index: index,\n                  type: 'chart',\n                  chartType: selectedSection.fields[currentSectionIndex].chartType,\n                  stacked: selectedSection.fields[currentSectionIndex].stacked,\n                  dataset2: newArr,\n                  labels: selectedSection.fields[currentSectionIndex].labels,\n                  dataset1: selectedSection.fields[currentSectionIndex].dataset1,\n                  dataset3: selectedSection.fields[currentSectionIndex].dataset3,\n                  dataset4: selectedSection.fields[currentSectionIndex].dataset4,\n                  dataset5: selectedSection.fields[currentSectionIndex].dataset5,\n                  dataset6: selectedSection.fields[currentSectionIndex].dataset6,\n                  // Dataset labels\n                  dataset1Label: selectedSection.fields[currentSectionIndex].dataset1Label,\n                  dataset2Label: selectedSection.fields[currentSectionIndex].dataset2Label,\n                  dataset3Label: selectedSection.fields[currentSectionIndex].dataset3Label,\n                  dataset4Label: selectedSection.fields[currentSectionIndex].dataset4Label,\n                  dataset5Label: selectedSection.fields[currentSectionIndex].dataset5Label,\n                  dataset6Label: selectedSection.fields[currentSectionIndex].dataset6Label\n                };\n                newSection = {\n                  title: _this.state.selectedSection.title,\n                  // createdAt: this.state.selectedSection.createdAt,\n                  fields: newFieldsArray,\n                  id: _this.state.selectedSection.id\n                };\n                _context17.next = 10;\n                return _this.setState({\n                  selectedSection: newSection\n                });\n\n              case 10:\n                // console.log(newFieldsArray[0]);\n                // Update database\n                db.collection('projects').doc(_this.state.projectId).collection('businessPlan').doc(Router.query.project).collection('inputs') // .collection('currentBusinessPlan')\n                //   .doc('GrcvhyJwvlWVy31QsiudoQKdKI72')\n                //   .collection('inputs')\n                .doc(_this.state.selectedSection.id).update({\n                  fields: newFieldsArray\n                });\n\n              case 11:\n              case \"end\":\n                return _context17.stop();\n            }\n          }\n        }, _callee17);\n      }));\n\n      return function (_x30, _x31, _x32, _x33) {\n        return _ref17.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"onDataset3Update\", /*#__PURE__*/function () {\n      var _ref18 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee18(data, index, currentSectionIndex, selectedSection) {\n        var newArrayObj, newObj, _newObj34, _newObj35, _newObj36, _newObj37, _newObj38, _newObj39, _newObj40, _newObj41, _newObj42, _newObj43, _newObj44, filteredArrayObj, newArr, newFieldsArray, newSection;\n\n        return _regeneratorRuntime.wrap(function _callee18$(_context18) {\n          while (1) {\n            switch (_context18.prev = _context18.next) {\n              case 0:\n                newArrayObj = [];\n\n                if (data.dataset3ValueOne) {\n                  newObj = [data.dataset3Value1 ? data.dataset3Value1 : '', selectedSection.fields[currentSectionIndex].dataset3[1], selectedSection.fields[currentSectionIndex].dataset3[2], selectedSection.fields[currentSectionIndex].dataset3[3], selectedSection.fields[currentSectionIndex].dataset3[4], selectedSection.fields[currentSectionIndex].dataset3[5], selectedSection.fields[currentSectionIndex].dataset3[6], selectedSection.fields[currentSectionIndex].dataset3[7], selectedSection.fields[currentSectionIndex].dataset3[8], selectedSection.fields[currentSectionIndex].dataset3[9], selectedSection.fields[currentSectionIndex].dataset3[10], selectedSection.fields[currentSectionIndex].dataset3[11]];\n                  newArrayObj.push.apply(newArrayObj, newObj);\n                } else if (data.dataset3Value22) {\n                  _newObj34 = [selectedSection.fields[currentSectionIndex].dataset3[0], data.dataset3Value2 ? data.dataset3Value2 : '', selectedSection.fields[currentSectionIndex].dataset3[2], selectedSection.fields[currentSectionIndex].dataset3[3], selectedSection.fields[currentSectionIndex].dataset3[4], selectedSection.fields[currentSectionIndex].dataset3[5], selectedSection.fields[currentSectionIndex].dataset3[6], selectedSection.fields[currentSectionIndex].dataset3[7], selectedSection.fields[currentSectionIndex].dataset3[8], selectedSection.fields[currentSectionIndex].dataset3[9], selectedSection.fields[currentSectionIndex].dataset3[10], selectedSection.fields[currentSectionIndex].dataset3[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj34);\n                } else if (data.dataset3Value33) {\n                  _newObj35 = [selectedSection.fields[currentSectionIndex].dataset3[0], selectedSection.fields[currentSectionIndex].dataset3[1], data.dataset3Value3 ? data.dataset3Value3 : '', selectedSection.fields[currentSectionIndex].dataset3[3], selectedSection.fields[currentSectionIndex].dataset3[4], selectedSection.fields[currentSectionIndex].dataset3[5], selectedSection.fields[currentSectionIndex].dataset3[6], selectedSection.fields[currentSectionIndex].dataset3[7], selectedSection.fields[currentSectionIndex].dataset3[8], selectedSection.fields[currentSectionIndex].dataset3[9], selectedSection.fields[currentSectionIndex].dataset3[10], selectedSection.fields[currentSectionIndex].dataset3[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj35);\n                } else if (data.dataset3Value44) {\n                  _newObj36 = [selectedSection.fields[currentSectionIndex].dataset3[0], selectedSection.fields[currentSectionIndex].dataset3[1], selectedSection.fields[currentSectionIndex].dataset3[2], data.dataset3Value4 ? data.dataset3Value4 : '', selectedSection.fields[currentSectionIndex].dataset3[4], selectedSection.fields[currentSectionIndex].dataset3[5], selectedSection.fields[currentSectionIndex].dataset3[6], selectedSection.fields[currentSectionIndex].dataset3[7], selectedSection.fields[currentSectionIndex].dataset3[8], selectedSection.fields[currentSectionIndex].dataset3[9], selectedSection.fields[currentSectionIndex].dataset3[10], selectedSection.fields[currentSectionIndex].dataset3[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj36);\n                } else if (data.dataset3Value55) {\n                  _newObj37 = [selectedSection.fields[currentSectionIndex].dataset3[0], selectedSection.fields[currentSectionIndex].dataset3[1], selectedSection.fields[currentSectionIndex].dataset3[2], selectedSection.fields[currentSectionIndex].dataset3[3], data.dataset3Value5 ? data.dataset3Value5 : '', selectedSection.fields[currentSectionIndex].dataset3[5], selectedSection.fields[currentSectionIndex].dataset3[6], selectedSection.fields[currentSectionIndex].dataset3[7], selectedSection.fields[currentSectionIndex].dataset3[8], selectedSection.fields[currentSectionIndex].dataset3[9], selectedSection.fields[currentSectionIndex].dataset3[10], selectedSection.fields[currentSectionIndex].dataset3[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj37);\n                } else if (data.dataset3Value66) {\n                  _newObj38 = [selectedSection.fields[currentSectionIndex].dataset3[0], selectedSection.fields[currentSectionIndex].dataset3[1], selectedSection.fields[currentSectionIndex].dataset3[2], selectedSection.fields[currentSectionIndex].dataset3[3], selectedSection.fields[currentSectionIndex].dataset3[4], data.dataset3Value6 ? data.dataset3Value6 : '', selectedSection.fields[currentSectionIndex].dataset3[6], selectedSection.fields[currentSectionIndex].dataset3[7], selectedSection.fields[currentSectionIndex].dataset3[8], selectedSection.fields[currentSectionIndex].dataset3[9], selectedSection.fields[currentSectionIndex].dataset3[10], selectedSection.fields[currentSectionIndex].dataset3[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj38);\n                } else if (data.dataset3Value77) {\n                  _newObj39 = [selectedSection.fields[currentSectionIndex].dataset3[0], selectedSection.fields[currentSectionIndex].dataset3[1], selectedSection.fields[currentSectionIndex].dataset3[2], selectedSection.fields[currentSectionIndex].dataset3[3], selectedSection.fields[currentSectionIndex].dataset3[4], selectedSection.fields[currentSectionIndex].dataset3[5], data.dataset3Value7 ? data.dataset3Value7 : '', selectedSection.fields[currentSectionIndex].dataset3[7], selectedSection.fields[currentSectionIndex].dataset3[8], selectedSection.fields[currentSectionIndex].dataset3[9], selectedSection.fields[currentSectionIndex].dataset3[10], selectedSection.fields[currentSectionIndex].dataset3[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj39);\n                } else if (data.dataset3Value88) {\n                  _newObj40 = [selectedSection.fields[currentSectionIndex].dataset3[0], selectedSection.fields[currentSectionIndex].dataset3[1], selectedSection.fields[currentSectionIndex].dataset3[2], selectedSection.fields[currentSectionIndex].dataset3[3], selectedSection.fields[currentSectionIndex].dataset3[4], selectedSection.fields[currentSectionIndex].dataset3[5], selectedSection.fields[currentSectionIndex].dataset3[6], data.dataset3Value8 ? data.dataset3Value8 : '', selectedSection.fields[currentSectionIndex].dataset3[8], selectedSection.fields[currentSectionIndex].dataset3[9], selectedSection.fields[currentSectionIndex].dataset3[10], selectedSection.fields[currentSectionIndex].dataset3[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj40);\n                } else if (data.dataset3Value99) {\n                  _newObj41 = [selectedSection.fields[currentSectionIndex].dataset3[0], selectedSection.fields[currentSectionIndex].dataset3[1], selectedSection.fields[currentSectionIndex].dataset3[2], selectedSection.fields[currentSectionIndex].dataset3[3], selectedSection.fields[currentSectionIndex].dataset3[4], selectedSection.fields[currentSectionIndex].dataset3[5], selectedSection.fields[currentSectionIndex].dataset3[6], selectedSection.fields[currentSectionIndex].dataset3[7], data.dataset3Value9 ? data.dataset3Value9 : '', selectedSection.fields[currentSectionIndex].dataset3[9], selectedSection.fields[currentSectionIndex].dataset3[10], selectedSection.fields[currentSectionIndex].dataset3[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj41);\n                } else if (data.dataset3Value100) {\n                  _newObj42 = [selectedSection.fields[currentSectionIndex].dataset3[0], selectedSection.fields[currentSectionIndex].dataset3[1], selectedSection.fields[currentSectionIndex].dataset3[2], selectedSection.fields[currentSectionIndex].dataset3[3], selectedSection.fields[currentSectionIndex].dataset3[4], selectedSection.fields[currentSectionIndex].dataset3[5], selectedSection.fields[currentSectionIndex].dataset3[6], selectedSection.fields[currentSectionIndex].dataset3[7], selectedSection.fields[currentSectionIndex].dataset3[8], data.dataset3Value10 ? data.dataset3Value10 : '', selectedSection.fields[currentSectionIndex].dataset3[10], selectedSection.fields[currentSectionIndex].dataset3[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj42);\n                } else if (data.dataset3Value111) {\n                  _newObj43 = [selectedSection.fields[currentSectionIndex].dataset3[0], selectedSection.fields[currentSectionIndex].dataset3[1], selectedSection.fields[currentSectionIndex].dataset3[2], selectedSection.fields[currentSectionIndex].dataset3[3], selectedSection.fields[currentSectionIndex].dataset3[4], selectedSection.fields[currentSectionIndex].dataset3[5], selectedSection.fields[currentSectionIndex].dataset3[6], selectedSection.fields[currentSectionIndex].dataset3[7], selectedSection.fields[currentSectionIndex].dataset3[8], selectedSection.fields[currentSectionIndex].dataset3[9], data.dataset3Value11 ? data.dataset3Value11 : '', selectedSection.fields[currentSectionIndex].dataset3[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj43);\n                } else if (data.dataset3Value120) {\n                  _newObj44 = [selectedSection.fields[currentSectionIndex].dataset3[0], selectedSection.fields[currentSectionIndex].dataset3[1], selectedSection.fields[currentSectionIndex].dataset3[2], selectedSection.fields[currentSectionIndex].dataset3[3], selectedSection.fields[currentSectionIndex].dataset3[4], selectedSection.fields[currentSectionIndex].dataset3[5], selectedSection.fields[currentSectionIndex].dataset3[6], selectedSection.fields[currentSectionIndex].dataset3[7], selectedSection.fields[currentSectionIndex].dataset3[8], selectedSection.fields[currentSectionIndex].dataset3[9], selectedSection.fields[currentSectionIndex].dataset3[10], data.dataset3Value12 ? data.dataset3Value12 : ''];\n                  newArrayObj.push.apply(newArrayObj, _newObj44);\n                }\n\n                filteredArrayObj = newArrayObj.map(function (obj) {\n                  if (obj == undefined) {\n                    return '';\n                  } else {\n                    return obj;\n                  }\n                });\n                newArr = filteredArrayObj.filter(function (element) {\n                  return element !== '';\n                }); // Take current array copy\n\n                newFieldsArray = _toConsumableArray(_this.state.selectedSection.fields);\n                newFieldsArray[currentSectionIndex] = {\n                  index: index,\n                  type: 'chart',\n                  chartType: selectedSection.fields[currentSectionIndex].chartType,\n                  stacked: selectedSection.fields[currentSectionIndex].stacked,\n                  dataset3: newArr,\n                  labels: selectedSection.fields[currentSectionIndex].labels,\n                  dataset1: selectedSection.fields[currentSectionIndex].dataset1,\n                  dataset2: selectedSection.fields[currentSectionIndex].dataset2,\n                  dataset4: selectedSection.fields[currentSectionIndex].dataset4,\n                  dataset5: selectedSection.fields[currentSectionIndex].dataset5,\n                  dataset6: selectedSection.fields[currentSectionIndex].dataset6,\n                  // Dataset labels\n                  dataset1Label: selectedSection.fields[currentSectionIndex].dataset1Label,\n                  dataset2Label: selectedSection.fields[currentSectionIndex].dataset2Label,\n                  dataset3Label: selectedSection.fields[currentSectionIndex].dataset3Label,\n                  dataset4Label: selectedSection.fields[currentSectionIndex].dataset4Label,\n                  dataset5Label: selectedSection.fields[currentSectionIndex].dataset5Label,\n                  dataset6Label: selectedSection.fields[currentSectionIndex].dataset6Label\n                };\n                newSection = {\n                  title: _this.state.selectedSection.title,\n                  // createdAt: this.state.selectedSection.createdAt,\n                  fields: newFieldsArray,\n                  id: _this.state.selectedSection.id\n                };\n                _context18.next = 9;\n                return _this.setState({\n                  selectedSection: newSection\n                });\n\n              case 9:\n                // Update database\n                db.collection('projects').doc(_this.state.projectId).collection('businessPlan').doc(Router.query.project).collection('inputs') // .collection('currentBusinessPlan')\n                //   .doc('GrcvhyJwvlWVy31QsiudoQKdKI72')\n                //   .collection('inputs')\n                .doc(_this.state.selectedSection.id).update({\n                  fields: newFieldsArray\n                });\n\n              case 10:\n              case \"end\":\n                return _context18.stop();\n            }\n          }\n        }, _callee18);\n      }));\n\n      return function (_x34, _x35, _x36, _x37) {\n        return _ref18.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"onDataset4Update\", /*#__PURE__*/function () {\n      var _ref19 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee19(data, index, currentSectionIndex, selectedSection) {\n        var newArrayObj, newObj, _newObj45, _newObj46, _newObj47, _newObj48, _newObj49, _newObj50, _newObj51, _newObj52, _newObj53, _newObj54, _newObj55, filteredArrayObj, newArr, newFieldsArray, newSection;\n\n        return _regeneratorRuntime.wrap(function _callee19$(_context19) {\n          while (1) {\n            switch (_context19.prev = _context19.next) {\n              case 0:\n                newArrayObj = [];\n\n                if (data.dataset4ValueOne) {\n                  newObj = [data.dataset4Value1 ? data.dataset4Value1 : '', selectedSection.fields[currentSectionIndex].dataset4[1], selectedSection.fields[currentSectionIndex].dataset4[2], selectedSection.fields[currentSectionIndex].dataset4[3], selectedSection.fields[currentSectionIndex].dataset4[4], selectedSection.fields[currentSectionIndex].dataset4[5], selectedSection.fields[currentSectionIndex].dataset4[6], selectedSection.fields[currentSectionIndex].dataset4[7], selectedSection.fields[currentSectionIndex].dataset4[8], selectedSection.fields[currentSectionIndex].dataset4[9], selectedSection.fields[currentSectionIndex].dataset4[10], selectedSection.fields[currentSectionIndex].dataset4[11]];\n                  newArrayObj.push.apply(newArrayObj, newObj);\n                } else if (data.dataset4Value22) {\n                  _newObj45 = [selectedSection.fields[currentSectionIndex].dataset4[0], data.dataset4Value2 ? data.dataset4Value2 : '', selectedSection.fields[currentSectionIndex].dataset4[2], selectedSection.fields[currentSectionIndex].dataset4[3], selectedSection.fields[currentSectionIndex].dataset4[4], selectedSection.fields[currentSectionIndex].dataset4[5], selectedSection.fields[currentSectionIndex].dataset4[6], selectedSection.fields[currentSectionIndex].dataset4[7], selectedSection.fields[currentSectionIndex].dataset4[8], selectedSection.fields[currentSectionIndex].dataset4[9], selectedSection.fields[currentSectionIndex].dataset4[10], selectedSection.fields[currentSectionIndex].dataset4[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj45);\n                } else if (data.dataset4Value33) {\n                  _newObj46 = [selectedSection.fields[currentSectionIndex].dataset4[0], selectedSection.fields[currentSectionIndex].dataset4[1], data.dataset4Value3 ? data.dataset4Value3 : '', selectedSection.fields[currentSectionIndex].dataset4[3], selectedSection.fields[currentSectionIndex].dataset4[4], selectedSection.fields[currentSectionIndex].dataset4[5], selectedSection.fields[currentSectionIndex].dataset4[6], selectedSection.fields[currentSectionIndex].dataset4[7], selectedSection.fields[currentSectionIndex].dataset4[8], selectedSection.fields[currentSectionIndex].dataset4[9], selectedSection.fields[currentSectionIndex].dataset4[10], selectedSection.fields[currentSectionIndex].dataset4[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj46);\n                } else if (data.dataset4Value44) {\n                  _newObj47 = [selectedSection.fields[currentSectionIndex].dataset4[0], selectedSection.fields[currentSectionIndex].dataset4[1], selectedSection.fields[currentSectionIndex].dataset4[2], data.dataset4Value4 ? data.dataset4Value4 : '', selectedSection.fields[currentSectionIndex].dataset4[4], selectedSection.fields[currentSectionIndex].dataset4[5], selectedSection.fields[currentSectionIndex].dataset4[6], selectedSection.fields[currentSectionIndex].dataset4[7], selectedSection.fields[currentSectionIndex].dataset4[8], selectedSection.fields[currentSectionIndex].dataset4[9], selectedSection.fields[currentSectionIndex].dataset4[10], selectedSection.fields[currentSectionIndex].dataset4[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj47);\n                } else if (data.dataset4Value55) {\n                  _newObj48 = [selectedSection.fields[currentSectionIndex].dataset4[0], selectedSection.fields[currentSectionIndex].dataset4[1], selectedSection.fields[currentSectionIndex].dataset4[2], selectedSection.fields[currentSectionIndex].dataset4[3], data.dataset4Value5 ? data.dataset4Value5 : '', selectedSection.fields[currentSectionIndex].dataset4[5], selectedSection.fields[currentSectionIndex].dataset4[6], selectedSection.fields[currentSectionIndex].dataset4[7], selectedSection.fields[currentSectionIndex].dataset4[8], selectedSection.fields[currentSectionIndex].dataset4[9], selectedSection.fields[currentSectionIndex].dataset4[10], selectedSection.fields[currentSectionIndex].dataset4[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj48);\n                } else if (data.dataset4Value66) {\n                  _newObj49 = [selectedSection.fields[currentSectionIndex].dataset4[0], selectedSection.fields[currentSectionIndex].dataset4[1], selectedSection.fields[currentSectionIndex].dataset4[2], selectedSection.fields[currentSectionIndex].dataset4[3], selectedSection.fields[currentSectionIndex].dataset4[4], data.dataset4Value6 ? data.dataset4Value6 : '', selectedSection.fields[currentSectionIndex].dataset4[6], selectedSection.fields[currentSectionIndex].dataset4[7], selectedSection.fields[currentSectionIndex].dataset4[8], selectedSection.fields[currentSectionIndex].dataset4[9], selectedSection.fields[currentSectionIndex].dataset4[10], selectedSection.fields[currentSectionIndex].dataset4[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj49);\n                } else if (data.dataset4Value77) {\n                  _newObj50 = [selectedSection.fields[currentSectionIndex].dataset4[0], selectedSection.fields[currentSectionIndex].dataset4[1], selectedSection.fields[currentSectionIndex].dataset4[2], selectedSection.fields[currentSectionIndex].dataset4[3], selectedSection.fields[currentSectionIndex].dataset4[4], selectedSection.fields[currentSectionIndex].dataset4[5], data.dataset4Value7 ? data.dataset4Value7 : '', selectedSection.fields[currentSectionIndex].dataset4[7], selectedSection.fields[currentSectionIndex].dataset4[8], selectedSection.fields[currentSectionIndex].dataset4[9], selectedSection.fields[currentSectionIndex].dataset4[10], selectedSection.fields[currentSectionIndex].dataset4[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj50);\n                } else if (data.dataset4Value88) {\n                  _newObj51 = [selectedSection.fields[currentSectionIndex].dataset4[0], selectedSection.fields[currentSectionIndex].dataset4[1], selectedSection.fields[currentSectionIndex].dataset4[2], selectedSection.fields[currentSectionIndex].dataset4[3], selectedSection.fields[currentSectionIndex].dataset4[4], selectedSection.fields[currentSectionIndex].dataset4[5], selectedSection.fields[currentSectionIndex].dataset4[6], data.dataset4Value8 ? data.dataset4Value8 : '', selectedSection.fields[currentSectionIndex].dataset4[8], selectedSection.fields[currentSectionIndex].dataset4[9], selectedSection.fields[currentSectionIndex].dataset4[10], selectedSection.fields[currentSectionIndex].dataset4[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj51);\n                } else if (data.dataset4Value99) {\n                  _newObj52 = [selectedSection.fields[currentSectionIndex].dataset4[0], selectedSection.fields[currentSectionIndex].dataset4[1], selectedSection.fields[currentSectionIndex].dataset4[2], selectedSection.fields[currentSectionIndex].dataset4[3], selectedSection.fields[currentSectionIndex].dataset4[4], selectedSection.fields[currentSectionIndex].dataset4[5], selectedSection.fields[currentSectionIndex].dataset4[6], selectedSection.fields[currentSectionIndex].dataset4[7], data.dataset4Value9 ? data.dataset4Value9 : '', selectedSection.fields[currentSectionIndex].dataset4[9], selectedSection.fields[currentSectionIndex].dataset4[10], selectedSection.fields[currentSectionIndex].dataset4[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj52);\n                } else if (data.dataset4Value100) {\n                  _newObj53 = [selectedSection.fields[currentSectionIndex].dataset4[0], selectedSection.fields[currentSectionIndex].dataset4[1], selectedSection.fields[currentSectionIndex].dataset4[2], selectedSection.fields[currentSectionIndex].dataset4[3], selectedSection.fields[currentSectionIndex].dataset4[4], selectedSection.fields[currentSectionIndex].dataset4[5], selectedSection.fields[currentSectionIndex].dataset4[6], selectedSection.fields[currentSectionIndex].dataset4[7], selectedSection.fields[currentSectionIndex].dataset4[8], data.dataset4Value10 ? data.dataset4Value10 : '', selectedSection.fields[currentSectionIndex].dataset4[10], selectedSection.fields[currentSectionIndex].dataset4[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj53);\n                } else if (data.dataset4Value111) {\n                  _newObj54 = [selectedSection.fields[currentSectionIndex].dataset4[0], selectedSection.fields[currentSectionIndex].dataset4[1], selectedSection.fields[currentSectionIndex].dataset4[2], selectedSection.fields[currentSectionIndex].dataset4[3], selectedSection.fields[currentSectionIndex].dataset4[4], selectedSection.fields[currentSectionIndex].dataset4[5], selectedSection.fields[currentSectionIndex].dataset4[6], selectedSection.fields[currentSectionIndex].dataset4[7], selectedSection.fields[currentSectionIndex].dataset4[8], selectedSection.fields[currentSectionIndex].dataset4[9], data.dataset4Value11 ? data.dataset4Value11 : '', selectedSection.fields[currentSectionIndex].dataset4[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj54);\n                } else if (data.dataset4Value120) {\n                  _newObj55 = [selectedSection.fields[currentSectionIndex].dataset4[0], selectedSection.fields[currentSectionIndex].dataset4[1], selectedSection.fields[currentSectionIndex].dataset4[2], selectedSection.fields[currentSectionIndex].dataset4[3], selectedSection.fields[currentSectionIndex].dataset4[4], selectedSection.fields[currentSectionIndex].dataset4[5], selectedSection.fields[currentSectionIndex].dataset4[6], selectedSection.fields[currentSectionIndex].dataset4[7], selectedSection.fields[currentSectionIndex].dataset4[8], selectedSection.fields[currentSectionIndex].dataset4[9], selectedSection.fields[currentSectionIndex].dataset4[10], data.dataset4Value12 ? data.dataset4Value12 : ''];\n                  newArrayObj.push.apply(newArrayObj, _newObj55);\n                }\n\n                filteredArrayObj = newArrayObj.map(function (obj) {\n                  if (obj == undefined) {\n                    return '';\n                  } else {\n                    return obj;\n                  }\n                });\n                newArr = filteredArrayObj.filter(function (element) {\n                  return element !== '';\n                }); // Take current array copy\n\n                newFieldsArray = _toConsumableArray(_this.state.selectedSection.fields);\n                newFieldsArray[currentSectionIndex] = {\n                  index: index,\n                  type: 'chart',\n                  chartType: selectedSection.fields[currentSectionIndex].chartType,\n                  stacked: selectedSection.fields[currentSectionIndex].stacked,\n                  dataset4: newArr,\n                  labels: selectedSection.fields[currentSectionIndex].labels,\n                  dataset1: selectedSection.fields[currentSectionIndex].dataset1,\n                  dataset2: selectedSection.fields[currentSectionIndex].dataset2,\n                  dataset3: selectedSection.fields[currentSectionIndex].dataset3,\n                  dataset5: selectedSection.fields[currentSectionIndex].dataset5,\n                  dataset6: selectedSection.fields[currentSectionIndex].dataset6,\n                  // Dataset labels\n                  dataset1Label: selectedSection.fields[currentSectionIndex].dataset1Label,\n                  dataset2Label: selectedSection.fields[currentSectionIndex].dataset2Label,\n                  dataset3Label: selectedSection.fields[currentSectionIndex].dataset3Label,\n                  dataset4Label: selectedSection.fields[currentSectionIndex].dataset4Label,\n                  dataset5Label: selectedSection.fields[currentSectionIndex].dataset5Label,\n                  dataset6Label: selectedSection.fields[currentSectionIndex].dataset6Label\n                };\n                newSection = {\n                  title: _this.state.selectedSection.title,\n                  // createdAt: this.state.selectedSection.createdAt,\n                  fields: newFieldsArray,\n                  id: _this.state.selectedSection.id\n                };\n                _context19.next = 9;\n                return _this.setState({\n                  selectedSection: newSection\n                });\n\n              case 9:\n                // Update database\n                db.collection('projects').doc(_this.state.projectId).collection('businessPlan').doc(Router.query.project).collection('inputs') // .collection('currentBusinessPlan')\n                //   .doc('GrcvhyJwvlWVy31QsiudoQKdKI72')\n                //   .collection('inputs')\n                .doc(_this.state.selectedSection.id).update({\n                  fields: newFieldsArray\n                });\n\n              case 10:\n              case \"end\":\n                return _context19.stop();\n            }\n          }\n        }, _callee19);\n      }));\n\n      return function (_x38, _x39, _x40, _x41) {\n        return _ref19.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"onDataset5Update\", /*#__PURE__*/function () {\n      var _ref20 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee20(data, index, currentSectionIndex, selectedSection) {\n        var newArrayObj, newObj, _newObj56, _newObj57, _newObj58, _newObj59, _newObj60, _newObj61, _newObj62, _newObj63, _newObj64, _newObj65, _newObj66, filteredArrayObj, newArr, newFieldsArray, newSection;\n\n        return _regeneratorRuntime.wrap(function _callee20$(_context20) {\n          while (1) {\n            switch (_context20.prev = _context20.next) {\n              case 0:\n                newArrayObj = [];\n\n                if (data.dataset5ValueOne) {\n                  newObj = [data.dataset5Value1 ? data.dataset5Value1 : '', selectedSection.fields[currentSectionIndex].dataset5[1], selectedSection.fields[currentSectionIndex].dataset5[2], selectedSection.fields[currentSectionIndex].dataset5[3], selectedSection.fields[currentSectionIndex].dataset5[4], selectedSection.fields[currentSectionIndex].dataset5[5], selectedSection.fields[currentSectionIndex].dataset5[6], selectedSection.fields[currentSectionIndex].dataset5[7], selectedSection.fields[currentSectionIndex].dataset5[8], selectedSection.fields[currentSectionIndex].dataset5[9], selectedSection.fields[currentSectionIndex].dataset5[10], selectedSection.fields[currentSectionIndex].dataset5[11]];\n                  newArrayObj.push.apply(newArrayObj, newObj);\n                } else if (data.dataset5Value22) {\n                  _newObj56 = [selectedSection.fields[currentSectionIndex].dataset5[0], data.dataset5Value2 ? data.dataset5Value2 : '', selectedSection.fields[currentSectionIndex].dataset5[2], selectedSection.fields[currentSectionIndex].dataset5[3], selectedSection.fields[currentSectionIndex].dataset5[4], selectedSection.fields[currentSectionIndex].dataset5[5], selectedSection.fields[currentSectionIndex].dataset5[6], selectedSection.fields[currentSectionIndex].dataset5[7], selectedSection.fields[currentSectionIndex].dataset5[8], selectedSection.fields[currentSectionIndex].dataset5[9], selectedSection.fields[currentSectionIndex].dataset5[10], selectedSection.fields[currentSectionIndex].dataset5[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj56);\n                } else if (data.dataset5Value33) {\n                  _newObj57 = [selectedSection.fields[currentSectionIndex].dataset5[0], selectedSection.fields[currentSectionIndex].dataset5[1], data.dataset5Value3 ? data.dataset5Value3 : '', selectedSection.fields[currentSectionIndex].dataset5[3], selectedSection.fields[currentSectionIndex].dataset5[4], selectedSection.fields[currentSectionIndex].dataset5[5], selectedSection.fields[currentSectionIndex].dataset5[6], selectedSection.fields[currentSectionIndex].dataset5[7], selectedSection.fields[currentSectionIndex].dataset5[8], selectedSection.fields[currentSectionIndex].dataset5[9], selectedSection.fields[currentSectionIndex].dataset5[10], selectedSection.fields[currentSectionIndex].dataset5[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj57);\n                } else if (data.dataset5Value44) {\n                  _newObj58 = [selectedSection.fields[currentSectionIndex].dataset5[0], selectedSection.fields[currentSectionIndex].dataset5[1], selectedSection.fields[currentSectionIndex].dataset5[2], data.dataset5Value4 ? data.dataset5Value4 : '', selectedSection.fields[currentSectionIndex].dataset5[4], selectedSection.fields[currentSectionIndex].dataset5[5], selectedSection.fields[currentSectionIndex].dataset5[6], selectedSection.fields[currentSectionIndex].dataset5[7], selectedSection.fields[currentSectionIndex].dataset5[8], selectedSection.fields[currentSectionIndex].dataset5[9], selectedSection.fields[currentSectionIndex].dataset5[10], selectedSection.fields[currentSectionIndex].dataset5[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj58);\n                } else if (data.dataset5Value55) {\n                  _newObj59 = [selectedSection.fields[currentSectionIndex].dataset5[0], selectedSection.fields[currentSectionIndex].dataset5[1], selectedSection.fields[currentSectionIndex].dataset5[2], selectedSection.fields[currentSectionIndex].dataset5[3], data.dataset5Value5 ? data.dataset5Value5 : '', selectedSection.fields[currentSectionIndex].dataset5[5], selectedSection.fields[currentSectionIndex].dataset5[6], selectedSection.fields[currentSectionIndex].dataset5[7], selectedSection.fields[currentSectionIndex].dataset5[8], selectedSection.fields[currentSectionIndex].dataset5[9], selectedSection.fields[currentSectionIndex].dataset5[10], selectedSection.fields[currentSectionIndex].dataset5[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj59);\n                } else if (data.dataset5Value66) {\n                  _newObj60 = [selectedSection.fields[currentSectionIndex].dataset5[0], selectedSection.fields[currentSectionIndex].dataset5[1], selectedSection.fields[currentSectionIndex].dataset5[2], selectedSection.fields[currentSectionIndex].dataset5[3], selectedSection.fields[currentSectionIndex].dataset5[4], data.dataset5Value6 ? data.dataset5Value6 : '', selectedSection.fields[currentSectionIndex].dataset5[6], selectedSection.fields[currentSectionIndex].dataset5[7], selectedSection.fields[currentSectionIndex].dataset5[8], selectedSection.fields[currentSectionIndex].dataset5[9], selectedSection.fields[currentSectionIndex].dataset5[10], selectedSection.fields[currentSectionIndex].dataset5[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj60);\n                } else if (data.dataset5Value77) {\n                  _newObj61 = [selectedSection.fields[currentSectionIndex].dataset5[0], selectedSection.fields[currentSectionIndex].dataset5[1], selectedSection.fields[currentSectionIndex].dataset5[2], selectedSection.fields[currentSectionIndex].dataset5[3], selectedSection.fields[currentSectionIndex].dataset5[4], selectedSection.fields[currentSectionIndex].dataset5[5], data.dataset5Value7 ? data.dataset5Value7 : '', selectedSection.fields[currentSectionIndex].dataset5[7], selectedSection.fields[currentSectionIndex].dataset5[8], selectedSection.fields[currentSectionIndex].dataset5[9], selectedSection.fields[currentSectionIndex].dataset5[10], selectedSection.fields[currentSectionIndex].dataset5[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj61);\n                } else if (data.dataset5Value88) {\n                  _newObj62 = [selectedSection.fields[currentSectionIndex].dataset5[0], selectedSection.fields[currentSectionIndex].dataset5[1], selectedSection.fields[currentSectionIndex].dataset5[2], selectedSection.fields[currentSectionIndex].dataset5[3], selectedSection.fields[currentSectionIndex].dataset5[4], selectedSection.fields[currentSectionIndex].dataset5[5], selectedSection.fields[currentSectionIndex].dataset5[6], data.dataset5Value8 ? data.dataset5Value8 : '', selectedSection.fields[currentSectionIndex].dataset5[8], selectedSection.fields[currentSectionIndex].dataset5[9], selectedSection.fields[currentSectionIndex].dataset5[10], selectedSection.fields[currentSectionIndex].dataset5[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj62);\n                } else if (data.dataset5Value99) {\n                  _newObj63 = [selectedSection.fields[currentSectionIndex].dataset5[0], selectedSection.fields[currentSectionIndex].dataset5[1], selectedSection.fields[currentSectionIndex].dataset5[2], selectedSection.fields[currentSectionIndex].dataset5[3], selectedSection.fields[currentSectionIndex].dataset5[4], selectedSection.fields[currentSectionIndex].dataset5[5], selectedSection.fields[currentSectionIndex].dataset5[6], selectedSection.fields[currentSectionIndex].dataset5[7], data.dataset5Value9 ? data.dataset5Value9 : '', selectedSection.fields[currentSectionIndex].dataset5[9], selectedSection.fields[currentSectionIndex].dataset5[10], selectedSection.fields[currentSectionIndex].dataset5[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj63);\n                } else if (data.dataset5Value100) {\n                  _newObj64 = [selectedSection.fields[currentSectionIndex].dataset5[0], selectedSection.fields[currentSectionIndex].dataset5[1], selectedSection.fields[currentSectionIndex].dataset5[2], selectedSection.fields[currentSectionIndex].dataset5[3], selectedSection.fields[currentSectionIndex].dataset5[4], selectedSection.fields[currentSectionIndex].dataset5[5], selectedSection.fields[currentSectionIndex].dataset5[6], selectedSection.fields[currentSectionIndex].dataset5[7], selectedSection.fields[currentSectionIndex].dataset5[8], data.dataset5Value10 ? data.dataset5Value10 : '', selectedSection.fields[currentSectionIndex].dataset5[10], selectedSection.fields[currentSectionIndex].dataset5[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj64);\n                } else if (data.dataset5Value111) {\n                  _newObj65 = [selectedSection.fields[currentSectionIndex].dataset5[0], selectedSection.fields[currentSectionIndex].dataset5[1], selectedSection.fields[currentSectionIndex].dataset5[2], selectedSection.fields[currentSectionIndex].dataset5[3], selectedSection.fields[currentSectionIndex].dataset5[4], selectedSection.fields[currentSectionIndex].dataset5[5], selectedSection.fields[currentSectionIndex].dataset5[6], selectedSection.fields[currentSectionIndex].dataset5[7], selectedSection.fields[currentSectionIndex].dataset5[8], selectedSection.fields[currentSectionIndex].dataset5[9], data.dataset5Value11 ? data.dataset5Value11 : '', selectedSection.fields[currentSectionIndex].dataset5[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj65);\n                } else if (data.dataset5Value120) {\n                  _newObj66 = [selectedSection.fields[currentSectionIndex].dataset5[0], selectedSection.fields[currentSectionIndex].dataset5[1], selectedSection.fields[currentSectionIndex].dataset5[2], selectedSection.fields[currentSectionIndex].dataset5[3], selectedSection.fields[currentSectionIndex].dataset5[4], selectedSection.fields[currentSectionIndex].dataset5[5], selectedSection.fields[currentSectionIndex].dataset5[6], selectedSection.fields[currentSectionIndex].dataset5[7], selectedSection.fields[currentSectionIndex].dataset5[8], selectedSection.fields[currentSectionIndex].dataset5[9], selectedSection.fields[currentSectionIndex].dataset5[10], data.dataset5Value12 ? data.dataset5Value12 : ''];\n                  newArrayObj.push.apply(newArrayObj, _newObj66);\n                }\n\n                filteredArrayObj = newArrayObj.map(function (obj) {\n                  if (obj == undefined) {\n                    return '';\n                  } else {\n                    return obj;\n                  }\n                });\n                newArr = filteredArrayObj.filter(function (element) {\n                  return element !== '';\n                }); // Take current array copy\n\n                newFieldsArray = _toConsumableArray(_this.state.selectedSection.fields);\n                newFieldsArray[currentSectionIndex] = {\n                  index: index,\n                  type: 'chart',\n                  chartType: selectedSection.fields[currentSectionIndex].chartType,\n                  stacked: selectedSection.fields[currentSectionIndex].stacked,\n                  dataset5: newArr,\n                  labels: selectedSection.fields[currentSectionIndex].labels,\n                  dataset1: selectedSection.fields[currentSectionIndex].dataset1,\n                  dataset2: selectedSection.fields[currentSectionIndex].dataset2,\n                  dataset3: selectedSection.fields[currentSectionIndex].dataset3,\n                  dataset4: selectedSection.fields[currentSectionIndex].dataset4,\n                  dataset6: selectedSection.fields[currentSectionIndex].dataset6,\n                  // Dataset labels\n                  dataset1Label: selectedSection.fields[currentSectionIndex].dataset1Label,\n                  dataset2Label: selectedSection.fields[currentSectionIndex].dataset2Label,\n                  dataset3Label: selectedSection.fields[currentSectionIndex].dataset3Label,\n                  dataset4Label: selectedSection.fields[currentSectionIndex].dataset4Label,\n                  dataset5Label: selectedSection.fields[currentSectionIndex].dataset5Label,\n                  dataset6Label: selectedSection.fields[currentSectionIndex].dataset6Label\n                };\n                newSection = {\n                  title: _this.state.selectedSection.title,\n                  // createdAt: this.state.selectedSection.createdAt,\n                  fields: newFieldsArray,\n                  id: _this.state.selectedSection.id\n                };\n                _context20.next = 9;\n                return _this.setState({\n                  selectedSection: newSection\n                });\n\n              case 9:\n                // Update database\n                db.collection('projects').doc(_this.state.projectId).collection('businessPlan').doc(Router.query.project).collection('inputs') // .collection('currentBusinessPlan')\n                //   .doc('GrcvhyJwvlWVy31QsiudoQKdKI72')\n                //   .collection('inputs')\n                .doc(_this.state.selectedSection.id).update({\n                  fields: newFieldsArray\n                });\n\n              case 10:\n              case \"end\":\n                return _context20.stop();\n            }\n          }\n        }, _callee20);\n      }));\n\n      return function (_x42, _x43, _x44, _x45) {\n        return _ref20.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"onDataset6Update\", /*#__PURE__*/function () {\n      var _ref21 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee21(data, index, currentSectionIndex, selectedSection) {\n        var newArrayObj, newObj, _newObj67, _newObj68, _newObj69, _newObj70, _newObj71, _newObj72, _newObj73, _newObj74, _newObj75, _newObj76, _newObj77, filteredArrayObj, newArr, newFieldsArray, newSection;\n\n        return _regeneratorRuntime.wrap(function _callee21$(_context21) {\n          while (1) {\n            switch (_context21.prev = _context21.next) {\n              case 0:\n                newArrayObj = [];\n\n                if (data.dataset6ValueOne) {\n                  newObj = [data.dataset6Value1 ? data.dataset6Value1 : '', selectedSection.fields[currentSectionIndex].dataset6[1], selectedSection.fields[currentSectionIndex].dataset6[2], selectedSection.fields[currentSectionIndex].dataset6[3], selectedSection.fields[currentSectionIndex].dataset6[4], selectedSection.fields[currentSectionIndex].dataset6[5], selectedSection.fields[currentSectionIndex].dataset6[6], selectedSection.fields[currentSectionIndex].dataset6[7], selectedSection.fields[currentSectionIndex].dataset6[8], selectedSection.fields[currentSectionIndex].dataset6[9], selectedSection.fields[currentSectionIndex].dataset6[10], selectedSection.fields[currentSectionIndex].dataset6[11]];\n                  newArrayObj.push.apply(newArrayObj, newObj);\n                } else if (data.dataset6Value22) {\n                  _newObj67 = [selectedSection.fields[currentSectionIndex].dataset6[0], data.dataset6Value2 ? data.dataset6Value2 : '', selectedSection.fields[currentSectionIndex].dataset6[2], selectedSection.fields[currentSectionIndex].dataset6[3], selectedSection.fields[currentSectionIndex].dataset6[4], selectedSection.fields[currentSectionIndex].dataset6[5], selectedSection.fields[currentSectionIndex].dataset6[6], selectedSection.fields[currentSectionIndex].dataset6[7], selectedSection.fields[currentSectionIndex].dataset6[8], selectedSection.fields[currentSectionIndex].dataset6[9], selectedSection.fields[currentSectionIndex].dataset6[10], selectedSection.fields[currentSectionIndex].dataset6[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj67);\n                } else if (data.dataset6Value33) {\n                  _newObj68 = [selectedSection.fields[currentSectionIndex].dataset6[0], selectedSection.fields[currentSectionIndex].dataset6[1], data.dataset6Value3 ? data.dataset6Value3 : '', selectedSection.fields[currentSectionIndex].dataset6[3], selectedSection.fields[currentSectionIndex].dataset6[4], selectedSection.fields[currentSectionIndex].dataset6[5], selectedSection.fields[currentSectionIndex].dataset6[6], selectedSection.fields[currentSectionIndex].dataset6[7], selectedSection.fields[currentSectionIndex].dataset6[8], selectedSection.fields[currentSectionIndex].dataset6[9], selectedSection.fields[currentSectionIndex].dataset6[10], selectedSection.fields[currentSectionIndex].dataset6[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj68);\n                } else if (data.dataset6Value44) {\n                  _newObj69 = [selectedSection.fields[currentSectionIndex].dataset6[0], selectedSection.fields[currentSectionIndex].dataset6[1], selectedSection.fields[currentSectionIndex].dataset6[2], data.dataset6Value4 ? data.dataset6Value4 : '', selectedSection.fields[currentSectionIndex].dataset6[4], selectedSection.fields[currentSectionIndex].dataset6[5], selectedSection.fields[currentSectionIndex].dataset6[6], selectedSection.fields[currentSectionIndex].dataset6[7], selectedSection.fields[currentSectionIndex].dataset6[8], selectedSection.fields[currentSectionIndex].dataset6[9], selectedSection.fields[currentSectionIndex].dataset6[10], selectedSection.fields[currentSectionIndex].dataset6[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj69);\n                } else if (data.dataset6Value55) {\n                  _newObj70 = [selectedSection.fields[currentSectionIndex].dataset6[0], selectedSection.fields[currentSectionIndex].dataset6[1], selectedSection.fields[currentSectionIndex].dataset6[2], selectedSection.fields[currentSectionIndex].dataset6[3], data.dataset6Value5 ? data.dataset6Value5 : '', selectedSection.fields[currentSectionIndex].dataset6[5], selectedSection.fields[currentSectionIndex].dataset6[6], selectedSection.fields[currentSectionIndex].dataset6[7], selectedSection.fields[currentSectionIndex].dataset6[8], selectedSection.fields[currentSectionIndex].dataset6[9], selectedSection.fields[currentSectionIndex].dataset6[10], selectedSection.fields[currentSectionIndex].dataset6[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj70);\n                } else if (data.dataset6Value66) {\n                  _newObj71 = [selectedSection.fields[currentSectionIndex].dataset6[0], selectedSection.fields[currentSectionIndex].dataset6[1], selectedSection.fields[currentSectionIndex].dataset6[2], selectedSection.fields[currentSectionIndex].dataset6[3], selectedSection.fields[currentSectionIndex].dataset6[4], data.dataset6Value6 ? data.dataset6Value6 : '', selectedSection.fields[currentSectionIndex].dataset6[6], selectedSection.fields[currentSectionIndex].dataset6[7], selectedSection.fields[currentSectionIndex].dataset6[8], selectedSection.fields[currentSectionIndex].dataset6[9], selectedSection.fields[currentSectionIndex].dataset6[10], selectedSection.fields[currentSectionIndex].dataset6[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj71);\n                } else if (data.dataset6Value77) {\n                  _newObj72 = [selectedSection.fields[currentSectionIndex].dataset6[0], selectedSection.fields[currentSectionIndex].dataset6[1], selectedSection.fields[currentSectionIndex].dataset6[2], selectedSection.fields[currentSectionIndex].dataset6[3], selectedSection.fields[currentSectionIndex].dataset6[4], selectedSection.fields[currentSectionIndex].dataset6[5], data.dataset6Value7 ? data.dataset6Value7 : '', selectedSection.fields[currentSectionIndex].dataset6[7], selectedSection.fields[currentSectionIndex].dataset6[8], selectedSection.fields[currentSectionIndex].dataset6[9], selectedSection.fields[currentSectionIndex].dataset6[10], selectedSection.fields[currentSectionIndex].dataset6[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj72);\n                } else if (data.dataset6Value88) {\n                  _newObj73 = [selectedSection.fields[currentSectionIndex].dataset6[0], selectedSection.fields[currentSectionIndex].dataset6[1], selectedSection.fields[currentSectionIndex].dataset6[2], selectedSection.fields[currentSectionIndex].dataset6[3], selectedSection.fields[currentSectionIndex].dataset6[4], selectedSection.fields[currentSectionIndex].dataset6[5], selectedSection.fields[currentSectionIndex].dataset6[6], data.dataset6Value8 ? data.dataset6Value8 : '', selectedSection.fields[currentSectionIndex].dataset6[8], selectedSection.fields[currentSectionIndex].dataset6[9], selectedSection.fields[currentSectionIndex].dataset6[10], selectedSection.fields[currentSectionIndex].dataset6[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj73);\n                } else if (data.dataset6Value99) {\n                  _newObj74 = [selectedSection.fields[currentSectionIndex].dataset6[0], selectedSection.fields[currentSectionIndex].dataset6[1], selectedSection.fields[currentSectionIndex].dataset6[2], selectedSection.fields[currentSectionIndex].dataset6[3], selectedSection.fields[currentSectionIndex].dataset6[4], selectedSection.fields[currentSectionIndex].dataset6[5], selectedSection.fields[currentSectionIndex].dataset6[6], selectedSection.fields[currentSectionIndex].dataset6[7], data.dataset6Value9 ? data.dataset6Value9 : '', selectedSection.fields[currentSectionIndex].dataset6[9], selectedSection.fields[currentSectionIndex].dataset6[10], selectedSection.fields[currentSectionIndex].dataset6[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj74);\n                } else if (data.dataset6Value100) {\n                  _newObj75 = [selectedSection.fields[currentSectionIndex].dataset6[0], selectedSection.fields[currentSectionIndex].dataset6[1], selectedSection.fields[currentSectionIndex].dataset6[2], selectedSection.fields[currentSectionIndex].dataset6[3], selectedSection.fields[currentSectionIndex].dataset6[4], selectedSection.fields[currentSectionIndex].dataset6[5], selectedSection.fields[currentSectionIndex].dataset6[6], selectedSection.fields[currentSectionIndex].dataset6[7], selectedSection.fields[currentSectionIndex].dataset6[8], data.dataset6Value10 ? data.dataset6Value10 : '', selectedSection.fields[currentSectionIndex].dataset6[10], selectedSection.fields[currentSectionIndex].dataset6[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj75);\n                } else if (data.dataset6Value111) {\n                  _newObj76 = [selectedSection.fields[currentSectionIndex].dataset6[0], selectedSection.fields[currentSectionIndex].dataset6[1], selectedSection.fields[currentSectionIndex].dataset6[2], selectedSection.fields[currentSectionIndex].dataset6[3], selectedSection.fields[currentSectionIndex].dataset6[4], selectedSection.fields[currentSectionIndex].dataset6[5], selectedSection.fields[currentSectionIndex].dataset6[6], selectedSection.fields[currentSectionIndex].dataset6[7], selectedSection.fields[currentSectionIndex].dataset6[8], selectedSection.fields[currentSectionIndex].dataset6[9], data.dataset6Value11 ? data.dataset6Value11 : '', selectedSection.fields[currentSectionIndex].dataset6[11]];\n                  newArrayObj.push.apply(newArrayObj, _newObj76);\n                } else if (data.dataset6Value120) {\n                  _newObj77 = [selectedSection.fields[currentSectionIndex].dataset6[0], selectedSection.fields[currentSectionIndex].dataset6[1], selectedSection.fields[currentSectionIndex].dataset6[2], selectedSection.fields[currentSectionIndex].dataset6[3], selectedSection.fields[currentSectionIndex].dataset6[4], selectedSection.fields[currentSectionIndex].dataset6[5], selectedSection.fields[currentSectionIndex].dataset6[6], selectedSection.fields[currentSectionIndex].dataset6[7], selectedSection.fields[currentSectionIndex].dataset6[8], selectedSection.fields[currentSectionIndex].dataset6[9], selectedSection.fields[currentSectionIndex].dataset6[10], data.dataset6Value12 ? data.dataset6Value12 : ''];\n                  newArrayObj.push.apply(newArrayObj, _newObj77);\n                }\n\n                filteredArrayObj = newArrayObj.map(function (obj) {\n                  if (obj == undefined) {\n                    return '';\n                  } else {\n                    return obj;\n                  }\n                });\n                newArr = filteredArrayObj.filter(function (element) {\n                  return element !== '';\n                }); // Take current array copy\n\n                newFieldsArray = _toConsumableArray(_this.state.selectedSection.fields);\n                newFieldsArray[currentSectionIndex] = {\n                  index: index,\n                  type: 'chart',\n                  chartType: selectedSection.fields[currentSectionIndex].chartType,\n                  stacked: selectedSection.fields[currentSectionIndex].stacked,\n                  dataset6: newArr,\n                  labels: selectedSection.fields[currentSectionIndex].labels,\n                  dataset1: selectedSection.fields[currentSectionIndex].dataset1,\n                  dataset2: selectedSection.fields[currentSectionIndex].dataset2,\n                  dataset3: selectedSection.fields[currentSectionIndex].dataset3,\n                  dataset4: selectedSection.fields[currentSectionIndex].dataset4,\n                  dataset5: selectedSection.fields[currentSectionIndex].dataset5,\n                  // Dataset labels\n                  dataset1Label: selectedSection.fields[currentSectionIndex].dataset1Label,\n                  dataset2Label: selectedSection.fields[currentSectionIndex].dataset2Label,\n                  dataset3Label: selectedSection.fields[currentSectionIndex].dataset3Label,\n                  dataset4Label: selectedSection.fields[currentSectionIndex].dataset4Label,\n                  dataset5Label: selectedSection.fields[currentSectionIndex].dataset5Label,\n                  dataset6Label: selectedSection.fields[currentSectionIndex].dataset6Label\n                };\n                newSection = {\n                  title: _this.state.selectedSection.title,\n                  // createdAt: this.state.selectedSection.createdAt,\n                  fields: newFieldsArray,\n                  id: _this.state.selectedSection.id\n                };\n                _context21.next = 9;\n                return _this.setState({\n                  selectedSection: newSection\n                });\n\n              case 9:\n                // Update database\n                db.collection('projects').doc(_this.state.projectId).collection('businessPlan').doc(Router.query.project).collection('inputs') // .collection('currentBusinessPlan')\n                //   .doc('GrcvhyJwvlWVy31QsiudoQKdKI72')\n                //   .collection('inputs')\n                .doc(_this.state.selectedSection.id).update({\n                  fields: newFieldsArray\n                });\n\n              case 10:\n              case \"end\":\n                return _context21.stop();\n            }\n          }\n        }, _callee21);\n      }));\n\n      return function (_x46, _x47, _x48, _x49) {\n        return _ref21.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"onDatasetLabel1Update\", /*#__PURE__*/function () {\n      var _ref22 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee22(data, index, currentSectionIndex, selectedSection) {\n        var newFieldsArray, newSection;\n        return _regeneratorRuntime.wrap(function _callee22$(_context22) {\n          while (1) {\n            switch (_context22.prev = _context22.next) {\n              case 0:\n                // Take current array copy\n                newFieldsArray = _toConsumableArray(_this.state.selectedSection.fields);\n                newFieldsArray[currentSectionIndex] = {\n                  index: index,\n                  type: 'chart',\n                  chartType: selectedSection.fields[currentSectionIndex].chartType,\n                  stacked: selectedSection.fields[currentSectionIndex].stacked,\n                  labels: selectedSection.fields[currentSectionIndex].labels,\n                  dataset1: selectedSection.fields[currentSectionIndex].dataset1,\n                  dataset2: selectedSection.fields[currentSectionIndex].dataset2,\n                  dataset3: selectedSection.fields[currentSectionIndex].dataset3,\n                  dataset4: selectedSection.fields[currentSectionIndex].dataset4,\n                  dataset5: selectedSection.fields[currentSectionIndex].dataset5,\n                  dataset6: selectedSection.fields[currentSectionIndex].dataset6,\n                  // Dataset labels\n                  dataset1Label: data.dataset1Label,\n                  dataset2Label: selectedSection.fields[currentSectionIndex].dataset2Label,\n                  dataset3Label: selectedSection.fields[currentSectionIndex].dataset3Label,\n                  dataset4Label: selectedSection.fields[currentSectionIndex].dataset4Label,\n                  dataset5Label: selectedSection.fields[currentSectionIndex].dataset5Label,\n                  dataset6Label: selectedSection.fields[currentSectionIndex].dataset6Label\n                };\n                newSection = {\n                  title: _this.state.selectedSection.title,\n                  // createdAt: this.state.selectedSection.createdAt,\n                  fields: newFieldsArray,\n                  id: _this.state.selectedSection.id\n                };\n                _context22.next = 5;\n                return _this.setState({\n                  selectedSection: newSection\n                });\n\n              case 5:\n                // Update database\n                db.collection('projects').doc(_this.state.projectId).collection('businessPlan').doc(Router.query.project).collection('inputs') // .collection('currentBusinessPlan')\n                //   .doc('GrcvhyJwvlWVy31QsiudoQKdKI72')\n                //   .collection('inputs')\n                .doc(_this.state.selectedSection.id).update({\n                  fields: newFieldsArray\n                });\n\n              case 6:\n              case \"end\":\n                return _context22.stop();\n            }\n          }\n        }, _callee22);\n      }));\n\n      return function (_x50, _x51, _x52, _x53) {\n        return _ref22.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"onDatasetLabel2Update\", /*#__PURE__*/function () {\n      var _ref23 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee23(data, index, currentSectionIndex, selectedSection) {\n        var newFieldsArray, newSection;\n        return _regeneratorRuntime.wrap(function _callee23$(_context23) {\n          while (1) {\n            switch (_context23.prev = _context23.next) {\n              case 0:\n                // Take current array copy\n                newFieldsArray = _toConsumableArray(_this.state.selectedSection.fields);\n                newFieldsArray[currentSectionIndex] = {\n                  index: index,\n                  type: 'chart',\n                  chartType: selectedSection.fields[currentSectionIndex].chartType,\n                  stacked: selectedSection.fields[currentSectionIndex].stacked,\n                  labels: selectedSection.fields[currentSectionIndex].labels,\n                  dataset1: selectedSection.fields[currentSectionIndex].dataset1,\n                  dataset2: selectedSection.fields[currentSectionIndex].dataset2,\n                  dataset3: selectedSection.fields[currentSectionIndex].dataset3,\n                  dataset4: selectedSection.fields[currentSectionIndex].dataset4,\n                  dataset5: selectedSection.fields[currentSectionIndex].dataset5,\n                  dataset6: selectedSection.fields[currentSectionIndex].dataset6,\n                  // Dataset labels\n                  dataset1Label: selectedSection.fields[currentSectionIndex].dataset1Label,\n                  dataset2Label: data.dataset2Label,\n                  dataset3Label: selectedSection.fields[currentSectionIndex].dataset3Label,\n                  dataset4Label: selectedSection.fields[currentSectionIndex].dataset4Label,\n                  dataset5Label: selectedSection.fields[currentSectionIndex].dataset5Label,\n                  dataset6Label: selectedSection.fields[currentSectionIndex].dataset6Label\n                };\n                newSection = {\n                  title: _this.state.selectedSection.title,\n                  // createdAt: this.state.selectedSection.createdAt,\n                  fields: newFieldsArray,\n                  id: _this.state.selectedSection.id\n                };\n                _context23.next = 5;\n                return _this.setState({\n                  selectedSection: newSection\n                });\n\n              case 5:\n                // Update database\n                db.collection('projects').doc(_this.state.projectId).collection('businessPlan').doc(Router.query.project).collection('inputs') // .collection('currentBusinessPlan')\n                //   .doc('GrcvhyJwvlWVy31QsiudoQKdKI72')\n                //   .collection('inputs')\n                .doc(_this.state.selectedSection.id).update({\n                  fields: newFieldsArray\n                });\n\n              case 6:\n              case \"end\":\n                return _context23.stop();\n            }\n          }\n        }, _callee23);\n      }));\n\n      return function (_x54, _x55, _x56, _x57) {\n        return _ref23.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"onDatasetLabel3Update\", /*#__PURE__*/function () {\n      var _ref24 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee24(data, index, currentSectionIndex, selectedSection) {\n        var newFieldsArray, newSection;\n        return _regeneratorRuntime.wrap(function _callee24$(_context24) {\n          while (1) {\n            switch (_context24.prev = _context24.next) {\n              case 0:\n                // Take current array copy\n                newFieldsArray = _toConsumableArray(_this.state.selectedSection.fields);\n                newFieldsArray[currentSectionIndex] = {\n                  index: index,\n                  type: 'chart',\n                  chartType: selectedSection.fields[currentSectionIndex].chartType,\n                  stacked: selectedSection.fields[currentSectionIndex].stacked,\n                  labels: selectedSection.fields[currentSectionIndex].labels,\n                  dataset1: selectedSection.fields[currentSectionIndex].dataset1,\n                  dataset2: selectedSection.fields[currentSectionIndex].dataset2,\n                  dataset3: selectedSection.fields[currentSectionIndex].dataset3,\n                  dataset4: selectedSection.fields[currentSectionIndex].dataset4,\n                  dataset5: selectedSection.fields[currentSectionIndex].dataset5,\n                  dataset6: selectedSection.fields[currentSectionIndex].dataset6,\n                  // Dataset labels\n                  dataset1Label: selectedSection.fields[currentSectionIndex].dataset1Label,\n                  dataset2Label: selectedSection.fields[currentSectionIndex].dataset2Label,\n                  dataset3Label: data.dataset3Label,\n                  dataset4Label: selectedSection.fields[currentSectionIndex].dataset4Label,\n                  dataset5Label: selectedSection.fields[currentSectionIndex].dataset5Label,\n                  dataset6Label: selectedSection.fields[currentSectionIndex].dataset6Label\n                };\n                newSection = {\n                  title: _this.state.selectedSection.title,\n                  // createdAt: this.state.selectedSection.createdAt,\n                  fields: newFieldsArray,\n                  id: _this.state.selectedSection.id\n                };\n                _context24.next = 5;\n                return _this.setState({\n                  selectedSection: newSection\n                });\n\n              case 5:\n                // Update database\n                db.collection('projects').doc(_this.state.projectId).collection('businessPlan').doc(Router.query.project).collection('inputs') // .collection('currentBusinessPlan')\n                //   .doc('GrcvhyJwvlWVy31QsiudoQKdKI72')\n                //   .collection('inputs')\n                .doc(_this.state.selectedSection.id).update({\n                  fields: newFieldsArray\n                });\n\n              case 6:\n              case \"end\":\n                return _context24.stop();\n            }\n          }\n        }, _callee24);\n      }));\n\n      return function (_x58, _x59, _x60, _x61) {\n        return _ref24.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"onDatasetLabel4Update\", /*#__PURE__*/function () {\n      var _ref25 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee25(data, index, currentSectionIndex, selectedSection) {\n        var newFieldsArray, newSection;\n        return _regeneratorRuntime.wrap(function _callee25$(_context25) {\n          while (1) {\n            switch (_context25.prev = _context25.next) {\n              case 0:\n                // Take current array copy\n                newFieldsArray = _toConsumableArray(_this.state.selectedSection.fields);\n                newFieldsArray[currentSectionIndex] = {\n                  index: index,\n                  type: 'chart',\n                  chartType: selectedSection.fields[currentSectionIndex].chartType,\n                  stacked: selectedSection.fields[currentSectionIndex].stacked,\n                  labels: selectedSection.fields[currentSectionIndex].labels,\n                  dataset1: selectedSection.fields[currentSectionIndex].dataset1,\n                  dataset2: selectedSection.fields[currentSectionIndex].dataset2,\n                  dataset3: selectedSection.fields[currentSectionIndex].dataset3,\n                  dataset4: selectedSection.fields[currentSectionIndex].dataset4,\n                  dataset5: selectedSection.fields[currentSectionIndex].dataset5,\n                  dataset6: selectedSection.fields[currentSectionIndex].dataset6,\n                  // Dataset labels\n                  dataset1Label: selectedSection.fields[currentSectionIndex].dataset1Label,\n                  dataset2Label: selectedSection.fields[currentSectionIndex].dataset2Label,\n                  dataset3Label: selectedSection.fields[currentSectionIndex].dataset3Label,\n                  dataset4Label: data.dataset4Label,\n                  dataset5Label: selectedSection.fields[currentSectionIndex].dataset5Label,\n                  dataset6Label: selectedSection.fields[currentSectionIndex].dataset6Label\n                };\n                newSection = {\n                  title: _this.state.selectedSection.title,\n                  // createdAt: this.state.selectedSection.createdAt,\n                  fields: newFieldsArray,\n                  id: _this.state.selectedSection.id\n                };\n                _context25.next = 5;\n                return _this.setState({\n                  selectedSection: newSection\n                });\n\n              case 5:\n                // Update database\n                db.collection('projects').doc(_this.state.projectId).collection('businessPlan').doc(Router.query.project).collection('inputs') // .collection('currentBusinessPlan')\n                //   .doc('GrcvhyJwvlWVy31QsiudoQKdKI72')\n                //   .collection('inputs')\n                .doc(_this.state.selectedSection.id).update({\n                  fields: newFieldsArray\n                });\n\n              case 6:\n              case \"end\":\n                return _context25.stop();\n            }\n          }\n        }, _callee25);\n      }));\n\n      return function (_x62, _x63, _x64, _x65) {\n        return _ref25.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"onDatasetLabel5Update\", /*#__PURE__*/function () {\n      var _ref26 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee26(data, index, currentSectionIndex, selectedSection) {\n        var newFieldsArray, newSection;\n        return _regeneratorRuntime.wrap(function _callee26$(_context26) {\n          while (1) {\n            switch (_context26.prev = _context26.next) {\n              case 0:\n                // Take current array copy\n                newFieldsArray = _toConsumableArray(_this.state.selectedSection.fields);\n                newFieldsArray[currentSectionIndex] = {\n                  index: index,\n                  type: 'chart',\n                  chartType: selectedSection.fields[currentSectionIndex].chartType,\n                  stacked: selectedSection.fields[currentSectionIndex].stacked,\n                  labels: selectedSection.fields[currentSectionIndex].labels,\n                  dataset1: selectedSection.fields[currentSectionIndex].dataset1,\n                  dataset2: selectedSection.fields[currentSectionIndex].dataset2,\n                  dataset3: selectedSection.fields[currentSectionIndex].dataset3,\n                  dataset4: selectedSection.fields[currentSectionIndex].dataset4,\n                  dataset5: selectedSection.fields[currentSectionIndex].dataset5,\n                  dataset6: selectedSection.fields[currentSectionIndex].dataset6,\n                  // Dataset labels\n                  dataset1Label: selectedSection.fields[currentSectionIndex].dataset1Label,\n                  dataset2Label: selectedSection.fields[currentSectionIndex].dataset2Label,\n                  dataset3Label: selectedSection.fields[currentSectionIndex].dataset3Label,\n                  dataset4Label: selectedSection.fields[currentSectionIndex].dataset4Label,\n                  dataset5Label: data.dataset5Label,\n                  dataset6Label: selectedSection.fields[currentSectionIndex].dataset6Label\n                };\n                newSection = {\n                  title: _this.state.selectedSection.title,\n                  // createdAt: this.state.selectedSection.createdAt,\n                  fields: newFieldsArray,\n                  id: _this.state.selectedSection.id\n                };\n                _context26.next = 5;\n                return _this.setState({\n                  selectedSection: newSection\n                });\n\n              case 5:\n                // Update database\n                db.collection('projects').doc(_this.state.projectId).collection('businessPlan').doc(Router.query.project).collection('inputs') // .collection('currentBusinessPlan')\n                //   .doc('GrcvhyJwvlWVy31QsiudoQKdKI72')\n                //   .collection('inputs')\n                .doc(_this.state.selectedSection.id).update({\n                  fields: newFieldsArray\n                });\n\n              case 6:\n              case \"end\":\n                return _context26.stop();\n            }\n          }\n        }, _callee26);\n      }));\n\n      return function (_x66, _x67, _x68, _x69) {\n        return _ref26.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"onDatasetLabel6Update\", /*#__PURE__*/function () {\n      var _ref27 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee27(data, index, currentSectionIndex, selectedSection) {\n        var newFieldsArray, newSection;\n        return _regeneratorRuntime.wrap(function _callee27$(_context27) {\n          while (1) {\n            switch (_context27.prev = _context27.next) {\n              case 0:\n                // Take current array copy\n                newFieldsArray = _toConsumableArray(_this.state.selectedSection.fields);\n                newFieldsArray[currentSectionIndex] = {\n                  index: index,\n                  type: 'chart',\n                  chartType: selectedSection.fields[currentSectionIndex].chartType,\n                  stacked: selectedSection.fields[currentSectionIndex].stacked,\n                  labels: selectedSection.fields[currentSectionIndex].labels,\n                  dataset1: selectedSection.fields[currentSectionIndex].dataset1,\n                  dataset2: selectedSection.fields[currentSectionIndex].dataset2,\n                  dataset3: selectedSection.fields[currentSectionIndex].dataset3,\n                  dataset4: selectedSection.fields[currentSectionIndex].dataset4,\n                  dataset5: selectedSection.fields[currentSectionIndex].dataset5,\n                  dataset6: selectedSection.fields[currentSectionIndex].dataset6,\n                  // Dataset labels\n                  dataset1Label: selectedSection.fields[currentSectionIndex].dataset1Label,\n                  dataset2Label: selectedSection.fields[currentSectionIndex].dataset2Label,\n                  dataset3Label: selectedSection.fields[currentSectionIndex].dataset3Label,\n                  dataset4Label: selectedSection.fields[currentSectionIndex].dataset4Label,\n                  dataset5Label: selectedSection.fields[currentSectionIndex].dataset5Label,\n                  dataset6Label: data.dataset6Label\n                };\n                newSection = {\n                  title: _this.state.selectedSection.title,\n                  // createdAt: this.state.selectedSection.createdAt,\n                  fields: newFieldsArray,\n                  id: _this.state.selectedSection.id\n                };\n                _context27.next = 5;\n                return _this.setState({\n                  selectedSection: newSection\n                });\n\n              case 5:\n                // Update database\n                db.collection('projects').doc(_this.state.projectId).collection('businessPlan').doc(Router.query.project).collection('inputs') // .collection('currentBusinessPlan')\n                //   .doc('GrcvhyJwvlWVy31QsiudoQKdKI72')\n                //   .collection('inputs')\n                .doc(_this.state.selectedSection.id).update({\n                  fields: newFieldsArray\n                });\n\n              case 6:\n              case \"end\":\n                return _context27.stop();\n            }\n          }\n        }, _callee27);\n      }));\n\n      return function (_x70, _x71, _x72, _x73) {\n        return _ref27.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"chartValueUpdate\", /*#__PURE__*/function () {\n      var _ref28 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee28(value, index, currentSectionIndex) {\n        var name, type, valuev, color, newObj, newFieldsArray, newSection;\n        return _regeneratorRuntime.wrap(function _callee28$(_context28) {\n          while (1) {\n            switch (_context28.prev = _context28.next) {\n              case 0:\n                console.log(value);\n                console.log(index);\n                console.log(currentSectionIndex); // console.log(this.state.selectedSection);\n\n                if (value.name) {\n                  console.log(value.name);\n                }\n\n                name = value.name ? value.name : _this.state.selectedSection.fields[currentSectionIndex].data.name;\n                type = value.type ? value.type : _this.state.selectedSection.fields[currentSectionIndex].data.type;\n                valuev = value.value ? value.value : _this.state.selectedSection.fields[currentSectionIndex].data.value;\n                color = value.color ? value.color : _this.state.selectedSection.fields[currentSectionIndex].data.color;\n                newObj = {\n                  name: name,\n                  type: type,\n                  value: valuev,\n                  color: color\n                }; // Take current array copy\n\n                newFieldsArray = _toConsumableArray(_this.state.selectedSection.fields);\n                newFieldsArray[currentSectionIndex] = {\n                  index: index,\n                  type: 'chart',\n                  data: newObj\n                };\n                newSection = {\n                  title: _this.state.selectedSection.title,\n                  // createdAt: this.state.selectedSection.createdAt,\n                  fields: newFieldsArray,\n                  id: _this.state.selectedSection.id\n                };\n\n                _this.setState({\n                  selectedSection: newSection\n                }); // Update database\n\n\n                db.collection('projects').doc(_this.state.projectId).collection('businessPlan').doc(Router.query.project).collection('inputs') // .collection('currentBusinessPlan')\n                //   .doc('GrcvhyJwvlWVy31QsiudoQKdKI72')\n                //   .collection('inputs')\n                .doc(_this.state.selectedSection.id).update({\n                  fields: newFieldsArray\n                });\n\n              case 14:\n              case \"end\":\n                return _context28.stop();\n            }\n          }\n        }, _callee28);\n      }));\n\n      return function (_x74, _x75, _x76) {\n        return _ref28.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"newSectionPage\", /*#__PURE__*/function () {\n      var _ref29 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee29(title) {\n        var section, newFromDB, newID, newSectionIndex;\n        return _regeneratorRuntime.wrap(function _callee29$(_context29) {\n          while (1) {\n            switch (_context29.prev = _context29.next) {\n              case 0:\n                section = {\n                  position: _this.state.sections.length,\n                  title: title,\n                  body: ''\n                };\n                _context29.next = 3;\n                return db.collection('projects').doc(_this.state.projectId).collection('businessPlan').doc(Router.query.project).collection('inputs').add({\n                  position: section.position,\n                  title: section.title,\n                  // body: section.body,\n                  fields: [] // timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n                  // createdAt: new Date(),\n\n                });\n\n              case 3:\n                newFromDB = _context29.sent;\n                newID = newFromDB.id; // await this.setState({ sections: [...this.state.sections, section] });\n\n                newSectionIndex = _this.state.sections.indexOf(_this.state.sections.filter(function (_section) {\n                  return _section.id === newID;\n                })[0]);\n\n                _this.setState({\n                  selectedSection: _this.state.sections[newSectionIndex],\n                  selectedSectionIndex: newSectionIndex\n                });\n\n              case 7:\n              case \"end\":\n                return _context29.stop();\n            }\n          }\n        }, _callee29);\n      }));\n\n      return function (_x77) {\n        return _ref29.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"deleteSectionPage\", /*#__PURE__*/function () {\n      var _ref30 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee30(section, index) {\n        var sectionIndex;\n        return _regeneratorRuntime.wrap(function _callee30$(_context30) {\n          while (1) {\n            switch (_context30.prev = _context30.next) {\n              case 0:\n                sectionIndex = _this.state.sections.indexOf(section);\n                _context30.next = 3;\n                return _this.setState({\n                  sections: _this.state.sections.filter(function (_section) {\n                    return _section !== section;\n                  })\n                });\n\n              case 3:\n                if (_this.state.selectedSectionIndex === sectionIndex) {\n                  _this.setState({\n                    selectedSectionIndex: null,\n                    selectedSection: null\n                  });\n                } else {\n                  // this.state.sections.length > 1 ?\n                  // this.selectSectionPage(this.state.sections[this.state.selectedSectionIndex - 1], this.state.selectedSectionIndex - 1) :\n                  // this.setState({ selectedSectionIndex: null, selectedSection: null });\n                  if (_this.state.sections.length >= 1) {\n                    _this.state.selectedSectionIndex < sectionIndex ? _this.selectSectionPage(_this.state.sections[_this.state.selectedSectionIndex], _this.state.selectedSectionIndex) : _this.selectSectionPage(_this.state.sections[_this.state.selectedSectionIndex - 1], _this.state.selectedSectionIndex - 1);\n                  } else {\n                    _this.setState(_defineProperty({\n                      selectedNote: null\n                    }, \"selectedNote\", null)); // DO POPRAWY\n\n                  }\n                }\n\n                db.collection('projects').doc(_this.state.projectId).collection('businessPlan').doc(Router.query.project).collection('inputs') // .collection('currentBusinessPlan')\n                //   .doc('GrcvhyJwvlWVy31QsiudoQKdKI72')\n                //   .collection('inputs')\n                .doc(section.id)[\"delete\"]();\n\n              case 5:\n              case \"end\":\n                return _context30.stop();\n            }\n          }\n        }, _callee30);\n      }));\n\n      return function (_x78, _x79) {\n        return _ref30.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"chartTypeUpdate\", /*#__PURE__*/function () {\n      var _ref31 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee31(newSection) {\n        return _regeneratorRuntime.wrap(function _callee31$(_context31) {\n          while (1) {\n            switch (_context31.prev = _context31.next) {\n              case 0:\n                _context31.next = 2;\n                return _this.setState({\n                  selectedSection: newSection\n                });\n\n              case 2:\n              case \"end\":\n                return _context31.stop();\n            }\n          }\n        }, _callee31);\n      }));\n\n      return function (_x80) {\n        return _ref31.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"pdfChartsCreate\", /*#__PURE__*/function () {\n      var _ref32 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee33(sections) {\n        var images;\n        return _regeneratorRuntime.wrap(function _callee33$(_context33) {\n          while (1) {\n            switch (_context33.prev = _context33.next) {\n              case 0:\n                // console.log(sections);\n                images = [];\n                sections.map(function (section) {\n                  section.fields.map( /*#__PURE__*/function () {\n                    var _ref33 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee32(field) {\n                      var colors, colors1, colors2, colors3, colors4, colors5, data, toSaveChart, imageUrl;\n                      return _regeneratorRuntime.wrap(function _callee32$(_context32) {\n                        while (1) {\n                          switch (_context32.prev = _context32.next) {\n                            case 0:\n                              if (field.type == 'chart') {\n                                console.log(field);\n                                colors = field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' ? ['rgba(205,220,57,1)', 'rgba(255,235,59,1)', 'rgba(255,193,7,1)', 'rgba(255,152,0,1)', 'rgba(255,87,34,1)', 'rgba(244,67,54,1)', 'rgba(233,30,99,1)', 'rgba(156,39,176,1)', 'rgba(103,58,183,1)', 'rgba(63,81,181,1)', 'rgba(96,125,139,1)', 'rgba(121,85,72,1)'] : field.chartType == 'Line chart' || field.chartType == 'Area chart' ? 'rgba(255,185,0 ,1 )' : ['rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )'];\n                                colors1 = field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' ? ['rgba(205,220,57,1)', 'rgba(255,235,59,1)', 'rgba(255,193,7,1)', 'rgba(255,152,0,1)', 'rgba(255,87,34,1)', 'rgba(244,67,54,1)', 'rgba(233,30,99,1)', 'rgba(156,39,176,1)', 'rgba(103,58,183,1)', 'rgba(63,81,181,1)', 'rgba(96,125,139,1)', 'rgba(121,85,72,1)'] : field.chartType == 'Line chart' || field.chartType == 'Area chart' ? 'rgba(0,204,106 ,1 )' : ['rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )'];\n                                colors2 = field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' ? ['rgba(205,220,57,1)', 'rgba(255,235,59,1)', 'rgba(255,193,7,1)', 'rgba(255,152,0,1)', 'rgba(255,87,34,1)', 'rgba(244,67,54,1)', 'rgba(233,30,99,1)', 'rgba(156,39,176,1)', 'rgba(103,58,183,1)', 'rgba(63,81,181,1)', 'rgba(96,125,139,1)', 'rgba(121,85,72,1)'] : field.chartType == 'Line chart' || field.chartType == 'Area chart' ? 'rgba(0,120,215 ,1 )' : ['rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )'];\n                                colors3 = field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' ? ['rgba(205,220,57,1)', 'rgba(255,235,59,1)', 'rgba(255,193,7,1)', 'rgba(255,152,0,1)', 'rgba(255,87,34,1)', 'rgba(244,67,54,1)', 'rgba(233,30,99,1)', 'rgba(156,39,176,1)', 'rgba(103,58,183,1)', 'rgba(63,81,181,1)', 'rgba(96,125,139,1)', 'rgba(121,85,72,1)'] : field.chartType == 'Line chart' || field.chartType == 'Area chart' ? 'rgba(231,72,86 ,1 )' : ['rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )'];\n                                colors4 = field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' ? ['rgba(205,220,57,1)', 'rgba(255,235,59,1)', 'rgba(255,193,7,1)', 'rgba(255,152,0,1)', 'rgba(255,87,34,1)', 'rgba(244,67,54,1)', 'rgba(233,30,99,1)', 'rgba(156,39,176,1)', 'rgba(103,58,183,1)', 'rgba(63,81,181,1)', 'rgba(96,125,139,1)', 'rgba(121,85,72,1)'] : field.chartType == 'Line chart' || field.chartType == 'Area chart' ? 'rgba(126,115,95 ,1 )' : ['rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )'];\n                                colors5 = field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' ? ['rgba(205,220,57,1)', 'rgba(255,235,59,1)', 'rgba(255,193,7,1)', 'rgba(255,152,0,1)', 'rgba(255,87,34,1)', 'rgba(244,67,54,1)', 'rgba(233,30,99,1)', 'rgba(156,39,176,1)', 'rgba(103,58,183,1)', 'rgba(63,81,181,1)', 'rgba(96,125,139,1)', 'rgba(121,85,72,1)'] : field.chartType == 'Line chart' || field.chartType == 'Area chart' ? 'rgba(177,70,194 ,1 )' : ['rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )'];\n                                data = {\n                                  labels: field.labels && _toConsumableArray(field.labels.map(function (label) {\n                                    if (label !== '') {\n                                      return label;\n                                    } else {\n                                      return '';\n                                    }\n                                  })),\n                                  datasets: [// Dataset1\n                                  {\n                                    label: field.dataset1Label && field.dataset1Label,\n                                    data: field.dataset1 && field.dataset1.map(function (data) {\n                                      if (data !== '') {\n                                        return data;\n                                      }\n                                    }),\n                                    backgroundColor: colors,\n                                    borderWidth: field.chartType == 'Area chart' ? 0 : field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' && 2\n                                  }, // Dataset2\n                                  {\n                                    label: field.dataset2Label && field.dataset2Label,\n                                    data: field.dataset2 && field.dataset2.map(function (data) {\n                                      if (data !== '') {\n                                        return data;\n                                      }\n                                    }),\n                                    backgroundColor: colors1,\n                                    borderWidth: field.chartType == 'Area chart' ? 0 : field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' && 2\n                                  }, // Dataset3\n                                  {\n                                    label: field.dataset3Label && field.dataset3Label,\n                                    data: field.dataset3 && field.dataset3.map(function (data) {\n                                      if (data !== '') {\n                                        return data;\n                                      }\n                                    }),\n                                    backgroundColor: colors2,\n                                    borderWidth: field.chartType == 'Area chart' ? 0 : field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' && 2\n                                  }, // Dataset4\n                                  {\n                                    label: field.dataset4Label && field.dataset4Label,\n                                    data: field.dataset4 && field.dataset4.map(function (data) {\n                                      if (data !== '') {\n                                        return data;\n                                      }\n                                    }),\n                                    backgroundColor: colors3,\n                                    borderWidth: field.chartType == 'Area chart' ? 0 : field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' && 2\n                                  }, // Dataset5\n                                  {\n                                    label: field.dataset5Label && field.dataset5Label,\n                                    data: field.dataset5 && field.dataset5.map(function (data) {\n                                      if (data !== '') {\n                                        return data;\n                                      }\n                                    }),\n                                    backgroundColor: colors4,\n                                    borderWidth: field.chartType == 'Area chart' ? 0 : field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' && 2\n                                  }, // Dataset6\n                                  {\n                                    label: field.dataset6Label && field.dataset6Label,\n                                    data: field.dataset6 && field.dataset6.map(function (data) {\n                                      if (data !== '') {\n                                        return data;\n                                      }\n                                    }),\n                                    backgroundColor: colors5,\n                                    borderWidth: field.chartType == 'Area chart' ? 0 : field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' && 2\n                                  }]\n                                };\n                                toSaveChart = new ChartJsImage();\n                                toSaveChart.setConfig({\n                                  type: 'bar',\n                                  data: data,\n                                  options: {\n                                    responsive: false,\n                                    scales: {\n                                      y: {\n                                        beginAtZero: true\n                                      }\n                                    }\n                                  }\n                                });\n                                imageUrl = toSaveChart.toDataUrl(); // const returnedChart = imageUrl.then((data) => data);\n                                // return imageUrl.then((data) => `<img src='${data}' />`)\n                                // imageUrl.then((data) => images.push({\n                                //   index: field.index,\n                                //   imageUrl: data\n                                // }))\n\n                                imageUrl.then(function (data) {\n                                  if (data) {\n                                    db.collection('projects').doc(_this.state.projectId).collection('businessPlan').doc(Router.query.project).collection('inputs') // .collection('currentBusinessPlan')\n                                    //   .doc('GrcvhyJwvlWVy31QsiudoQKdKI72')\n                                    //   .collection('inputs')\n                                    .doc('chartImages').add({\n                                      index: field.index,\n                                      imageUrl: data\n                                    });\n                                  }\n                                });\n                              }\n\n                            case 1:\n                            case \"end\":\n                              return _context32.stop();\n                          }\n                        }\n                      }, _callee32);\n                    }));\n\n                    return function (_x82) {\n                      return _ref33.apply(this, arguments);\n                    };\n                  }());\n                });\n\n              case 2:\n              case \"end\":\n                return _context33.stop();\n            }\n          }\n        }, _callee33);\n      }));\n\n      return function (_x81) {\n        return _ref32.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"override\", css(_templateObject()));\n\n    _this.state = {\n      selectedSectionIndex: null,\n      selectedSection: null,\n      sections: null,\n      projectId: null,\n      projectName: null,\n      projectDescription: null,\n      projectCountry: null,\n      projectField: null,\n      projectNumber: null,\n      projectEmail: null,\n      imageName: null,\n      imageFileUrl: null // routerPath: useRouter().query.project\n\n    };\n    _this.addNewElement = /*#__PURE__*/React.createRef();\n    _this.exitImage = /*#__PURE__*/React.createRef();\n    return _this;\n  }\n\n  _createClass(BusinessPlanApp, [{\n    key: \"render\",\n    value: function render() {\n      var _jsx2,\n          _this2 = this;\n\n      return this.state.sections ? /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsx(TippyMonster, {\n          businessPlan: true,\n          contentClass: \"h-32 w-80 shadow-lg rounded-2xl bg-primary flex justify-center items-center\",\n          contentText: \"In this place, you can create a business plan that will be completely customized to your needs, so this time, I won't guide you through the process of creating one. \"\n        }), /*#__PURE__*/_jsx(NavbarTemplate, {\n          children: /*#__PURE__*/_jsxs(\"div\", {\n            className: \"min-h-screen w-full relative flex flex-col items-center\",\n            children: [/*#__PURE__*/_jsxs(\"div\", {\n              id: \"left-bar\",\n              className: \"z-50 h-screen w-40 bg-primary fixed top-0 left-0\",\n              children: [/*#__PURE__*/_jsxs(\"ul\", {\n                className: \"circles1\",\n                style: {\n                  zIndex: -1\n                },\n                children: [/*#__PURE__*/_jsx(\"li\", {}), /*#__PURE__*/_jsx(\"li\", {}), /*#__PURE__*/_jsx(\"li\", {}), /*#__PURE__*/_jsx(\"li\", {}), /*#__PURE__*/_jsx(\"li\", {}), /*#__PURE__*/_jsx(\"li\", {}), /*#__PURE__*/_jsx(\"li\", {}), /*#__PURE__*/_jsx(\"li\", {}), /*#__PURE__*/_jsx(\"li\", {}), /*#__PURE__*/_jsx(\"li\", {})]\n              }), /*#__PURE__*/_jsx(\"img\", (_jsx2 = {\n                ref: this.exitImage,\n                id: \"exit\",\n                onClick: function onClick() {\n                  return Router.push(\"/dashboard/projects/\".concat(Router.query.project));\n                },\n                src: \"/business-model/back4.svg\",\n                width: 28\n              }, _defineProperty(_jsx2, \"width\", 28), _defineProperty(_jsx2, \"style\", {\n                position: 'absolute',\n                left: 175,\n                cursor: 'pointer'\n              }), _jsx2)), /*#__PURE__*/_jsxs(\"div\", {\n                className: \"h-full w-full grid grid-cols-1frr grid-rows-5fr justify-items-center items-center\",\n                children: [/*#__PURE__*/_jsxs(\"div\", {\n                  onClick: function onClick() {\n                    return _this2.addNewHeader();\n                  },\n                  id: \"container\",\n                  className: \"mt-4 w-full h-full flex flex-col justify-center items-center hover:shadow-2xl transform transition duration-500 ease-in-out cursor-pointer\",\n                  children: [/*#__PURE__*/_jsx(\"div\", {\n                    id: \"left-element\",\n                    className: \"transform w-4/6 h-16 bg-background rounded-2xl shadow-lg flex justify-center items-center\",\n                    children: /*#__PURE__*/_jsx(\"img\", {\n                      src: \"/chart/header.svg\",\n                      width: 55,\n                      height: 55\n                    })\n                  }), /*#__PURE__*/_jsx(\"p\", {\n                    id: \"left-text\",\n                    className: \"transform text-center text-background mt-1 text-sm cursor-default\",\n                    children: \"Header\"\n                  })]\n                }), /*#__PURE__*/_jsxs(\"div\", {\n                  onClick: function onClick() {\n                    return _this2.addNewField();\n                  },\n                  id: \"container1\",\n                  className: \"mt-4 w-full h-full flex flex-col justify-center items-center hover:shadow-2xl transform transition duration-500 ease-in-out cursor-pointer\",\n                  children: [/*#__PURE__*/_jsx(\"div\", {\n                    id: \"left-element1\",\n                    className: \"transform w-4/6 h-16 bg-background rounded-2xl shadow-lg flex justify-center items-center\",\n                    children: /*#__PURE__*/_jsx(\"img\", {\n                      src: \"/chart/text.svg\",\n                      width: 55,\n                      height: 55\n                    })\n                  }), /*#__PURE__*/_jsx(\"p\", {\n                    id: \"left-text1\",\n                    className: \"transform text-center text-background mt-1 text-sm cursor-default\",\n                    children: \"Text\"\n                  })]\n                }), /*#__PURE__*/_jsxs(\"div\", {\n                  onClick: function onClick() {\n                    return _this2.addNewSpacing();\n                  },\n                  id: \"container2\",\n                  className: \"mt-4 w-full h-full flex flex-col justify-center items-center hover:shadow-2xl transform transition duration-500 ease-in-out cursor-pointer\",\n                  children: [/*#__PURE__*/_jsx(\"div\", {\n                    id: \"left-element2\",\n                    className: \"w-4/6 h-16 bg-background rounded-2xl shadow-lg flex justify-center items-center\",\n                    children: /*#__PURE__*/_jsx(\"img\", {\n                      src: \"/spacing/spacing.svg\",\n                      width: 55,\n                      height: 55\n                    })\n                  }), /*#__PURE__*/_jsx(\"p\", {\n                    id: \"left-text2\",\n                    className: \"transform text-center text-background mt-1 text-sm cursor-default\",\n                    children: \"Spacing\"\n                  })]\n                }), /*#__PURE__*/_jsxs(\"div\", {\n                  onClick: function onClick() {\n                    return _this2.addNewChart();\n                  },\n                  id: \"container3\",\n                  className: \"mt-4 w-full h-full flex flex-col justify-center items-center hover:shadow-2xl transform transition duration-500 ease-in-out cursor-pointer\",\n                  children: [/*#__PURE__*/_jsx(\"div\", {\n                    id: \"left-element3\",\n                    className: \"transform w-4/6 h-16 bg-background rounded-2xl shadow-lg flex justify-center items-center\",\n                    children: /*#__PURE__*/_jsx(\"img\", {\n                      src: \"/chart/chart.svg\",\n                      width: 55,\n                      height: 55\n                    })\n                  }), /*#__PURE__*/_jsx(\"p\", {\n                    id: \"left-text3\",\n                    className: \"transform text-center text-background mt-1 text-sm cursor-default\",\n                    children: \"Chart\"\n                  })]\n                }), /*#__PURE__*/_jsxs(\"div\", {\n                  onClick: function onClick() {\n                    return _this2.addNewTable();\n                  },\n                  id: \"container4\",\n                  className: \"mt-4 w-full h-full flex flex-col justify-center items-center hover:shadow-2xl transform transition duration-500 ease-in-out cursor-pointer\",\n                  children: [/*#__PURE__*/_jsx(\"div\", {\n                    id: \"left-element4\",\n                    className: \"transform w-4/6 h-16 bg-background rounded-2xl shadow-lg flex justify-center items-center\",\n                    children: /*#__PURE__*/_jsx(\"img\", {\n                      src: \"/table/table.svg\",\n                      width: 55,\n                      height: 55\n                    })\n                  }), /*#__PURE__*/_jsx(\"p\", {\n                    id: \"left-text4\",\n                    className: \"transform text-center text-background mt-1 text-sm cursor-default\",\n                    children: \"Table\"\n                  })]\n                })]\n              })]\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: \"w-full max-w-full relative mt-8 px-8 screenSmall:px-32 text-primarydark\",\n              children: [/*#__PURE__*/_jsxs(\"div\", {\n                className: \"grid grid-cols-2 grid-rows-1 grid-flow-col\",\n                children: [/*#__PURE__*/_jsxs(\"div\", {\n                  className: \"flex items-center\",\n                  children: [/*#__PURE__*/_jsxs(\"svg\", {\n                    height: \"30\",\n                    width: \"30\",\n                    className: \"fill-current text-primary dark:text-primarydark\",\n                    xmlns: \"http://www.w3.org/2000/svg\",\n                    viewBox: \"0 0 128 128\",\n                    children: [/*#__PURE__*/_jsx(\"title\", {\n                      children: \"Landing Success\"\n                    }), /*#__PURE__*/_jsx(\"g\", {\n                      id: \"Landing_Success\",\n                      \"data-name\": \"Landing Success\",\n                      children: /*#__PURE__*/_jsx(\"path\", {\n                        className: \"cls-1\",\n                        d: \"M109.3,90.1A46,46,0,0,0,65,36V20.08c1.78-.62,7.21-2.14,12.57.23a19.33,19.33,0,0,0,14.82,0c.87-.38.61.31.61-17.93a1,1,0,0,0-1.43-.93c-.07,0-6.69,2.87-13.18,0A19.41,19.41,0,0,0,65,.93,1,1,0,0,0,63,1V36a45.86,45.86,0,0,0-28.66,10.8C16.18,40.48,4,40,.79,45.51-2.29,50.86,3.94,59.3,10,65.68A11,11,0,0,0,18,83c.81,38.41,46.08,59.2,75.66,34.21,8.53,3,29,9.15,33.55,1.31C130.39,113,123.86,102.65,109.3,90.1ZM77.59,3.31A19.39,19.39,0,0,0,91,3.83V18.68c-1.79.62-7.22,2.13-12.57-.23A19.19,19.19,0,0,0,65,17.93V3.08C66.81,2.46,72.24,1,77.59,3.31ZM65,45v-7c39.69.91,58,50.27,28.21,76.81C71.32,107,46,92.66,27.77,78.64a11,11,0,0,0-3.2-16.13A43.88,43.88,0,0,1,63,38.06V45A1,1,0,0,0,65,45ZM32.55,48.36a46.21,46.21,0,0,0-9.83,13.28,10.93,10.93,0,0,0-11.4,2.47C-8.39,43.23,5.23,39.08,32.55,48.36ZM10,72a9,9,0,1,1,9,9A9,9,0,0,1,10,72Zm10,11a11,11,0,0,0,6.34-2.82c18.45,14.21,43.45,28.35,65.05,36.22C63,139.16,20.83,119.1,20.05,83Zm105.4,34.5c-2.51,4.35-14,3.62-30-1.85a45.61,45.61,0,0,0,13.42-23.21C121.59,103.58,128,113.12,125.45,117.47Z\"\n                      })\n                    })]\n                  }), /*#__PURE__*/_jsx(\"p\", {\n                    className: \"text-primarydark text-2xl screenLarge:text-3xl mt-2 pl-2 dark:text-background\",\n                    children: \"Business plan\"\n                  })]\n                }), /*#__PURE__*/_jsx(ReactPDFDocument, {\n                  projectName: this.state.projectName,\n                  projectDescription: this.state.projectDescription,\n                  projectCountry: this.state.projectCountry,\n                  projectField: this.state.projectField,\n                  projectEmail: this.state.projectEmail,\n                  projectNumber: this.state.projectNumber,\n                  imageName: this.state.imageName,\n                  imageFileUrl: this.state.imageFileUrl,\n                  sections: this.state.sections,\n                  pdfChartsCreate: this.pdfChartsCreate,\n                  projectId: this.state.projectId\n                })]\n              }), /*#__PURE__*/_jsx(\"div\", {\n                children: /*#__PURE__*/_jsx(\"h1\", {\n                  className: \"text-secondary text-md screenLarge:text-base text-gray\",\n                  children: \"Create your business plan any way you want\"\n                })\n              }), /*#__PURE__*/_jsxs(\"div\", {\n                className: \"grid grid-cols-businessSmall screenSmall:grid-cols-business screenMedium:grid-cols-businessMedium grid-flow-col gap-x-8\",\n                children: [/*#__PURE__*/_jsx(\"div\", {\n                  className: \"w-full h-maxcontent mt-12 mb-32\",\n                  children: this.state.selectedSection ? (console.log('selected --> ', this.state.selectedSection), /*#__PURE__*/_jsx(EditorInputElement // sectionUpdate={sectionUpdate}\n                  // sectionUpdate={sectionUpdate}\n                  , {\n                    sectionTitleUpdate: this.sectionTitleUpdate,\n                    tableUpdate: this.tableUpdate,\n                    headerUpdate: this.headerUpdate,\n                    reorderElements: this.reorderElements,\n                    projectId: this.state.projectId,\n                    addChart: this.addChart,\n                    addNewHeader: this.addNewHeader,\n                    chartTypeUpdate: this.chartTypeUpdate,\n                    onDatasetLabel6Update: this.onDatasetLabel6Update,\n                    onDatasetLabel5Update: this.onDatasetLabel5Update,\n                    onDatasetLabel4Update: this.onDatasetLabel4Update,\n                    onDatasetLabel3Update: this.onDatasetLabel3Update,\n                    onDatasetLabel2Update: this.onDatasetLabel2Update,\n                    onDatasetLabel1Update: this.onDatasetLabel1Update,\n                    onDataset6Update: this.onDataset6Update,\n                    onDataset5Update: this.onDataset5Update,\n                    onDataset4Update: this.onDataset4Update,\n                    onDataset3Update: this.onDataset3Update,\n                    onDataset2Update: this.onDataset2Update,\n                    onDataset1Update: this.onDataset1Update,\n                    chartLabelsUpdate: this.chartLabelsUpdate,\n                    chartValueUpdate: this.chartValueUpdate,\n                    addNewChart: this.addNewChart,\n                    deleteParticularField: this.deleteParticularField,\n                    addNewField: this.addNewField,\n                    fieldUpdate: this.fieldUpdate,\n                    sectionUpdate: this.sectionUpdate,\n                    selectedSection: this.state.selectedSection,\n                    selectedSectionIndex: this.state.selectedSectionIndex,\n                    sections: this.state.sections\n                  })) : /*#__PURE__*/_jsx(\"div\", {\n                    className: \"w-full bg-white rounded-2xl p-8 flex justify-center items-center\",\n                    children: /*#__PURE__*/_jsxs(\"div\", {\n                      className: \"flex flex-col justify-center items-center\",\n                      children: [/*#__PURE__*/_jsx(\"img\", {\n                        src: \"/empty-business-plan/empty1.svg\",\n                        height: 300,\n                        width: 300\n                      }), /*#__PURE__*/_jsx(\"p\", {\n                        className: \"mt-4\",\n                        children: \"Start creating your business plan by adding a new section!\"\n                      })]\n                    })\n                  })\n                }), /*#__PURE__*/_jsx(SectionManager, {\n                  selectedSection: this.state.selectedSection,\n                  reorderSections: this.reorderSections,\n                  sections: this.state.sections,\n                  selectedSectionIndex: this.state.selectedSectionIndex,\n                  selectSectionPage: this.selectSectionPage,\n                  newSectionPage: this.newSectionPage,\n                  deleteSectionPage: this.deleteSectionPage\n                })]\n              })]\n            })]\n          })\n        })]\n      }) : /*#__PURE__*/_jsx(BounceLoaderComponent, {});\n    }\n  }]);\n\n  return BusinessPlanApp;\n}(Component);\n\nexport default BusinessPlanApp;","map":null,"metadata":{},"sourceType":"module"}