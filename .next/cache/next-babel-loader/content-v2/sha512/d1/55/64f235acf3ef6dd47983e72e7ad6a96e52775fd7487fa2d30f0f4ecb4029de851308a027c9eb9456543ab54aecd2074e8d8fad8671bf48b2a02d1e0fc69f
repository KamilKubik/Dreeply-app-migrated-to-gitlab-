{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\off-saas\\\\components\\\\dashboard\\\\startup\\\\project\\\\business-app\\\\ReactPDFDocument.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { saveAs } from 'file-saver';\nimport ChartJsImage from 'chartjs-to-image';\nimport { format } from 'date-fns';\nimport gsap, { Linear } from 'gsap';\nimport { Font, pdf, Page, Text, View, Image, Document, StyleSheet, PDFViewer, PDFDownloadLink } from '@react-pdf/renderer';\nimport Router from 'next/router';\nimport splitHtml from 'split-html';\nimport $ from 'jquery';\nimport { useWindowSize } from '../../../../../utils/useWindowSize';\nFont.register({\n  src: '/fonts/poppins.ttf',\n  family: 'Poppins'\n});\nFont.register({\n  src: '/fonts/comfortaa.ttf',\n  family: 'Comfortaa'\n});\nFont.register({\n  src: '/fonts/comfortaa-Bold.ttf',\n  family: 'Comfortaa-Bold'\n});\nFont.register({\n  src: '/fonts/Montserrat-Regular.ttf',\n  family: 'Montserrat-Regular'\n});\nFont.register({\n  src: '/fonts/Montserrat-SemiBold.ttf',\n  family: 'Montserrat-SemiBold'\n});\nFont.register({\n  src: '/fonts/Montserrat-SemiBoldItalic.ttf',\n  family: 'Montserrat-SemiBoldItalic'\n});\nFont.register({\n  src: '/fonts/Montserrat-Italic.ttf',\n  family: 'Montserrat-Italic'\n});\nconst styles = StyleSheet.create({\n  homePage: {\n    padding: 36,\n    // fontFamily: 'Comfortaa',\n    fontFamily: 'Montserrat-Regular',\n    backgroundColor: '#f8f9fb',\n    color: '#0a1230'\n  },\n  mainTitle: {\n    fontSize: 22,\n    color: '#0a1230',\n    textAlign: 'center'\n  },\n  table: {\n    display: 'table',\n    width: '100%',\n    marginTop: 16\n  },\n  tableHeadRow: {\n    flexDirection: 'row',\n    backgroundColor: '#6C63FF',\n    color: '#f8f9fb',\n    borderTopLeftRadius: 8,\n    borderTopRightRadius: 8\n  },\n  tableRow: {\n    flexDirection: 'row'\n  },\n  tableCol: {\n    padding: 8\n  },\n  tableHeadCell: {\n    marginTop: 5,\n    fontSize: 10\n  },\n  tableCell: {\n    marginTop: 5,\n    fontSize: 9,\n    borderLeft: '1px solid #0a1230',\n    paddingLeft: 4\n  }\n});\n\nconst MyDocument = ({\n  imagesUrl,\n  sections\n}) => {\n  console.log('PDF Sections --> ', sections);\n  console.log('PDF ImagesUrl --> ', imagesUrl);\n  return /*#__PURE__*/_jsxDEV(Document, {\n    scale: 96 / 72,\n    renderMode: \"svg\",\n    children: [/*#__PURE__*/_jsxDEV(Page, {\n      size: \"A4\",\n      style: styles.homePage,\n      children: /*#__PURE__*/_jsxDEV(View, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          style: styles.mainTitle,\n          children: \"Business plan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), sections.map(section => {\n      return /*#__PURE__*/_jsxDEV(Page, {\n        size: \"A4\",\n        style: styles.homePage,\n        children: [/*#__PURE__*/_jsxDEV(View, {\n          style: {\n            marginBottom: 8\n          },\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            style: {\n              fontSize: 18\n            },\n            children: section.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), section.fields.map(field => {\n          console.log(field);\n\n          switch (field.type) {\n            case 'table':\n              return field.type == 'table' && /*#__PURE__*/_jsxDEV(View, {\n                style: styles.table,\n                children: [/*#__PURE__*/_jsxDEV(View, {\n                  style: styles.tableHeadRow,\n                  children: field.headRows.map(headRow => {\n                    const headRowsQuantity = field.headRows.length;\n\n                    switch (headRowsQuantity) {\n                      case 1:\n                        return /*#__PURE__*/_jsxDEV(View, {\n                          style: {\n                            width: '100%',\n                            padding: 8\n                          },\n                          children: /*#__PURE__*/_jsxDEV(Text, {\n                            style: styles.tableHeadCell,\n                            children: headRow\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 72,\n                            columnNumber: 37\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 71,\n                          columnNumber: 35\n                        }, this);\n\n                      case 2:\n                        return /*#__PURE__*/_jsxDEV(View, {\n                          style: {\n                            width: '50%',\n                            padding: 8\n                          },\n                          children: /*#__PURE__*/_jsxDEV(Text, {\n                            style: styles.tableHeadCell,\n                            children: headRow\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 78,\n                            columnNumber: 37\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 77,\n                          columnNumber: 35\n                        }, this);\n\n                      case 3:\n                        return /*#__PURE__*/_jsxDEV(View, {\n                          style: {\n                            width: '33.33%',\n                            padding: 8\n                          },\n                          children: /*#__PURE__*/_jsxDEV(Text, {\n                            style: styles.tableHeadCell,\n                            children: headRow\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 84,\n                            columnNumber: 37\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 83,\n                          columnNumber: 35\n                        }, this);\n\n                      case 4:\n                        return /*#__PURE__*/_jsxDEV(View, {\n                          style: {\n                            width: '25%',\n                            padding: 8\n                          },\n                          children: /*#__PURE__*/_jsxDEV(Text, {\n                            style: styles.tableHeadCell,\n                            children: headRow\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 90,\n                            columnNumber: 37\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 89,\n                          columnNumber: 35\n                        }, this);\n\n                      case 5:\n                        return /*#__PURE__*/_jsxDEV(View, {\n                          style: {\n                            width: '20%',\n                            padding: 8\n                          },\n                          children: /*#__PURE__*/_jsxDEV(Text, {\n                            style: styles.tableHeadCell,\n                            children: headRow\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 96,\n                            columnNumber: 37\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 95,\n                          columnNumber: 35\n                        }, this);\n\n                      case 6:\n                        return /*#__PURE__*/_jsxDEV(View, {\n                          style: {\n                            width: '16.66%',\n                            padding: 8\n                          },\n                          children: /*#__PURE__*/_jsxDEV(Text, {\n                            style: styles.tableHeadCell,\n                            children: headRow\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 102,\n                            columnNumber: 37\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 101,\n                          columnNumber: 35\n                        }, this);\n\n                      case 7:\n                        return /*#__PURE__*/_jsxDEV(View, {\n                          style: {\n                            width: '14.28%',\n                            padding: 8\n                          },\n                          children: /*#__PURE__*/_jsxDEV(Text, {\n                            style: styles.tableHeadCell,\n                            children: headRow\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 108,\n                            columnNumber: 37\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 107,\n                          columnNumber: 35\n                        }, this);\n\n                      case 8:\n                        return /*#__PURE__*/_jsxDEV(View, {\n                          style: {\n                            width: '12.5%',\n                            padding: 8\n                          },\n                          children: /*#__PURE__*/_jsxDEV(Text, {\n                            style: styles.tableHeadCell,\n                            children: headRow\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 114,\n                            columnNumber: 37\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 113,\n                          columnNumber: 35\n                        }, this);\n\n                      case 9:\n                        return /*#__PURE__*/_jsxDEV(View, {\n                          style: {\n                            width: '11.11%',\n                            padding: 8\n                          },\n                          children: /*#__PURE__*/_jsxDEV(Text, {\n                            style: styles.tableHeadCell,\n                            children: headRow\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 120,\n                            columnNumber: 37\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 119,\n                          columnNumber: 35\n                        }, this);\n\n                      case 10:\n                        return /*#__PURE__*/_jsxDEV(View, {\n                          style: {\n                            width: '10%',\n                            padding: 8\n                          },\n                          children: /*#__PURE__*/_jsxDEV(Text, {\n                            style: styles.tableHeadCell,\n                            children: headRow\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 126,\n                            columnNumber: 37\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 125,\n                          columnNumber: 35\n                        }, this);\n\n                      case 11:\n                        return /*#__PURE__*/_jsxDEV(View, {\n                          style: {\n                            width: '9.09%',\n                            padding: 8\n                          },\n                          children: /*#__PURE__*/_jsxDEV(Text, {\n                            style: styles.tableHeadCell,\n                            children: headRow\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 132,\n                            columnNumber: 37\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 131,\n                          columnNumber: 35\n                        }, this);\n\n                      case 12:\n                        return /*#__PURE__*/_jsxDEV(View, {\n                          style: {\n                            width: '8.33%',\n                            padding: 8\n                          },\n                          children: /*#__PURE__*/_jsxDEV(Text, {\n                            style: styles.tableHeadCell,\n                            children: headRow\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 138,\n                            columnNumber: 37\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 137,\n                          columnNumber: 35\n                        }, this);\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 25\n                }, this), field.rows.map(row => {\n                  return /*#__PURE__*/_jsxDEV(View, {\n                    style: styles.tableRow,\n                    children: row.row.map(rowName => {\n                      const BodyRowsQuantity = field.rows.length;\n\n                      switch (BodyRowsQuantity) {\n                        case 1:\n                          return /*#__PURE__*/_jsxDEV(View, {\n                            style: {\n                              width: '100%',\n                              padding: 8\n                            },\n                            children: /*#__PURE__*/_jsxDEV(Text, {\n                              style: styles.tableCell,\n                              children: rowName\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 154,\n                              columnNumber: 41\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 153,\n                            columnNumber: 39\n                          }, this);\n\n                        case 2:\n                          return /*#__PURE__*/_jsxDEV(View, {\n                            style: {\n                              width: '50%',\n                              padding: 8\n                            },\n                            children: /*#__PURE__*/_jsxDEV(Text, {\n                              style: styles.tableCell,\n                              children: rowName\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 160,\n                              columnNumber: 41\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 159,\n                            columnNumber: 39\n                          }, this);\n\n                        case 3:\n                          return /*#__PURE__*/_jsxDEV(View, {\n                            style: {\n                              width: '33.33%',\n                              padding: 8\n                            },\n                            children: /*#__PURE__*/_jsxDEV(Text, {\n                              style: styles.tableCell,\n                              children: rowName\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 166,\n                              columnNumber: 41\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 165,\n                            columnNumber: 39\n                          }, this);\n\n                        case 4:\n                          return /*#__PURE__*/_jsxDEV(View, {\n                            style: {\n                              width: '25%',\n                              padding: 8\n                            },\n                            children: /*#__PURE__*/_jsxDEV(Text, {\n                              style: styles.tableCell,\n                              children: rowName\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 172,\n                              columnNumber: 41\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 171,\n                            columnNumber: 39\n                          }, this);\n\n                        case 5:\n                          return /*#__PURE__*/_jsxDEV(View, {\n                            style: {\n                              width: '20%',\n                              padding: 8\n                            },\n                            children: /*#__PURE__*/_jsxDEV(Text, {\n                              style: styles.tableCell,\n                              children: rowName\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 178,\n                              columnNumber: 41\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 177,\n                            columnNumber: 39\n                          }, this);\n\n                        case 6:\n                          return /*#__PURE__*/_jsxDEV(View, {\n                            style: {\n                              width: '16.66%',\n                              padding: 8\n                            },\n                            children: /*#__PURE__*/_jsxDEV(Text, {\n                              style: styles.tableCell,\n                              children: rowName\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 184,\n                              columnNumber: 41\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 183,\n                            columnNumber: 39\n                          }, this);\n\n                        case 7:\n                          return /*#__PURE__*/_jsxDEV(View, {\n                            style: {\n                              width: '14.28%',\n                              padding: 8\n                            },\n                            children: /*#__PURE__*/_jsxDEV(Text, {\n                              style: styles.tableCell,\n                              children: rowName\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 190,\n                              columnNumber: 41\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 189,\n                            columnNumber: 39\n                          }, this);\n\n                        case 8:\n                          return /*#__PURE__*/_jsxDEV(View, {\n                            style: {\n                              width: '12.5%',\n                              padding: 8\n                            },\n                            children: /*#__PURE__*/_jsxDEV(Text, {\n                              style: styles.tableCell,\n                              children: rowName\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 196,\n                              columnNumber: 41\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 195,\n                            columnNumber: 39\n                          }, this);\n\n                        case 9:\n                          return /*#__PURE__*/_jsxDEV(View, {\n                            style: {\n                              width: '11.11%',\n                              padding: 8\n                            },\n                            children: /*#__PURE__*/_jsxDEV(Text, {\n                              style: styles.tableCell,\n                              children: rowName\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 202,\n                              columnNumber: 41\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 201,\n                            columnNumber: 39\n                          }, this);\n\n                        case 10:\n                          return /*#__PURE__*/_jsxDEV(View, {\n                            style: {\n                              width: '10%',\n                              padding: 8\n                            },\n                            children: /*#__PURE__*/_jsxDEV(Text, {\n                              style: styles.tableCell,\n                              children: rowName\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 208,\n                              columnNumber: 41\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 207,\n                            columnNumber: 39\n                          }, this);\n\n                        case 11:\n                          return /*#__PURE__*/_jsxDEV(View, {\n                            style: {\n                              width: '9.09%',\n                              padding: 8\n                            },\n                            children: /*#__PURE__*/_jsxDEV(Text, {\n                              style: styles.tableCell,\n                              children: rowName\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 214,\n                              columnNumber: 41\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 213,\n                            columnNumber: 39\n                          }, this);\n\n                        case 12:\n                          return /*#__PURE__*/_jsxDEV(View, {\n                            style: {\n                              width: '8.33%',\n                              padding: 8\n                            },\n                            children: /*#__PURE__*/_jsxDEV(Text, {\n                              style: styles.tableCell,\n                              children: rowName\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 220,\n                              columnNumber: 41\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 219,\n                            columnNumber: 39\n                          }, this);\n                      }\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 29\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 23\n              }, this);\n\n            case 'header':\n              return /*#__PURE__*/_jsxDEV(View, {\n                style: {\n                  marginTop: 16\n                },\n                children: /*#__PURE__*/_jsxDEV(Text, {\n                  style: {\n                    fontSize: 14\n                  },\n                  children: field.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 21\n              }, this);\n\n            case 'spacing':\n              return /*#__PURE__*/_jsxDEV(View, {\n                style: {\n                  marginTop: 12,\n                  marginBottom: 12\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 26\n              }, this);\n\n            case 'chart':\n              return imagesUrl.map(doc => {\n                if (doc.imageIndex === field.index) {\n                  return /*#__PURE__*/_jsxDEV(View, {\n                    style: {\n                      marginTop: 16\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Image, {\n                      style: {\n                        width: '100%'\n                      },\n                      src: doc.imageUrl\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 244,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 25\n                  }, this);\n                }\n              });\n\n            case 'text':\n              let formattedText = $(field.body).map(function () {\n                return $('<div>').append(this).html();\n              });\n              console.log(formattedText);\n              return /*#__PURE__*/_jsxDEV(View, {\n                style: {\n                  marginTop: 16\n                },\n                children: $.map(formattedText, res => {\n                  console.log(res.toString().includes('<p></p>'));\n                  console.log(res.includes('<strong>')); // START --> <p></p>\n\n                  if (res.startsWith('<p>') && !res.includes('<strong>') && !res.includes('<em>') && !res.includes('<s>')) {\n                    return /*#__PURE__*/_jsxDEV(Text, {\n                      style: {\n                        fontSize: 12\n                      },\n                      children: res.replace(/(<([^>]+)>)/gi, '')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 261,\n                      columnNumber: 34\n                    }, this);\n                  } // <p>STRONG</p>\n                  else if (res.startsWith('<p>') && res.includes('<strong>') && !res.includes('<em>') && !res.includes('<s>')) {\n                      return /*#__PURE__*/_jsxDEV(Text, {\n                        style: {\n                          fontSize: 12,\n                          fontFamily: 'Montserrat-SemiBold'\n                        },\n                        children: res.replace(/(<([^>]+)>)/gi, '')\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 266,\n                        columnNumber: 29\n                      }, this);\n                    } // <p>EM</p>\n                    else if (res.startsWith('<p>') && !res.includes('<strong>') && res.includes('<em>') && !res.includes('<s>')) {\n                        return /*#__PURE__*/_jsxDEV(Text, {\n                          style: {\n                            fontSize: 12,\n                            fontFamily: 'Montserrat-Italic'\n                          },\n                          children: res.replace(/(<([^>]+)>)/gi, '')\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 271,\n                          columnNumber: 34\n                        }, this);\n                      } // <p>EM + STRONG</p>\n                      else if (res.startsWith('<p>') && res.includes('<strong>') && res.includes('<em>') && !res.includes('<s>')) {\n                          return /*#__PURE__*/_jsxDEV(Text, {\n                            style: {\n                              fontSize: 12,\n                              fontFamily: 'Montserrat-SemiBoldItalic'\n                            },\n                            children: res.replace(/(<([^>]+)>)/gi, '')\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 276,\n                            columnNumber: 29\n                          }, this);\n                        } // <p>S</p>\n                        else if (res.startsWith('<p>') && res.includes('<s>') && !res.includes('<strong>') && !res.includes('<em>')) {\n                            return /*#__PURE__*/_jsxDEV(Text, {\n                              style: {\n                                fontSize: 12,\n                                textDecoration: 'line-through'\n                              },\n                              children: res.replace(/(<([^>]+)>)/gi, '')\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 283,\n                              columnNumber: 34\n                            }, this);\n                          } // <p>S + EM</p>\n                          else if (res.startsWith('<p>') && res.includes('<s>') && res.includes('<em>') && !res.includes('<strong>')) {\n                              return /*#__PURE__*/_jsxDEV(Text, {\n                                style: {\n                                  fontSize: 12,\n                                  fontFamily: 'Montserrat-Italic',\n                                  textDecoration: 'line-through'\n                                },\n                                children: res.replace(/(<([^>]+)>)/gi, '')\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 288,\n                                columnNumber: 29\n                              }, this);\n                            } // <p>S + EM + STRONG</p>\n                            else if (res.startsWith('<p>') && res.includes('<s>') && res.includes('<em>') && res.includes('<strong>')) {\n                                return /*#__PURE__*/_jsxDEV(Text, {\n                                  style: {\n                                    fontSize: 12,\n                                    fontFamily: 'Montserrat-SemiBoldItalic',\n                                    textDecoration: 'line-through'\n                                  },\n                                  children: res.replace(/(<([^>]+)>)/gi, '')\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 296,\n                                  columnNumber: 29\n                                }, this);\n                              } // <p>U</p>\n                              else if (res.startsWith('<p>') && res.includes('<u>') && !res.includes('<s>') && !res.includes('<strong>') && !res.includes('<em>')) {\n                                  return /*#__PURE__*/_jsxDEV(Text, {\n                                    style: {\n                                      fontSize: 12,\n                                      textDecoration: 'underline'\n                                    },\n                                    children: res.replace(/(<([^>]+)>)/gi, '')\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 309,\n                                    columnNumber: 34\n                                  }, this);\n                                } // <p>U + EM</p>\n                                else if (res.startsWith('<p>') && res.includes('<u>') && !res.includes('<s>') && !res.includes('<strong>') && res.includes('<em>')) {\n                                    return /*#__PURE__*/_jsxDEV(Text, {\n                                      style: {\n                                        fontSize: 12,\n                                        textDecoration: 'underline'\n                                      },\n                                      children: res.replace(/(<([^>]+)>)/gi, '')\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 319,\n                                      columnNumber: 34\n                                    }, this);\n                                  } // <p>U + S</p>\n                                  else if (res.startsWith('<p>') && res.includes('<u>') && !res.includes('<s>') && !res.includes('<strong>') && res.includes('<em>')) {\n                                      return /*#__PURE__*/_jsxDEV(Text, {\n                                        style: {\n                                          fontSize: 12,\n                                          textDecoration: 'underline'\n                                        },\n                                        children: res.replace(/(<([^>]+)>)/gi, '')\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 329,\n                                        columnNumber: 34\n                                      }, this);\n                                    } // END --> <p></p>\n                                    // <h2></h2>\n                                    else if (res.startsWith('<h2>')) {\n                                        return /*#__PURE__*/_jsxDEV(Text, {\n                                          style: {\n                                            fontSize: 14\n                                          },\n                                          children: res.replace(/(<([^>]+)>)/gi, '')\n                                        }, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 334,\n                                          columnNumber: 34\n                                        }, this);\n                                      } // <h1></h1>\n                                      else if (res.startsWith('<h1>')) {\n                                          return /*#__PURE__*/_jsxDEV(Text, {\n                                            style: {\n                                              fontSize: 16\n                                            },\n                                            children: res.replace(/(<([^>]+)>)/gi, '')\n                                          }, void 0, false, {\n                                            fileName: _jsxFileName,\n                                            lineNumber: 338,\n                                            columnNumber: 34\n                                          }, this);\n                                        }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 21\n              }, this);\n          }\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\nconst ReactPDFDocument = ({\n  sections\n}) => {\n  const size = useWindowSize();\n  const saveContainer = useRef();\n  const dropdownButton = useRef();\n  const dropdownContainer = useRef();\n  const {\n    0: dropdownButtonColorHelper,\n    1: setDropdownButtonColorHelper\n  } = useState(false);\n  const {\n    0: dropdownContainerHelper,\n    1: setDropdownContainerHelper\n  } = useState(false);\n\n  const onSaveDropdownShow = () => {\n    if (!dropdownContainerHelper) {\n      gsap.to(dropdownContainer.current, {\n        autoAlpha: 1,\n        duration: 1,\n        ease: Linear\n      }); // gsap.to(dropdownButton.current, { backgroundColor: '#6C63FF', color: '#f8f9fb', duration: 1, ease: Linear });\n\n      setDropdownContainerHelper(true);\n      setDropdownButtonColorHelper(true);\n    } else if (dropdownContainerHelper) {\n      gsap.to(dropdownContainer.current, {\n        autoAlpha: 0,\n        duration: 1,\n        ease: Linear\n      }); // gsap.to(dropdownButton.current, { backgroundColor: '#f8f9fb', color: '#6C63FF', duration: 1, ease: Linear });\n\n      setDropdownContainerHelper(false);\n      setDropdownButtonColorHelper(false);\n    }\n  };\n\n  const {\n    0: imagesUrl,\n    1: setImagesUrl\n  } = useState();\n  useEffect(() => {\n    console.log(sections);\n    const imagesArray = [];\n    setImagesUrl(imagesArray);\n    sections && sections.map(section => {\n      section.fields.map(field => {\n        if (field.type == 'chart') {\n          const colors = field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' ? ['rgba(205,220,57,1)', 'rgba(255,235,59,1)', 'rgba(255,193,7,1)', 'rgba(255,152,0,1)', 'rgba(255,87,34,1)', 'rgba(244,67,54,1)', 'rgba(233,30,99,1)', 'rgba(156,39,176,1)', 'rgba(103,58,183,1)', 'rgba(63,81,181,1)', 'rgba(96,125,139,1)', 'rgba(121,85,72,1)'] : field.chartType == 'Line chart' || field.chartType == 'Area chart' ? 'rgba(255,185,0 ,1 )' : ['rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )'];\n          const colors1 = field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' ? ['rgba(205,220,57,1)', 'rgba(255,235,59,1)', 'rgba(255,193,7,1)', 'rgba(255,152,0,1)', 'rgba(255,87,34,1)', 'rgba(244,67,54,1)', 'rgba(233,30,99,1)', 'rgba(156,39,176,1)', 'rgba(103,58,183,1)', 'rgba(63,81,181,1)', 'rgba(96,125,139,1)', 'rgba(121,85,72,1)'] : field.chartType == 'Line chart' || field.chartType == 'Area chart' ? 'rgba(0,204,106 ,1 )' : ['rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )'];\n          const colors2 = field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' ? ['rgba(205,220,57,1)', 'rgba(255,235,59,1)', 'rgba(255,193,7,1)', 'rgba(255,152,0,1)', 'rgba(255,87,34,1)', 'rgba(244,67,54,1)', 'rgba(233,30,99,1)', 'rgba(156,39,176,1)', 'rgba(103,58,183,1)', 'rgba(63,81,181,1)', 'rgba(96,125,139,1)', 'rgba(121,85,72,1)'] : field.chartType == 'Line chart' || field.chartType == 'Area chart' ? 'rgba(0,120,215 ,1 )' : ['rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )'];\n          const colors3 = field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' ? ['rgba(205,220,57,1)', 'rgba(255,235,59,1)', 'rgba(255,193,7,1)', 'rgba(255,152,0,1)', 'rgba(255,87,34,1)', 'rgba(244,67,54,1)', 'rgba(233,30,99,1)', 'rgba(156,39,176,1)', 'rgba(103,58,183,1)', 'rgba(63,81,181,1)', 'rgba(96,125,139,1)', 'rgba(121,85,72,1)'] : field.chartType == 'Line chart' || field.chartType == 'Area chart' ? 'rgba(231,72,86 ,1 )' : ['rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )'];\n          const colors4 = field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' ? ['rgba(205,220,57,1)', 'rgba(255,235,59,1)', 'rgba(255,193,7,1)', 'rgba(255,152,0,1)', 'rgba(255,87,34,1)', 'rgba(244,67,54,1)', 'rgba(233,30,99,1)', 'rgba(156,39,176,1)', 'rgba(103,58,183,1)', 'rgba(63,81,181,1)', 'rgba(96,125,139,1)', 'rgba(121,85,72,1)'] : field.chartType == 'Line chart' || field.chartType == 'Area chart' ? 'rgba(126,115,95 ,1 )' : ['rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )'];\n          const colors5 = field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' ? ['rgba(205,220,57,1)', 'rgba(255,235,59,1)', 'rgba(255,193,7,1)', 'rgba(255,152,0,1)', 'rgba(255,87,34,1)', 'rgba(244,67,54,1)', 'rgba(233,30,99,1)', 'rgba(156,39,176,1)', 'rgba(103,58,183,1)', 'rgba(63,81,181,1)', 'rgba(96,125,139,1)', 'rgba(121,85,72,1)'] : field.chartType == 'Line chart' || field.chartType == 'Area chart' ? 'rgba(177,70,194 ,1 )' : ['rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )'];\n          const data = {\n            labels: field.labels && [...field.labels.map(label => {\n              if (label !== '') {\n                return label;\n              } else {\n                return '';\n              }\n            })],\n            datasets: [// Dataset1\n            {\n              label: field.dataset1Label && field.dataset1Label,\n              data: field.dataset1 && field.dataset1.map(data => {\n                if (data !== '') {\n                  return data;\n                }\n              }),\n              backgroundColor: colors,\n              borderWidth: field.chartType == 'Area chart' ? 0 : field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' && 2\n            }, // Dataset2\n            {\n              label: field.dataset2Label && field.dataset2Label,\n              data: field.dataset2 && field.dataset2.map(data => {\n                if (data !== '') {\n                  return data;\n                }\n              }),\n              backgroundColor: colors1,\n              borderWidth: field.chartType == 'Area chart' ? 0 : field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' && 2\n            }, // Dataset3\n            {\n              label: field.dataset3Label && field.dataset3Label,\n              data: field.dataset3 && field.dataset3.map(data => {\n                if (data !== '') {\n                  return data;\n                }\n              }),\n              backgroundColor: colors2,\n              borderWidth: field.chartType == 'Area chart' ? 0 : field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' && 2\n            }, // Dataset4\n            {\n              label: field.dataset4Label && field.dataset4Label,\n              data: field.dataset4 && field.dataset4.map(data => {\n                if (data !== '') {\n                  return data;\n                }\n              }),\n              backgroundColor: colors3,\n              borderWidth: field.chartType == 'Area chart' ? 0 : field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' && 2\n            }, // Dataset5\n            {\n              label: field.dataset5Label && field.dataset5Label,\n              data: field.dataset5 && field.dataset5.map(data => {\n                if (data !== '') {\n                  return data;\n                }\n              }),\n              backgroundColor: colors4,\n              borderWidth: field.chartType == 'Area chart' ? 0 : field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' && 2\n            }, // Dataset6\n            {\n              label: field.dataset6Label && field.dataset6Label,\n              data: field.dataset6 && field.dataset6.map(data => {\n                if (data !== '') {\n                  return data;\n                }\n              }),\n              backgroundColor: colors5,\n              borderWidth: field.chartType == 'Area chart' ? 0 : field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' && 2\n            }]\n          };\n          const datas = data.datasets.map(dataset => {\n            console.log(dataset.data[0]);\n            const test1 = dataset.data.map(datases => {\n              if (datases !== undefined) {\n                return datases;\n              } else {\n                return '';\n              }\n            });\n            const test = test1.map((datarer, index) => {\n              if (data.labels[index] !== '') {\n                return datarer;\n              }\n            });\n            const test2 = test.filter(obj => obj !== undefined);\n            return test2;\n          });\n          const fill = field.chartType == 'Line chart' ? false : undefined;\n          const newDatasets = [{\n            label: data.datasets[0].label,\n            data: datas[0],\n            backgroundColor: data.datasets[0].backgroundColor,\n            borderColor: field.chartType == 'Line chart' ? 'rgba(255,185,0 ,1 )' : 'rgb(255, 255, 255)',\n            borderWidth: data.datasets[0].borderWidth,\n            fill: fill\n          }, {\n            label: data.datasets[1].label,\n            data: datas[1],\n            backgroundColor: data.datasets[1].backgroundColor,\n            borderColor: field.chartType == 'Line chart' ? 'rgba(0,204,106 ,1 )' : 'rgb(255, 255, 255)',\n            borderWidth: data.datasets[1].borderWidth,\n            fill: fill\n          }, {\n            label: data.datasets[2].label,\n            data: datas[2],\n            backgroundColor: data.datasets[2].backgroundColor,\n            borderColor: field.chartType == 'Line chart' ? 'rgba(0,120,215 ,1 )' : 'rgb(255, 255, 255)',\n            borderWidth: data.datasets[2].borderWidth,\n            fill: fill\n          }, {\n            label: data.datasets[3].label,\n            data: datas[3],\n            backgroundColor: data.datasets[3].backgroundColor,\n            borderColor: field.chartType == 'Line chart' ? 'rgba(231,72,86 ,1 )' : 'rgb(255, 255, 255)',\n            borderWidth: data.datasets[3].borderWidth,\n            fill: fill\n          }, {\n            label: data.datasets[4].label,\n            data: datas[4],\n            backgroundColor: data.datasets[4].backgroundColor,\n            borderColor: field.chartType == 'Line chart' ? 'rgba(126,115,95 ,1 )' : 'rgb(255, 255, 255)',\n            borderWidth: data.datasets[4].borderWidth,\n            fill: fill\n          }, {\n            label: data.datasets[5].label,\n            data: datas[5],\n            backgroundColor: data.datasets[5].backgroundColor,\n            borderColor: field.chartType == 'Line chart' ? 'rgba(177,70,194 ,1 )' : 'rgb(255, 255, 255)',\n            borderWidth: data.datasets[5].borderWidth,\n            fill: fill\n          }];\n          const chartType = [field.chartType == 'Bar chart' ? 'bar' : '', field.chartType == 'Reverse chart' ? 'horizontalBar' : '', field.chartType == 'Line chart' ? 'line' : '', field.chartType == 'Pie chart' ? 'pie' : '', field.chartType == 'Doughnut chart' ? 'doughnut' : '', field.chartType == 'Area chart' ? 'line' : ''];\n          const toSaveChart = new ChartJsImage();\n          toSaveChart.setConfig({\n            type: chartType.filter(type => type !== ''),\n            data: {\n              labels: data.labels.filter(label => label !== ''),\n              datasets: newDatasets.filter(dataset => dataset.label !== '')\n            },\n            options: {\n              responsive: true,\n              legend: {\n                position: 'bottom',\n                labels: {\n                  boxWidth: 30,\n                  boxHeight: 5,\n                  fontFamily: 'Comfortaa',\n                  fontSize: 12\n                }\n              },\n              // defaultFontFamily: (Chart.defaults.global.defaultFontFamily = 'Comfortaa'),\n              scales: {\n                yAxes: [{\n                  stacked: field.stacked == true ? true : false,\n                  ticks: {\n                    beginAtZero: true,\n                    fontFamily: 'Comfortaa',\n                    fontSize: 10\n                  }\n                }],\n                xAxes: [{\n                  stacked: field.stacked == true ? true : false,\n                  ticks: {\n                    beginAtZero: true,\n                    fontFamily: 'Comfortaa',\n                    fontSize: 10\n                  }\n                }]\n              }\n            }\n          });\n          toSaveChart.setFormat('png').setDevicePixelRatio(3.0).setBackgroundColor('#f8f9fb');\n          const imageUrl = toSaveChart.toDataUrl();\n          imageUrl.then(image => {\n            console.log(image);\n            imagesArray.push({\n              imageUrl: image,\n              imageIndex: field.index\n            });\n            console.log(imagesArray);\n            setImagesUrl(imagesArray);\n          });\n        }\n      });\n    });\n  }, [sections]);\n  console.log(imagesUrl);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: saveContainer,\n    className: \"relative flex justify-start\",\n    children: size.width < 680 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex mt-4\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: async e => {\n          e.preventDefault();\n\n          const doc = /*#__PURE__*/_jsxDEV(MyDocument, {\n            image: imageUrl,\n            data: data,\n            periods: periods,\n            revenueElements: revenueElements,\n            costsElements: costsElements,\n            tax: tax,\n            totalRevenue: totalRevenue,\n            monthlyRevenue: monthlyRevenue,\n            totalCosts: totalCosts,\n            monthlyCosts: monthlyCosts,\n            grossProfit: grossProfit,\n            netProfit: netProfit,\n            startDate: startDate,\n            endDate: endDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 825,\n            columnNumber: 17\n          }, this);\n\n          const asPdf = pdf([]); // {} is important, throws without an argument\n\n          asPdf.updateContainer(doc);\n          const blob = await asPdf.toBlob();\n          saveAs(blob, `${Router.query.project}/cash-flow.pdf`);\n        },\n        src: \"/mobile-navbar/pdf.svg\",\n        height: 30,\n        width: 30\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 821,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 820,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative w-full flex justify-end items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        ref: dropdownButton,\n        onClick: onSaveDropdownShow,\n        className: `hover:bg-primary hover:text-white dark:hover:bg-primarydark dark:hover:text-background focus:outline-none border border-primary text-primary text-sm font-light py-2 px-8 rounded-2xl mt-2 dark:text-primarydark dark:border-primarydark ${dropdownButtonColorHelper ? 'bg-primary text-background dark:bg-primarydark dark:text-background' : ''}`,\n        children: \"Save my work\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 854,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: dropdownContainer,\n        className: \"absolute bg-white rounded-2xl shadow-xl p-6 top-14 z-50 invisible opacity-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-start\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/mobile-navbar/success.svg\",\n            height: 26,\n            width: 26\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 865,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-lg ml-2\",\n            children: \"Show the world your work!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 866,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 864,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-6 py-4 bg-background rounded-2xl mt-2 pr-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"flex\",\n              children: \"Save as PDF:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 870,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              onClick: async e => {\n                e.preventDefault();\n\n                const doc = /*#__PURE__*/_jsxDEV(MyDocument, {\n                  imagesUrl: imagesUrl,\n                  sections: sections\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 874,\n                  columnNumber: 33\n                }, this);\n\n                const asPdf = pdf([]);\n                asPdf.updateContainer(doc);\n                const blob = await asPdf.toBlob();\n                saveAs(blob, `${Router.query.project}/competitors-analysis.pdf`);\n              },\n              src: \"/mobile-navbar/pdf.svg\",\n              height: 30,\n              width: 30,\n              className: \"mt-2 cursor-pointer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 871,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 869,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-full justify-start items-center mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Share your competitors analysis with this public link:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 887,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-full flex mt-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                value: \"www.project.com\",\n                className: \"bg-linkBackground text-sm px-2 py-1 dark:text-primarydark\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 889,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/mobile-navbar/foreign.svg\",\n                height: 28,\n                width: 28\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 890,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 888,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 886,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 868,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 863,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 853,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 818,\n    columnNumber: 5\n  }, this);\n};\n\nexport default ReactPDFDocument;","map":{"version":3,"sources":["C:/off-saas/components/dashboard/startup/project/business-app/ReactPDFDocument.js"],"names":["React","useState","useEffect","useRef","saveAs","ChartJsImage","format","gsap","Linear","Font","pdf","Page","Text","View","Image","Document","StyleSheet","PDFViewer","PDFDownloadLink","Router","splitHtml","$","useWindowSize","register","src","family","styles","create","homePage","padding","fontFamily","backgroundColor","color","mainTitle","fontSize","textAlign","table","display","width","marginTop","tableHeadRow","flexDirection","borderTopLeftRadius","borderTopRightRadius","tableRow","tableCol","tableHeadCell","tableCell","borderLeft","paddingLeft","MyDocument","imagesUrl","sections","console","log","map","section","marginBottom","title","fields","field","type","headRows","headRow","headRowsQuantity","length","rows","row","rowName","BodyRowsQuantity","doc","imageIndex","index","imageUrl","formattedText","body","append","html","res","toString","includes","startsWith","replace","textDecoration","ReactPDFDocument","size","saveContainer","dropdownButton","dropdownContainer","dropdownButtonColorHelper","setDropdownButtonColorHelper","dropdownContainerHelper","setDropdownContainerHelper","onSaveDropdownShow","to","current","autoAlpha","duration","ease","setImagesUrl","imagesArray","colors","chartType","colors1","colors2","colors3","colors4","colors5","data","labels","label","datasets","dataset1Label","dataset1","borderWidth","dataset2Label","dataset2","dataset3Label","dataset3","dataset4Label","dataset4","dataset5Label","dataset5","dataset6Label","dataset6","datas","dataset","test1","datases","undefined","test","datarer","test2","filter","obj","fill","newDatasets","borderColor","toSaveChart","setConfig","options","responsive","legend","position","boxWidth","boxHeight","scales","yAxes","stacked","ticks","beginAtZero","xAxes","setFormat","setDevicePixelRatio","setBackgroundColor","toDataUrl","then","image","push","e","preventDefault","periods","revenueElements","costsElements","tax","totalRevenue","monthlyRevenue","totalCosts","monthlyCosts","grossProfit","netProfit","startDate","endDate","asPdf","updateContainer","blob","toBlob","query","project"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { saveAs } from 'file-saver';\r\nimport ChartJsImage from 'chartjs-to-image';\r\nimport { format } from 'date-fns';\r\nimport gsap, { Linear } from 'gsap';\r\nimport { Font, pdf, Page, Text, View, Image, Document, StyleSheet, PDFViewer, PDFDownloadLink } from '@react-pdf/renderer';\r\nimport Router from 'next/router';\r\nimport splitHtml from 'split-html';\r\nimport $ from 'jquery';\r\nimport { useWindowSize } from '../../../../../utils/useWindowSize';\r\n\r\nFont.register({ src: '/fonts/poppins.ttf', family: 'Poppins' });\r\nFont.register({ src: '/fonts/comfortaa.ttf', family: 'Comfortaa' });\r\nFont.register({ src: '/fonts/comfortaa-Bold.ttf', family: 'Comfortaa-Bold' });\r\nFont.register({ src: '/fonts/Montserrat-Regular.ttf', family: 'Montserrat-Regular' });\r\nFont.register({ src: '/fonts/Montserrat-SemiBold.ttf', family: 'Montserrat-SemiBold' });\r\nFont.register({ src: '/fonts/Montserrat-SemiBoldItalic.ttf', family: 'Montserrat-SemiBoldItalic' });\r\nFont.register({ src: '/fonts/Montserrat-Italic.ttf', family: 'Montserrat-Italic' });\r\n\r\nconst styles = StyleSheet.create({\r\n  homePage: {\r\n    padding: 36,\r\n    // fontFamily: 'Comfortaa',\r\n    fontFamily: 'Montserrat-Regular',\r\n    backgroundColor: '#f8f9fb',\r\n    color: '#0a1230',\r\n  },\r\n  mainTitle: {\r\n    fontSize: 22,\r\n    color: '#0a1230',\r\n    textAlign: 'center',\r\n  },\r\n  table: { display: 'table', width: '100%', marginTop: 16 },\r\n  tableHeadRow: { flexDirection: 'row', backgroundColor: '#6C63FF', color: '#f8f9fb', borderTopLeftRadius: 8, borderTopRightRadius: 8 },\r\n  tableRow: { flexDirection: 'row' },\r\n  tableCol: { padding: 8 },\r\n  tableHeadCell: { marginTop: 5, fontSize: 10 },\r\n  tableCell: { marginTop: 5, fontSize: 9, borderLeft: '1px solid #0a1230', paddingLeft: 4 },\r\n});\r\n\r\nconst MyDocument = ({ imagesUrl, sections }) => {\r\n  console.log('PDF Sections --> ', sections);\r\n  console.log('PDF ImagesUrl --> ', imagesUrl);\r\n  return (\r\n    <Document scale={96 / 72} renderMode=\"svg\">\r\n      <Page size=\"A4\" style={styles.homePage}>\r\n        <View>\r\n          <Text style={styles.mainTitle}>Business plan</Text>\r\n        </View>\r\n      </Page>\r\n      {sections.map((section) => {\r\n        return (\r\n          <Page size=\"A4\" style={styles.homePage}>\r\n            <View style={{ marginBottom: 8 }}>\r\n              <Text style={{ fontSize: 18 }}>{section.title}</Text>\r\n            </View>\r\n            {section.fields.map((field) => {\r\n              console.log(field);\r\n              switch (field.type) {\r\n                case 'table':\r\n                  return (\r\n                    field.type == 'table' && (\r\n                      <View style={styles.table}>\r\n                        {/* TableHeader */}\r\n                        <View style={styles.tableHeadRow}>\r\n                          {field.headRows.map((headRow) => {\r\n                            const headRowsQuantity = field.headRows.length;\r\n                            switch (headRowsQuantity) {\r\n                              case 1:\r\n                                return (\r\n                                  <View style={{ width: '100%', padding: 8 }}>\r\n                                    <Text style={styles.tableHeadCell}>{headRow}</Text>\r\n                                  </View>\r\n                                );\r\n                              case 2:\r\n                                return (\r\n                                  <View style={{ width: '50%', padding: 8 }}>\r\n                                    <Text style={styles.tableHeadCell}>{headRow}</Text>\r\n                                  </View>\r\n                                );\r\n                              case 3:\r\n                                return (\r\n                                  <View style={{ width: '33.33%', padding: 8 }}>\r\n                                    <Text style={styles.tableHeadCell}>{headRow}</Text>\r\n                                  </View>\r\n                                );\r\n                              case 4:\r\n                                return (\r\n                                  <View style={{ width: '25%', padding: 8 }}>\r\n                                    <Text style={styles.tableHeadCell}>{headRow}</Text>\r\n                                  </View>\r\n                                );\r\n                              case 5:\r\n                                return (\r\n                                  <View style={{ width: '20%', padding: 8 }}>\r\n                                    <Text style={styles.tableHeadCell}>{headRow}</Text>\r\n                                  </View>\r\n                                );\r\n                              case 6:\r\n                                return (\r\n                                  <View style={{ width: '16.66%', padding: 8 }}>\r\n                                    <Text style={styles.tableHeadCell}>{headRow}</Text>\r\n                                  </View>\r\n                                );\r\n                              case 7:\r\n                                return (\r\n                                  <View style={{ width: '14.28%', padding: 8 }}>\r\n                                    <Text style={styles.tableHeadCell}>{headRow}</Text>\r\n                                  </View>\r\n                                );\r\n                              case 8:\r\n                                return (\r\n                                  <View style={{ width: '12.5%', padding: 8 }}>\r\n                                    <Text style={styles.tableHeadCell}>{headRow}</Text>\r\n                                  </View>\r\n                                );\r\n                              case 9:\r\n                                return (\r\n                                  <View style={{ width: '11.11%', padding: 8 }}>\r\n                                    <Text style={styles.tableHeadCell}>{headRow}</Text>\r\n                                  </View>\r\n                                );\r\n                              case 10:\r\n                                return (\r\n                                  <View style={{ width: '10%', padding: 8 }}>\r\n                                    <Text style={styles.tableHeadCell}>{headRow}</Text>\r\n                                  </View>\r\n                                );\r\n                              case 11:\r\n                                return (\r\n                                  <View style={{ width: '9.09%', padding: 8 }}>\r\n                                    <Text style={styles.tableHeadCell}>{headRow}</Text>\r\n                                  </View>\r\n                                );\r\n                              case 12:\r\n                                return (\r\n                                  <View style={{ width: '8.33%', padding: 8 }}>\r\n                                    <Text style={styles.tableHeadCell}>{headRow}</Text>\r\n                                  </View>\r\n                                );\r\n                            }\r\n                          })}\r\n                        </View>\r\n                        {/* TableBody */}\r\n                        {field.rows.map((row) => {\r\n                          return (\r\n                            <View style={styles.tableRow}>\r\n                              {row.row.map((rowName) => {\r\n                                const BodyRowsQuantity = field.rows.length;\r\n                                switch (BodyRowsQuantity) {\r\n                                  case 1:\r\n                                    return (\r\n                                      <View style={{ width: '100%', padding: 8 }}>\r\n                                        <Text style={styles.tableCell}>{rowName}</Text>\r\n                                      </View>\r\n                                    );\r\n                                  case 2:\r\n                                    return (\r\n                                      <View style={{ width: '50%', padding: 8 }}>\r\n                                        <Text style={styles.tableCell}>{rowName}</Text>\r\n                                      </View>\r\n                                    );\r\n                                  case 3:\r\n                                    return (\r\n                                      <View style={{ width: '33.33%', padding: 8 }}>\r\n                                        <Text style={styles.tableCell}>{rowName}</Text>\r\n                                      </View>\r\n                                    );\r\n                                  case 4:\r\n                                    return (\r\n                                      <View style={{ width: '25%', padding: 8 }}>\r\n                                        <Text style={styles.tableCell}>{rowName}</Text>\r\n                                      </View>\r\n                                    );\r\n                                  case 5:\r\n                                    return (\r\n                                      <View style={{ width: '20%', padding: 8 }}>\r\n                                        <Text style={styles.tableCell}>{rowName}</Text>\r\n                                      </View>\r\n                                    );\r\n                                  case 6:\r\n                                    return (\r\n                                      <View style={{ width: '16.66%', padding: 8 }}>\r\n                                        <Text style={styles.tableCell}>{rowName}</Text>\r\n                                      </View>\r\n                                    );\r\n                                  case 7:\r\n                                    return (\r\n                                      <View style={{ width: '14.28%', padding: 8 }}>\r\n                                        <Text style={styles.tableCell}>{rowName}</Text>\r\n                                      </View>\r\n                                    );\r\n                                  case 8:\r\n                                    return (\r\n                                      <View style={{ width: '12.5%', padding: 8 }}>\r\n                                        <Text style={styles.tableCell}>{rowName}</Text>\r\n                                      </View>\r\n                                    );\r\n                                  case 9:\r\n                                    return (\r\n                                      <View style={{ width: '11.11%', padding: 8 }}>\r\n                                        <Text style={styles.tableCell}>{rowName}</Text>\r\n                                      </View>\r\n                                    );\r\n                                  case 10:\r\n                                    return (\r\n                                      <View style={{ width: '10%', padding: 8 }}>\r\n                                        <Text style={styles.tableCell}>{rowName}</Text>\r\n                                      </View>\r\n                                    );\r\n                                  case 11:\r\n                                    return (\r\n                                      <View style={{ width: '9.09%', padding: 8 }}>\r\n                                        <Text style={styles.tableCell}>{rowName}</Text>\r\n                                      </View>\r\n                                    );\r\n                                  case 12:\r\n                                    return (\r\n                                      <View style={{ width: '8.33%', padding: 8 }}>\r\n                                        <Text style={styles.tableCell}>{rowName}</Text>\r\n                                      </View>\r\n                                    );\r\n                                }\r\n                              })}\r\n                            </View>\r\n                          );\r\n                        })}\r\n                      </View>\r\n                    )\r\n                  );\r\n                case 'header':\r\n                  return (\r\n                    <View style={{ marginTop: 16 }}>\r\n                      <Text style={{ fontSize: 14 }}>{field.title}</Text>\r\n                    </View>\r\n                  );\r\n                case 'spacing':\r\n                  return <View style={{ marginTop: 12, marginBottom: 12 }}></View>;\r\n                case 'chart':\r\n                  return imagesUrl.map((doc) => {\r\n                    if (doc.imageIndex === field.index) {\r\n                      return (\r\n                        <View style={{ marginTop: 16 }}>\r\n                          <Image style={{ width: '100%' }} src={doc.imageUrl} />\r\n                        </View>\r\n                      );\r\n                    }\r\n                  });\r\n                case 'text':\r\n                  let formattedText = $(field.body).map(function () {\r\n                    return $('<div>').append(this).html();\r\n                  });\r\n                  console.log(formattedText);\r\n                  return (\r\n                    <View style={{ marginTop: 16 }}>\r\n                      {$.map(formattedText, (res) => {\r\n                        console.log(res.toString().includes('<p></p>'));\r\n                        console.log(res.includes('<strong>'));\r\n                        // START --> <p></p>\r\n                        if (res.startsWith('<p>') && !res.includes('<strong>') && !res.includes('<em>') && !res.includes('<s>')) {\r\n                          return <Text style={{ fontSize: 12 }}>{res.replace(/(<([^>]+)>)/gi, '')}</Text>;\r\n                        }\r\n                        // <p>STRONG</p>\r\n                        else if (res.startsWith('<p>') && res.includes('<strong>') && !res.includes('<em>') && !res.includes('<s>')) {\r\n                          return (\r\n                            <Text style={{ fontSize: 12, fontFamily: 'Montserrat-SemiBold' }}>{res.replace(/(<([^>]+)>)/gi, '')}</Text>\r\n                          );\r\n                        }\r\n                        // <p>EM</p>\r\n                        else if (res.startsWith('<p>') && !res.includes('<strong>') && res.includes('<em>') && !res.includes('<s>')) {\r\n                          return <Text style={{ fontSize: 12, fontFamily: 'Montserrat-Italic' }}>{res.replace(/(<([^>]+)>)/gi, '')}</Text>;\r\n                        }\r\n                        // <p>EM + STRONG</p>\r\n                        else if (res.startsWith('<p>') && res.includes('<strong>') && res.includes('<em>') && !res.includes('<s>')) {\r\n                          return (\r\n                            <Text style={{ fontSize: 12, fontFamily: 'Montserrat-SemiBoldItalic' }}>\r\n                              {res.replace(/(<([^>]+)>)/gi, '')}\r\n                            </Text>\r\n                          );\r\n                        }\r\n                        // <p>S</p>\r\n                        else if (res.startsWith('<p>') && res.includes('<s>') && !res.includes('<strong>') && !res.includes('<em>')) {\r\n                          return <Text style={{ fontSize: 12, textDecoration: 'line-through' }}>{res.replace(/(<([^>]+)>)/gi, '')}</Text>;\r\n                        }\r\n                        // <p>S + EM</p>\r\n                        else if (res.startsWith('<p>') && res.includes('<s>') && res.includes('<em>') && !res.includes('<strong>')) {\r\n                          return (\r\n                            <Text style={{ fontSize: 12, fontFamily: 'Montserrat-Italic', textDecoration: 'line-through' }}>\r\n                              {res.replace(/(<([^>]+)>)/gi, '')}\r\n                            </Text>\r\n                          );\r\n                        }\r\n                        // <p>S + EM + STRONG</p>\r\n                        else if (res.startsWith('<p>') && res.includes('<s>') && res.includes('<em>') && res.includes('<strong>')) {\r\n                          return (\r\n                            <Text style={{ fontSize: 12, fontFamily: 'Montserrat-SemiBoldItalic', textDecoration: 'line-through' }}>\r\n                              {res.replace(/(<([^>]+)>)/gi, '')}\r\n                            </Text>\r\n                          );\r\n                        }\r\n                        // <p>U</p>\r\n                        else if (\r\n                          res.startsWith('<p>') &&\r\n                          res.includes('<u>') &&\r\n                          !res.includes('<s>') &&\r\n                          !res.includes('<strong>') &&\r\n                          !res.includes('<em>')\r\n                        ) {\r\n                          return <Text style={{ fontSize: 12, textDecoration: 'underline' }}>{res.replace(/(<([^>]+)>)/gi, '')}</Text>;\r\n                        }\r\n                        // <p>U + EM</p>\r\n                        else if (\r\n                          res.startsWith('<p>') &&\r\n                          res.includes('<u>') &&\r\n                          !res.includes('<s>') &&\r\n                          !res.includes('<strong>') &&\r\n                          res.includes('<em>')\r\n                        ) {\r\n                          return <Text style={{ fontSize: 12, textDecoration: 'underline' }}>{res.replace(/(<([^>]+)>)/gi, '')}</Text>;\r\n                        }\r\n                        // <p>U + S</p>\r\n                        else if (\r\n                          res.startsWith('<p>') &&\r\n                          res.includes('<u>') &&\r\n                          !res.includes('<s>') &&\r\n                          !res.includes('<strong>') &&\r\n                          res.includes('<em>')\r\n                        ) {\r\n                          return <Text style={{ fontSize: 12, textDecoration: 'underline' }}>{res.replace(/(<([^>]+)>)/gi, '')}</Text>;\r\n                        }\r\n                        // END --> <p></p>\r\n                        // <h2></h2>\r\n                        else if (res.startsWith('<h2>')) {\r\n                          return <Text style={{ fontSize: 14 }}>{res.replace(/(<([^>]+)>)/gi, '')}</Text>;\r\n                        }\r\n                        // <h1></h1>\r\n                        else if (res.startsWith('<h1>')) {\r\n                          return <Text style={{ fontSize: 16 }}>{res.replace(/(<([^>]+)>)/gi, '')}</Text>;\r\n                        }\r\n                      })}\r\n                    </View>\r\n                  );\r\n              }\r\n            })}\r\n          </Page>\r\n        );\r\n      })}\r\n    </Document>\r\n  );\r\n};\r\n\r\nconst ReactPDFDocument = ({ sections }) => {\r\n  const size = useWindowSize();\r\n\r\n  const saveContainer = useRef();\r\n  const dropdownButton = useRef();\r\n  const dropdownContainer = useRef();\r\n  const [dropdownButtonColorHelper, setDropdownButtonColorHelper] = useState(false);\r\n  const [dropdownContainerHelper, setDropdownContainerHelper] = useState(false);\r\n  const onSaveDropdownShow = () => {\r\n    if (!dropdownContainerHelper) {\r\n      gsap.to(dropdownContainer.current, { autoAlpha: 1, duration: 1, ease: Linear });\r\n      // gsap.to(dropdownButton.current, { backgroundColor: '#6C63FF', color: '#f8f9fb', duration: 1, ease: Linear });\r\n      setDropdownContainerHelper(true);\r\n      setDropdownButtonColorHelper(true);\r\n    } else if (dropdownContainerHelper) {\r\n      gsap.to(dropdownContainer.current, { autoAlpha: 0, duration: 1, ease: Linear });\r\n      // gsap.to(dropdownButton.current, { backgroundColor: '#f8f9fb', color: '#6C63FF', duration: 1, ease: Linear });\r\n      setDropdownContainerHelper(false);\r\n      setDropdownButtonColorHelper(false);\r\n    }\r\n  };\r\n\r\n  const [imagesUrl, setImagesUrl] = useState();\r\n  useEffect(() => {\r\n    console.log(sections);\r\n    const imagesArray = [];\r\n    setImagesUrl(imagesArray);\r\n    sections &&\r\n      sections.map((section) => {\r\n        section.fields.map((field) => {\r\n          if (field.type == 'chart') {\r\n            const colors =\r\n              field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart'\r\n                ? [\r\n                    'rgba(205,220,57,1)',\r\n                    'rgba(255,235,59,1)',\r\n                    'rgba(255,193,7,1)',\r\n                    'rgba(255,152,0,1)',\r\n                    'rgba(255,87,34,1)',\r\n                    'rgba(244,67,54,1)',\r\n                    'rgba(233,30,99,1)',\r\n                    'rgba(156,39,176,1)',\r\n                    'rgba(103,58,183,1)',\r\n                    'rgba(63,81,181,1)',\r\n                    'rgba(96,125,139,1)',\r\n                    'rgba(121,85,72,1)',\r\n                  ]\r\n                : field.chartType == 'Line chart' || field.chartType == 'Area chart'\r\n                ? 'rgba(255,185,0 ,1 )'\r\n                : [\r\n                    'rgba(255,185,0 ,1 )',\r\n                    'rgba(255,185,0 ,1 )',\r\n                    'rgba(255,185,0 ,1 )',\r\n                    'rgba(255,185,0 ,1 )',\r\n                    'rgba(255,185,0 ,1 )',\r\n                    'rgba(255,185,0 ,1 )',\r\n                    'rgba(255,185,0 ,1 )',\r\n                    'rgba(255,185,0 ,1 )',\r\n                    'rgba(255,185,0 ,1 )',\r\n                    'rgba(255,185,0 ,1 )',\r\n                    'rgba(255,185,0 ,1 )',\r\n                    'rgba(255,185,0 ,1 )',\r\n                  ];\r\n\r\n            const colors1 =\r\n              field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart'\r\n                ? [\r\n                    'rgba(205,220,57,1)',\r\n                    'rgba(255,235,59,1)',\r\n                    'rgba(255,193,7,1)',\r\n                    'rgba(255,152,0,1)',\r\n                    'rgba(255,87,34,1)',\r\n                    'rgba(244,67,54,1)',\r\n                    'rgba(233,30,99,1)',\r\n                    'rgba(156,39,176,1)',\r\n                    'rgba(103,58,183,1)',\r\n                    'rgba(63,81,181,1)',\r\n                    'rgba(96,125,139,1)',\r\n                    'rgba(121,85,72,1)',\r\n                  ]\r\n                : field.chartType == 'Line chart' || field.chartType == 'Area chart'\r\n                ? 'rgba(0,204,106 ,1 )'\r\n                : [\r\n                    'rgba(0,204,106 ,1 )',\r\n                    'rgba(0,204,106 ,1 )',\r\n                    'rgba(0,204,106 ,1 )',\r\n                    'rgba(0,204,106 ,1 )',\r\n                    'rgba(0,204,106 ,1 )',\r\n                    'rgba(0,204,106 ,1 )',\r\n                    'rgba(0,204,106 ,1 )',\r\n                    'rgba(0,204,106 ,1 )',\r\n                    'rgba(0,204,106 ,1 )',\r\n                    'rgba(0,204,106 ,1 )',\r\n                    'rgba(0,204,106 ,1 )',\r\n                    'rgba(0,204,106 ,1 )',\r\n                  ];\r\n\r\n            const colors2 =\r\n              field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart'\r\n                ? [\r\n                    'rgba(205,220,57,1)',\r\n                    'rgba(255,235,59,1)',\r\n                    'rgba(255,193,7,1)',\r\n                    'rgba(255,152,0,1)',\r\n                    'rgba(255,87,34,1)',\r\n                    'rgba(244,67,54,1)',\r\n                    'rgba(233,30,99,1)',\r\n                    'rgba(156,39,176,1)',\r\n                    'rgba(103,58,183,1)',\r\n                    'rgba(63,81,181,1)',\r\n                    'rgba(96,125,139,1)',\r\n                    'rgba(121,85,72,1)',\r\n                  ]\r\n                : field.chartType == 'Line chart' || field.chartType == 'Area chart'\r\n                ? 'rgba(0,120,215 ,1 )'\r\n                : [\r\n                    'rgba(0,120,215 ,1 )',\r\n                    'rgba(0,120,215 ,1 )',\r\n                    'rgba(0,120,215 ,1 )',\r\n                    'rgba(0,120,215 ,1 )',\r\n                    'rgba(0,120,215 ,1 )',\r\n                    'rgba(0,120,215 ,1 )',\r\n                    'rgba(0,120,215 ,1 )',\r\n                    'rgba(0,120,215 ,1 )',\r\n                    'rgba(0,120,215 ,1 )',\r\n                    'rgba(0,120,215 ,1 )',\r\n                    'rgba(0,120,215 ,1 )',\r\n                    'rgba(0,120,215 ,1 )',\r\n                  ];\r\n\r\n            const colors3 =\r\n              field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart'\r\n                ? [\r\n                    'rgba(205,220,57,1)',\r\n                    'rgba(255,235,59,1)',\r\n                    'rgba(255,193,7,1)',\r\n                    'rgba(255,152,0,1)',\r\n                    'rgba(255,87,34,1)',\r\n                    'rgba(244,67,54,1)',\r\n                    'rgba(233,30,99,1)',\r\n                    'rgba(156,39,176,1)',\r\n                    'rgba(103,58,183,1)',\r\n                    'rgba(63,81,181,1)',\r\n                    'rgba(96,125,139,1)',\r\n                    'rgba(121,85,72,1)',\r\n                  ]\r\n                : field.chartType == 'Line chart' || field.chartType == 'Area chart'\r\n                ? 'rgba(231,72,86 ,1 )'\r\n                : [\r\n                    'rgba(231,72,86 ,1 )',\r\n                    'rgba(231,72,86 ,1 )',\r\n                    'rgba(231,72,86 ,1 )',\r\n                    'rgba(231,72,86 ,1 )',\r\n                    'rgba(231,72,86 ,1 )',\r\n                    'rgba(231,72,86 ,1 )',\r\n                    'rgba(231,72,86 ,1 )',\r\n                    'rgba(231,72,86 ,1 )',\r\n                    'rgba(231,72,86 ,1 )',\r\n                    'rgba(231,72,86 ,1 )',\r\n                    'rgba(231,72,86 ,1 )',\r\n                    'rgba(231,72,86 ,1 )',\r\n                  ];\r\n\r\n            const colors4 =\r\n              field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart'\r\n                ? [\r\n                    'rgba(205,220,57,1)',\r\n                    'rgba(255,235,59,1)',\r\n                    'rgba(255,193,7,1)',\r\n                    'rgba(255,152,0,1)',\r\n                    'rgba(255,87,34,1)',\r\n                    'rgba(244,67,54,1)',\r\n                    'rgba(233,30,99,1)',\r\n                    'rgba(156,39,176,1)',\r\n                    'rgba(103,58,183,1)',\r\n                    'rgba(63,81,181,1)',\r\n                    'rgba(96,125,139,1)',\r\n                    'rgba(121,85,72,1)',\r\n                  ]\r\n                : field.chartType == 'Line chart' || field.chartType == 'Area chart'\r\n                ? 'rgba(126,115,95 ,1 )'\r\n                : [\r\n                    'rgba(126,115,95 ,1 )',\r\n                    'rgba(126,115,95 ,1 )',\r\n                    'rgba(126,115,95 ,1 )',\r\n                    'rgba(126,115,95 ,1 )',\r\n                    'rgba(126,115,95 ,1 )',\r\n                    'rgba(126,115,95 ,1 )',\r\n                    'rgba(126,115,95 ,1 )',\r\n                    'rgba(126,115,95 ,1 )',\r\n                    'rgba(126,115,95 ,1 )',\r\n                    'rgba(126,115,95 ,1 )',\r\n                    'rgba(126,115,95 ,1 )',\r\n                    'rgba(126,115,95 ,1 )',\r\n                  ];\r\n\r\n            const colors5 =\r\n              field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart'\r\n                ? [\r\n                    'rgba(205,220,57,1)',\r\n                    'rgba(255,235,59,1)',\r\n                    'rgba(255,193,7,1)',\r\n                    'rgba(255,152,0,1)',\r\n                    'rgba(255,87,34,1)',\r\n                    'rgba(244,67,54,1)',\r\n                    'rgba(233,30,99,1)',\r\n                    'rgba(156,39,176,1)',\r\n                    'rgba(103,58,183,1)',\r\n                    'rgba(63,81,181,1)',\r\n                    'rgba(96,125,139,1)',\r\n                    'rgba(121,85,72,1)',\r\n                  ]\r\n                : field.chartType == 'Line chart' || field.chartType == 'Area chart'\r\n                ? 'rgba(177,70,194 ,1 )'\r\n                : [\r\n                    'rgba(177,70,194 ,1 )',\r\n                    'rgba(177,70,194 ,1 )',\r\n                    'rgba(177,70,194 ,1 )',\r\n                    'rgba(177,70,194 ,1 )',\r\n                    'rgba(177,70,194 ,1 )',\r\n                    'rgba(177,70,194 ,1 )',\r\n                    'rgba(177,70,194 ,1 )',\r\n                    'rgba(177,70,194 ,1 )',\r\n                    'rgba(177,70,194 ,1 )',\r\n                    'rgba(177,70,194 ,1 )',\r\n                    'rgba(177,70,194 ,1 )',\r\n                    'rgba(177,70,194 ,1 )',\r\n                  ];\r\n            const data = {\r\n              labels: field.labels && [\r\n                ...field.labels.map((label) => {\r\n                  if (label !== '') {\r\n                    return label;\r\n                  } else {\r\n                    return '';\r\n                  }\r\n                }),\r\n              ],\r\n              datasets: [\r\n                // Dataset1\r\n                {\r\n                  label: field.dataset1Label && field.dataset1Label,\r\n                  data:\r\n                    field.dataset1 &&\r\n                    field.dataset1.map((data) => {\r\n                      if (data !== '') {\r\n                        return data;\r\n                      }\r\n                    }),\r\n                  backgroundColor: colors,\r\n                  borderWidth:\r\n                    field.chartType == 'Area chart' ? 0 : field.chartType == 'Pie chart' || (field.chartType == 'Doughnut chart' && 2),\r\n                },\r\n                // Dataset2\r\n                {\r\n                  label: field.dataset2Label && field.dataset2Label,\r\n                  data:\r\n                    field.dataset2 &&\r\n                    field.dataset2.map((data) => {\r\n                      if (data !== '') {\r\n                        return data;\r\n                      }\r\n                    }),\r\n                  backgroundColor: colors1,\r\n                  borderWidth:\r\n                    field.chartType == 'Area chart' ? 0 : field.chartType == 'Pie chart' || (field.chartType == 'Doughnut chart' && 2),\r\n                },\r\n                // Dataset3\r\n                {\r\n                  label: field.dataset3Label && field.dataset3Label,\r\n                  data:\r\n                    field.dataset3 &&\r\n                    field.dataset3.map((data) => {\r\n                      if (data !== '') {\r\n                        return data;\r\n                      }\r\n                    }),\r\n                  backgroundColor: colors2,\r\n                  borderWidth:\r\n                    field.chartType == 'Area chart' ? 0 : field.chartType == 'Pie chart' || (field.chartType == 'Doughnut chart' && 2),\r\n                },\r\n                // Dataset4\r\n                {\r\n                  label: field.dataset4Label && field.dataset4Label,\r\n                  data:\r\n                    field.dataset4 &&\r\n                    field.dataset4.map((data) => {\r\n                      if (data !== '') {\r\n                        return data;\r\n                      }\r\n                    }),\r\n                  backgroundColor: colors3,\r\n                  borderWidth:\r\n                    field.chartType == 'Area chart' ? 0 : field.chartType == 'Pie chart' || (field.chartType == 'Doughnut chart' && 2),\r\n                },\r\n                // Dataset5\r\n                {\r\n                  label: field.dataset5Label && field.dataset5Label,\r\n                  data:\r\n                    field.dataset5 &&\r\n                    field.dataset5.map((data) => {\r\n                      if (data !== '') {\r\n                        return data;\r\n                      }\r\n                    }),\r\n                  backgroundColor: colors4,\r\n                  borderWidth:\r\n                    field.chartType == 'Area chart' ? 0 : field.chartType == 'Pie chart' || (field.chartType == 'Doughnut chart' && 2),\r\n                },\r\n                // Dataset6\r\n                {\r\n                  label: field.dataset6Label && field.dataset6Label,\r\n                  data:\r\n                    field.dataset6 &&\r\n                    field.dataset6.map((data) => {\r\n                      if (data !== '') {\r\n                        return data;\r\n                      }\r\n                    }),\r\n                  backgroundColor: colors5,\r\n                  borderWidth:\r\n                    field.chartType == 'Area chart' ? 0 : field.chartType == 'Pie chart' || (field.chartType == 'Doughnut chart' && 2),\r\n                },\r\n              ],\r\n            };\r\n\r\n            const datas = data.datasets.map((dataset) => {\r\n              console.log(dataset.data[0]);\r\n              const test1 = dataset.data.map((datases) => {\r\n                if (datases !== undefined) {\r\n                  return datases;\r\n                } else {\r\n                  return '';\r\n                }\r\n              });\r\n              const test = test1.map((datarer, index) => {\r\n                if (data.labels[index] !== '') {\r\n                  return datarer;\r\n                }\r\n              });\r\n              const test2 = test.filter((obj) => obj !== undefined);\r\n              return test2;\r\n            });\r\n\r\n            const fill = field.chartType == 'Line chart' ? false : undefined;\r\n\r\n            const newDatasets = [\r\n              {\r\n                label: data.datasets[0].label,\r\n                data: datas[0],\r\n                backgroundColor: data.datasets[0].backgroundColor,\r\n                borderColor: field.chartType == 'Line chart' ? 'rgba(255,185,0 ,1 )' : 'rgb(255, 255, 255)',\r\n                borderWidth: data.datasets[0].borderWidth,\r\n                fill: fill,\r\n              },\r\n              {\r\n                label: data.datasets[1].label,\r\n                data: datas[1],\r\n                backgroundColor: data.datasets[1].backgroundColor,\r\n                borderColor: field.chartType == 'Line chart' ? 'rgba(0,204,106 ,1 )' : 'rgb(255, 255, 255)',\r\n                borderWidth: data.datasets[1].borderWidth,\r\n                fill: fill,\r\n              },\r\n              {\r\n                label: data.datasets[2].label,\r\n                data: datas[2],\r\n                backgroundColor: data.datasets[2].backgroundColor,\r\n                borderColor: field.chartType == 'Line chart' ? 'rgba(0,120,215 ,1 )' : 'rgb(255, 255, 255)',\r\n                borderWidth: data.datasets[2].borderWidth,\r\n                fill: fill,\r\n              },\r\n              {\r\n                label: data.datasets[3].label,\r\n                data: datas[3],\r\n                backgroundColor: data.datasets[3].backgroundColor,\r\n                borderColor: field.chartType == 'Line chart' ? 'rgba(231,72,86 ,1 )' : 'rgb(255, 255, 255)',\r\n                borderWidth: data.datasets[3].borderWidth,\r\n                fill: fill,\r\n              },\r\n              {\r\n                label: data.datasets[4].label,\r\n                data: datas[4],\r\n                backgroundColor: data.datasets[4].backgroundColor,\r\n                borderColor: field.chartType == 'Line chart' ? 'rgba(126,115,95 ,1 )' : 'rgb(255, 255, 255)',\r\n                borderWidth: data.datasets[4].borderWidth,\r\n                fill: fill,\r\n              },\r\n              {\r\n                label: data.datasets[5].label,\r\n                data: datas[5],\r\n                backgroundColor: data.datasets[5].backgroundColor,\r\n                borderColor: field.chartType == 'Line chart' ? 'rgba(177,70,194 ,1 )' : 'rgb(255, 255, 255)',\r\n                borderWidth: data.datasets[5].borderWidth,\r\n                fill: fill,\r\n              },\r\n            ];\r\n\r\n            const chartType = [\r\n              field.chartType == 'Bar chart' ? 'bar' : '',\r\n              field.chartType == 'Reverse chart' ? 'horizontalBar' : '',\r\n              field.chartType == 'Line chart' ? 'line' : '',\r\n              field.chartType == 'Pie chart' ? 'pie' : '',\r\n              field.chartType == 'Doughnut chart' ? 'doughnut' : '',\r\n              field.chartType == 'Area chart' ? 'line' : '',\r\n            ];\r\n\r\n            const toSaveChart = new ChartJsImage();\r\n            toSaveChart.setConfig({\r\n              type: chartType.filter((type) => type !== ''),\r\n              data: {\r\n                labels: data.labels.filter((label) => label !== ''),\r\n                datasets: newDatasets.filter((dataset) => dataset.label !== ''),\r\n              },\r\n              options: {\r\n                responsive: true,\r\n                legend: {\r\n                  position: 'bottom',\r\n                  labels: {\r\n                    boxWidth: 30,\r\n                    boxHeight: 5,\r\n                    fontFamily: 'Comfortaa',\r\n                    fontSize: 12,\r\n                  },\r\n                },\r\n                // defaultFontFamily: (Chart.defaults.global.defaultFontFamily = 'Comfortaa'),\r\n                scales: {\r\n                  yAxes: [\r\n                    {\r\n                      stacked: field.stacked == true ? true : false,\r\n                      ticks: {\r\n                        beginAtZero: true,\r\n                        fontFamily: 'Comfortaa',\r\n                        fontSize: 10,\r\n                      },\r\n                    },\r\n                  ],\r\n                  xAxes: [\r\n                    {\r\n                      stacked: field.stacked == true ? true : false,\r\n                      ticks: {\r\n                        beginAtZero: true,\r\n                        fontFamily: 'Comfortaa',\r\n                        fontSize: 10,\r\n                      },\r\n                    },\r\n                  ],\r\n                },\r\n              },\r\n            });\r\n\r\n            toSaveChart.setFormat('png').setDevicePixelRatio(3.0).setBackgroundColor('#f8f9fb');\r\n            const imageUrl = toSaveChart.toDataUrl();\r\n            imageUrl.then((image) => {\r\n              console.log(image);\r\n              imagesArray.push({ imageUrl: image, imageIndex: field.index });\r\n              console.log(imagesArray);\r\n              setImagesUrl(imagesArray);\r\n            });\r\n          }\r\n        });\r\n      });\r\n  }, [sections]);\r\n\r\n  console.log(imagesUrl);\r\n\r\n  return (\r\n    <div ref={saveContainer} className=\"relative flex justify-start\">\r\n      {size.width < 680 ? (\r\n        <div className=\"flex mt-4\">\r\n          <img\r\n            onClick={async (e) => {\r\n              e.preventDefault();\r\n              const doc = (\r\n                <MyDocument\r\n                  image={imageUrl}\r\n                  data={data}\r\n                  periods={periods}\r\n                  revenueElements={revenueElements}\r\n                  costsElements={costsElements}\r\n                  tax={tax}\r\n                  totalRevenue={totalRevenue}\r\n                  monthlyRevenue={monthlyRevenue}\r\n                  totalCosts={totalCosts}\r\n                  monthlyCosts={monthlyCosts}\r\n                  grossProfit={grossProfit}\r\n                  netProfit={netProfit}\r\n                  startDate={startDate}\r\n                  endDate={endDate}\r\n                />\r\n              );\r\n              const asPdf = pdf([]); // {} is important, throws without an argument\r\n              asPdf.updateContainer(doc);\r\n              const blob = await asPdf.toBlob();\r\n              saveAs(blob, `${Router.query.project}/cash-flow.pdf`);\r\n            }}\r\n            src=\"/mobile-navbar/pdf.svg\"\r\n            height={30}\r\n            width={30}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <div className=\"relative w-full flex justify-end items-center\">\r\n          <button\r\n            ref={dropdownButton}\r\n            onClick={onSaveDropdownShow}\r\n            className={`hover:bg-primary hover:text-white dark:hover:bg-primarydark dark:hover:text-background focus:outline-none border border-primary text-primary text-sm font-light py-2 px-8 rounded-2xl mt-2 dark:text-primarydark dark:border-primarydark ${\r\n              dropdownButtonColorHelper ? 'bg-primary text-background dark:bg-primarydark dark:text-background' : ''\r\n            }`}\r\n          >\r\n            Save my work\r\n          </button>\r\n          <div ref={dropdownContainer} className=\"absolute bg-white rounded-2xl shadow-xl p-6 top-14 z-50 invisible opacity-0\">\r\n            <div className=\"flex items-center justify-start\">\r\n              <img src=\"/mobile-navbar/success.svg\" height={26} width={26} />\r\n              <p className=\"text-lg ml-2\">Show the world your work!</p>\r\n            </div>\r\n            <div className=\"px-6 py-4 bg-background rounded-2xl mt-2 pr-6\">\r\n              <div>\r\n                <p className=\"flex\">Save as PDF:</p>\r\n                <img\r\n                  onClick={async (e) => {\r\n                    e.preventDefault();\r\n                    const doc = <MyDocument imagesUrl={imagesUrl} sections={sections} />;\r\n                    const asPdf = pdf([]);\r\n                    asPdf.updateContainer(doc);\r\n                    const blob = await asPdf.toBlob();\r\n                    saveAs(blob, `${Router.query.project}/competitors-analysis.pdf`);\r\n                  }}\r\n                  src=\"/mobile-navbar/pdf.svg\"\r\n                  height={30}\r\n                  width={30}\r\n                  className=\"mt-2 cursor-pointer\"\r\n                />\r\n              </div>\r\n              <div className=\"w-full justify-start items-center mt-4\">\r\n                <p>Share your competitors analysis with this public link:</p>\r\n                <div className=\"w-full flex mt-2\">\r\n                  <input value=\"www.project.com\" className=\"bg-linkBackground text-sm px-2 py-1 dark:text-primarydark\" />\r\n                  <img src=\"/mobile-navbar/foreign.svg\" height={28} width={28} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReactPDFDocument;\r\n"]},"metadata":{},"sourceType":"module"}