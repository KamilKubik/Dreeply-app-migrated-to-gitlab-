{"ast":null,"code":"import _regeneratorRuntime from \"C:/off-saas/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/off-saas/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this;\n\nimport Router from 'next/router';\nimport { db } from '../../../../../../../lib/firebase'; // Add new section\n\nexport var newSectionPage = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(title) {\n    var section, newFromDB, newID, newSectionIndex;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            section = {\n              position: _this.state.sections.length,\n              title: title,\n              body: ''\n            };\n            _context.next = 3;\n            return db.collection('projects').doc(_this.state.projectId).collection('businessPlan').doc(Router.query.project).collection('inputs').add({\n              position: section.position,\n              title: section.title,\n              // body: section.body,\n              fields: [],\n              timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n              createdAt: new Date()\n            });\n\n          case 3:\n            newFromDB = _context.sent;\n            newID = newFromDB.id; // await this.setState({ sections: [...this.state.sections, section] });\n\n            newSectionIndex = sections.indexOf(_this.state.sections.filter(function (_section) {\n              return _section.id === newID;\n            })[0]);\n\n            _this.setState({\n              selectedSection: _this.state.sections[newSectionIndex],\n              selectedSectionIndex: newSectionIndex\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function newSectionPage(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["C:/off-saas/components/dashboard/startup/project/business-app/business-plan/businessPlanUtils/sections.js"],"names":["Router","db","newSectionPage","title","section","position","state","sections","length","body","collection","doc","projectId","query","project","add","fields","timestamp","firebase","firestore","FieldValue","serverTimestamp","createdAt","Date","newFromDB","newID","id","newSectionIndex","indexOf","filter","_section","setState","selectedSection","selectedSectionIndex"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,aAAnB;AACA,SAASC,EAAT,QAAmB,mCAAnB,C,CAEA;;AAEA,OAAO,IAAMC,cAAc;AAAA,sEAAG,iBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACtBC,YAAAA,OADsB,GACZ;AACdC,cAAAA,QAAQ,EAAE,KAAI,CAACC,KAAL,CAAWC,QAAX,CAAoBC,MADhB;AAEdL,cAAAA,KAAK,EAAEA,KAFO;AAGdM,cAAAA,IAAI,EAAE;AAHQ,aADY;AAAA;AAAA,mBAMJR,EAAE,CACvBS,UADqB,CACV,UADU,EAErBC,GAFqB,CAEjB,KAAI,CAACL,KAAL,CAAWM,SAFM,EAGrBF,UAHqB,CAGV,cAHU,EAIrBC,GAJqB,CAIjBX,MAAM,CAACa,KAAP,CAAaC,OAJI,EAKrBJ,UALqB,CAKV,QALU,EAMrBK,GANqB,CAMjB;AACHV,cAAAA,QAAQ,EAAED,OAAO,CAACC,QADf;AAEHF,cAAAA,KAAK,EAAEC,OAAO,CAACD,KAFZ;AAGH;AACAa,cAAAA,MAAM,EAAE,EAJL;AAKHC,cAAAA,SAAS,EAAEC,QAAQ,CAACC,SAAT,CAAmBC,UAAnB,CAA8BC,eAA9B,EALR;AAMHC,cAAAA,SAAS,EAAE,IAAIC,IAAJ;AANR,aANiB,CANI;;AAAA;AAMtBC,YAAAA,SANsB;AAoBtBC,YAAAA,KApBsB,GAoBdD,SAAS,CAACE,EApBI,EAqB5B;;AACMC,YAAAA,eAtBsB,GAsBJpB,QAAQ,CAACqB,OAAT,CAAiB,KAAI,CAACtB,KAAL,CAAWC,QAAX,CAAoBsB,MAApB,CAA2B,UAACC,QAAD;AAAA,qBAAcA,QAAQ,CAACJ,EAAT,KAAgBD,KAA9B;AAAA,aAA3B,EAAgE,CAAhE,CAAjB,CAtBI;;AAuB5B,YAAA,KAAI,CAACM,QAAL,CAAc;AACZC,cAAAA,eAAe,EAAE,KAAI,CAAC1B,KAAL,CAAWC,QAAX,CAAoBoB,eAApB,CADL;AAEZM,cAAAA,oBAAoB,EAAEN;AAFV,aAAd;;AAvB4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAdzB,cAAc;AAAA;AAAA;AAAA,GAApB","sourcesContent":["import Router from 'next/router';\r\nimport { db } from '../../../../../../../lib/firebase';\r\n\r\n// Add new section\r\n\r\nexport const newSectionPage = async (title) => {\r\n  const section = {\r\n    position: this.state.sections.length,\r\n    title: title,\r\n    body: '',\r\n  };\r\n  const newFromDB = await db\r\n    .collection('projects')\r\n    .doc(this.state.projectId)\r\n    .collection('businessPlan')\r\n    .doc(Router.query.project)\r\n    .collection('inputs')\r\n    .add({\r\n      position: section.position,\r\n      title: section.title,\r\n      // body: section.body,\r\n      fields: [],\r\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n      createdAt: new Date(),\r\n    });\r\n  const newID = newFromDB.id;\r\n  // await this.setState({ sections: [...this.state.sections, section] });\r\n  const newSectionIndex = sections.indexOf(this.state.sections.filter((_section) => _section.id === newID)[0]);\r\n  this.setState({\r\n    selectedSection: this.state.sections[newSectionIndex],\r\n    selectedSectionIndex: newSectionIndex,\r\n  });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}