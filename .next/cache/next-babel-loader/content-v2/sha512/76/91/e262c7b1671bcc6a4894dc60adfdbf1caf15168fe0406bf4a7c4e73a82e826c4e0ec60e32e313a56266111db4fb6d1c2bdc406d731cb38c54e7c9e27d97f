{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\off-saas\\\\components\\\\dashboard\\\\startup\\\\project\\\\business-app\\\\PDFDocument.js\";\nimport React, { useRef, useState, useEffect } from 'react'; // import { html2pdf } from 'html2pdf.js';\n\nimport htmlToPdfmake from 'html-to-pdfmake';\nimport pdfMake from 'pdfmake/build/pdfmake';\nimport pdfFonts from 'pdfmake/build/vfs_fonts';\nimport { db } from '../../../../../lib/firebase';\nimport Router from 'next/router';\nimport ChartJsImage from 'chartjs-to-image';\nimport ChartPDF from './ChartPDF';\nimport gsap, { Linear } from 'gsap'; // import fs from 'fs';\n\nconst fs = require('fs');\n\nconst PDFDocument = ({\n  projectId,\n  pdfChartsCreate\n}) => {\n  // const containerRef = useRef();\n  const {\n    0: sections,\n    1: setSections\n  } = useState();\n  const {\n    0: document1,\n    1: setDocument\n  } = useState();\n  const {\n    0: imagesUrl,\n    1: setImagesUrl\n  } = useState();\n  console.log(projectId);\n  useEffect(async () => {\n    if (projectId) {\n      await db.collection('projects').doc(projectId).collection('businessPlan').doc(Router.query.project).collection('inputs').onSnapshot(querySnapshot => {\n        const sectionsData = querySnapshot.docs.map(doc => {\n          const data = doc.data(); // data['id'] = doc.id;\n\n          return data;\n        });\n        sectionsData.sort((a, b) => a.position - b.position);\n        console.log('Sections data --> ', sectionsData);\n        setSections(sectionsData); // pdfChartsCreate(sectionsData);\n\n        const imagesArray = [];\n        setImagesUrl(imagesArray);\n        sectionsData.map(section => {\n          section.fields.map(field => {\n            if (field.type == 'chart') {\n              const colors = field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' ? ['rgba(205,220,57,1)', 'rgba(255,235,59,1)', 'rgba(255,193,7,1)', 'rgba(255,152,0,1)', 'rgba(255,87,34,1)', 'rgba(244,67,54,1)', 'rgba(233,30,99,1)', 'rgba(156,39,176,1)', 'rgba(103,58,183,1)', 'rgba(63,81,181,1)', 'rgba(96,125,139,1)', 'rgba(121,85,72,1)'] : field.chartType == 'Line chart' || field.chartType == 'Area chart' ? 'rgba(255,185,0 ,1 )' : ['rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )'];\n              const colors1 = field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' ? ['rgba(205,220,57,1)', 'rgba(255,235,59,1)', 'rgba(255,193,7,1)', 'rgba(255,152,0,1)', 'rgba(255,87,34,1)', 'rgba(244,67,54,1)', 'rgba(233,30,99,1)', 'rgba(156,39,176,1)', 'rgba(103,58,183,1)', 'rgba(63,81,181,1)', 'rgba(96,125,139,1)', 'rgba(121,85,72,1)'] : field.chartType == 'Line chart' || field.chartType == 'Area chart' ? 'rgba(0,204,106 ,1 )' : ['rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )'];\n              const colors2 = field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' ? ['rgba(205,220,57,1)', 'rgba(255,235,59,1)', 'rgba(255,193,7,1)', 'rgba(255,152,0,1)', 'rgba(255,87,34,1)', 'rgba(244,67,54,1)', 'rgba(233,30,99,1)', 'rgba(156,39,176,1)', 'rgba(103,58,183,1)', 'rgba(63,81,181,1)', 'rgba(96,125,139,1)', 'rgba(121,85,72,1)'] : field.chartType == 'Line chart' || field.chartType == 'Area chart' ? 'rgba(0,120,215 ,1 )' : ['rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )'];\n              const colors3 = field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' ? ['rgba(205,220,57,1)', 'rgba(255,235,59,1)', 'rgba(255,193,7,1)', 'rgba(255,152,0,1)', 'rgba(255,87,34,1)', 'rgba(244,67,54,1)', 'rgba(233,30,99,1)', 'rgba(156,39,176,1)', 'rgba(103,58,183,1)', 'rgba(63,81,181,1)', 'rgba(96,125,139,1)', 'rgba(121,85,72,1)'] : field.chartType == 'Line chart' || field.chartType == 'Area chart' ? 'rgba(231,72,86 ,1 )' : ['rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )'];\n              const colors4 = field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' ? ['rgba(205,220,57,1)', 'rgba(255,235,59,1)', 'rgba(255,193,7,1)', 'rgba(255,152,0,1)', 'rgba(255,87,34,1)', 'rgba(244,67,54,1)', 'rgba(233,30,99,1)', 'rgba(156,39,176,1)', 'rgba(103,58,183,1)', 'rgba(63,81,181,1)', 'rgba(96,125,139,1)', 'rgba(121,85,72,1)'] : field.chartType == 'Line chart' || field.chartType == 'Area chart' ? 'rgba(126,115,95 ,1 )' : ['rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )'];\n              const colors5 = field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' ? ['rgba(205,220,57,1)', 'rgba(255,235,59,1)', 'rgba(255,193,7,1)', 'rgba(255,152,0,1)', 'rgba(255,87,34,1)', 'rgba(244,67,54,1)', 'rgba(233,30,99,1)', 'rgba(156,39,176,1)', 'rgba(103,58,183,1)', 'rgba(63,81,181,1)', 'rgba(96,125,139,1)', 'rgba(121,85,72,1)'] : field.chartType == 'Line chart' || field.chartType == 'Area chart' ? 'rgba(177,70,194 ,1 )' : ['rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )'];\n              const data = {\n                labels: field.labels && [...field.labels.map(label => {\n                  if (label !== '') {\n                    return label;\n                  } else {\n                    return '';\n                  }\n                })],\n                datasets: [// Dataset1\n                {\n                  label: field.dataset1Label && field.dataset1Label,\n                  data: field.dataset1 && field.dataset1.map(data => {\n                    if (data !== '') {\n                      return data;\n                    }\n                  }),\n                  backgroundColor: colors,\n                  borderWidth: field.chartType == 'Area chart' ? 0 : field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' && 2\n                }, // Dataset2\n                {\n                  label: field.dataset2Label && field.dataset2Label,\n                  data: field.dataset2 && field.dataset2.map(data => {\n                    if (data !== '') {\n                      return data;\n                    }\n                  }),\n                  backgroundColor: colors1,\n                  borderWidth: field.chartType == 'Area chart' ? 0 : field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' && 2\n                }, // Dataset3\n                {\n                  label: field.dataset3Label && field.dataset3Label,\n                  data: field.dataset3 && field.dataset3.map(data => {\n                    if (data !== '') {\n                      return data;\n                    }\n                  }),\n                  backgroundColor: colors2,\n                  borderWidth: field.chartType == 'Area chart' ? 0 : field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' && 2\n                }, // Dataset4\n                {\n                  label: field.dataset4Label && field.dataset4Label,\n                  data: field.dataset4 && field.dataset4.map(data => {\n                    if (data !== '') {\n                      return data;\n                    }\n                  }),\n                  backgroundColor: colors3,\n                  borderWidth: field.chartType == 'Area chart' ? 0 : field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' && 2\n                }, // Dataset5\n                {\n                  label: field.dataset5Label && field.dataset5Label,\n                  data: field.dataset5 && field.dataset5.map(data => {\n                    if (data !== '') {\n                      return data;\n                    }\n                  }),\n                  backgroundColor: colors4,\n                  borderWidth: field.chartType == 'Area chart' ? 0 : field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' && 2\n                }, // Dataset6\n                {\n                  label: field.dataset6Label && field.dataset6Label,\n                  data: field.dataset6 && field.dataset6.map(data => {\n                    if (data !== '') {\n                      return data;\n                    }\n                  }),\n                  backgroundColor: colors5,\n                  borderWidth: field.chartType == 'Area chart' ? 0 : field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' && 2\n                }]\n              };\n              const datas = data.datasets.map(dataset => {\n                console.log(dataset.data[0]);\n                const test1 = dataset.data.map(datases => {\n                  if (datases !== undefined) {\n                    return datases;\n                  } else {\n                    return '';\n                  }\n                });\n                const test = test1.map((datarer, index) => {\n                  if (data.labels[index] !== '') {\n                    return datarer;\n                  }\n                });\n                const test2 = test.filter(obj => obj !== undefined);\n                return test2;\n              });\n              const fill = field.chartType == 'Line chart' ? false : undefined;\n              const newDatasets = [{\n                label: data.datasets[0].label,\n                data: datas[0],\n                backgroundColor: data.datasets[0].backgroundColor,\n                borderColor: field.chartType == 'Line chart' ? 'rgba(255,185,0 ,1 )' : 'rgb(255, 255, 255)',\n                borderWidth: data.datasets[0].borderWidth,\n                fill: fill\n              }, {\n                label: data.datasets[1].label,\n                data: datas[1],\n                backgroundColor: data.datasets[1].backgroundColor,\n                borderColor: field.chartType == 'Line chart' ? 'rgba(0,204,106 ,1 )' : 'rgb(255, 255, 255)',\n                borderWidth: data.datasets[1].borderWidth,\n                fill: fill\n              }, {\n                label: data.datasets[2].label,\n                data: datas[2],\n                backgroundColor: data.datasets[2].backgroundColor,\n                borderColor: field.chartType == 'Line chart' ? 'rgba(0,120,215 ,1 )' : 'rgb(255, 255, 255)',\n                borderWidth: data.datasets[2].borderWidth,\n                fill: fill\n              }, {\n                label: data.datasets[3].label,\n                data: datas[3],\n                backgroundColor: data.datasets[3].backgroundColor,\n                borderColor: field.chartType == 'Line chart' ? 'rgba(231,72,86 ,1 )' : 'rgb(255, 255, 255)',\n                borderWidth: data.datasets[3].borderWidth,\n                fill: fill\n              }, {\n                label: data.datasets[4].label,\n                data: datas[4],\n                backgroundColor: data.datasets[4].backgroundColor,\n                borderColor: field.chartType == 'Line chart' ? 'rgba(126,115,95 ,1 )' : 'rgb(255, 255, 255)',\n                borderWidth: data.datasets[4].borderWidth,\n                fill: fill\n              }, {\n                label: data.datasets[5].label,\n                data: datas[5],\n                backgroundColor: data.datasets[5].backgroundColor,\n                borderColor: field.chartType == 'Line chart' ? 'rgba(177,70,194 ,1 )' : 'rgb(255, 255, 255)',\n                borderWidth: data.datasets[5].borderWidth,\n                fill: fill\n              }];\n              const chartType = [field.chartType == 'Bar chart' ? 'bar' : '', field.chartType == 'Reverse chart' ? 'horizontalBar' : '', field.chartType == 'Line chart' ? 'line' : '', field.chartType == 'Pie chart' ? 'pie' : '', field.chartType == 'Doughnut chart' ? 'doughnut' : '', field.chartType == 'Area chart' ? 'line' : ''];\n              const toSaveChart = new ChartJsImage();\n              toSaveChart.setConfig({\n                type: chartType.filter(type => type !== ''),\n                data: {\n                  labels: data.labels.filter(label => label !== ''),\n                  datasets: newDatasets.filter(dataset => dataset.label !== '')\n                },\n                options: {\n                  responsive: true,\n                  legend: {\n                    position: 'bottom'\n                  },\n                  // defaultFontFamily: (Chart.defaults.global.defaultFontFamily = 'Comfortaa'),\n                  scales: {\n                    yAxes: [{\n                      stacked: field.stacked == true ? true : false,\n                      ticks: {\n                        beginAtZero: true\n                      }\n                    }],\n                    xAxes: [{\n                      stacked: field.stacked == true ? true : false,\n                      ticks: {\n                        beginAtZero: true\n                      }\n                    }]\n                  }\n                }\n              });\n              toSaveChart.setFormat('png').setDevicePixelRatio(2.0);\n              const imageUrl = toSaveChart.toDataUrl();\n              imageUrl.then(image => {\n                console.log(image);\n                imagesArray.push({\n                  imageUrl: image,\n                  imageIndex: field.index\n                });\n                console.log(imagesArray);\n                setImagesUrl(imagesArray);\n              });\n            }\n          });\n        });\n      });\n    }\n  }, [projectId]);\n  pdfMake.vfs = pdfFonts.pdfMake.vfs;\n\n  const onDocumentSave1 = () => {\n    // Deleting commas between the array elements\n    console.log(sections);\n    const pdfContent = htmlToPdfmake( // `<div><p style='color: #6C63FF'>Hello from pdf document1<br />${helper ? '<p>Hello from helper</p>' : ''}</p></div>`\n    `<div>\n          <div style='height: '100%'>\n            <h1>Business plan</h1>\n          </div>\n          <div>${sections.map(section => {\n      return `<h3 class='pdf-pagebreak-before' style='margin-bottom: 20px'>${section.title}</h3>\n              ${section.fields.map(field => {\n        console.log(field.type);\n\n        if (field.type == 'header') {\n          return `<h5>${field.title}</h5>`;\n        }\n\n        if (field.type == 'text') {\n          console.log(field.body.includes('ql-align-center'));\n\n          if (field.body.includes('ql-align-center')) {\n            const newFieldBody = field.body.replace('class=\"ql-align-center\"', \"style='text-align: center'\");\n            return `<div>${newFieldBody}</div>`;\n          }\n\n          if (field.body.includes('ql-align-right')) {\n            const newFieldBody = field.body.replace('class=\"ql-align-right\"', \"style='text-align: right'\");\n            return `<div>${newFieldBody}</div>`;\n          }\n\n          if (field.body.includes('ql-align-justify')) {\n            const newFieldBody = field.body.replace('class=\"ql-align-justify\"', \"style='text-align: justify'\");\n            return `<div>${newFieldBody}</div>`;\n          }\n\n          return `<div>${field.body}</div>`;\n        }\n\n        if (field.type == 'chart') {\n          const imagesData = imagesUrl && imagesUrl.map(image => {\n            console.log('Images url --> ', imagesUrl);\n            console.log('Field --> ', field);\n\n            if (image.imageIndex == field.index) {\n              return `<img src='${image.imageUrl}' width=\"675\" style='margin-top: 30px; margin-bottom: 30px;' />`;\n            }\n          }).join('');\n          return imagesData;\n        }\n\n        if (field.type == 'spacing') {\n          return `<br />`;\n        }\n\n        if (field.type == 'table') {\n          console.log('Table --> ', field);\n          return `<table style=\"margin-top: 30px; margin-bottom: 30px;\">\n                      <thead>\n                          <tr>\n                              ${field.headRows.map((row, headRowIndex) => `<th class=\"thstyle\" style=\"background-color: #6C63FF; margin-top: 8px; margin-bottom: 8px; margin-left: 10px; margin-right: 10px; color: #FCFEFE;\">${row}</th>`).join('')}\n                          </tr>\n                      </thead>\n                      <tbody>\n                        ${field.rows.map((row, rowIndex) => `<tr\">${row.row.map((rowData, rowDataIndex) => `<td style=\"margin-top: 8px; margin-bottom: 8px; margin-left: 10px; margin-right: 10px; color: #0a1230;\">${rowData}</td>`).join('')}</tr>`).join('')}\n                    </tbody>\n                    </table>`;\n        }\n      }).join('')}\n              `;\n    }).join('')}</div>\n      </div>`, {\n      defaultStyles: {\n        p: ''\n      }\n    }, {\n      tableAutoSize: true\n    });\n    const pdfDocument = {\n      content: pdfContent,\n      styles: {\n        red: {\n          // font: 'Comfortaa',\n          color: 'red',\n          marginLeft: 200\n        },\n        // Insert\n        'html-p': {\n          marginBottom: 15\n        },\n        'ql-indent-1': {\n          marginLeft: 15\n        },\n        'ql-indent-2': {\n          marginLeft: 30\n        },\n        'ql-indent-3': {\n          marginLeft: 45\n        },\n        'ql-indent-4': {\n          marginLeft: 60\n        },\n        'ql-indent-5': {\n          marginLeft: 75\n        },\n        'ql-indent-6': {\n          marginLeft: 90\n        },\n        'ql-indent-7': {\n          marginLeft: 105\n        },\n        'ql-indent-8': {\n          marginLeft: 120\n        },\n        'html-table': {\n          'border-radius': '25px',\n          'margin-top': '30px',\n          'margin-bottom': '30px'\n        }\n      },\n      pageBreakBefore: function (currentNode) {\n        return currentNode.style && currentNode.style.indexOf('pdf-pagebreak-before') > -1;\n      }\n    };\n    const pdfDocGenerator = pdfMake.createPdf(pdfDocument);\n    pdfDocGenerator.download(`${Router.query.project}/business-plan.pdf`);\n  };\n\n  const saveContainer = useRef();\n  const dropdownButton = useRef();\n  const dropdownContainer = useRef();\n  const {\n    0: dropdownButtonColorHelper,\n    1: setDropdownButtonColorHelper\n  } = useState(false);\n  const {\n    0: dropdownContainerHelper,\n    1: setDropdownContainerHelper\n  } = useState(false);\n\n  const onSaveDropdownShow = () => {\n    if (!dropdownContainerHelper) {\n      gsap.to(dropdownContainer.current, {\n        autoAlpha: 1,\n        duration: 1,\n        ease: Linear\n      }); // gsap.to(dropdownButton.current, { backgroundColor: '#6C63FF', color: '#f8f9fb', duration: 1, ease: Linear });\n\n      setDropdownContainerHelper(true);\n      setDropdownButtonColorHelper(true);\n    } else if (dropdownContainerHelper) {\n      gsap.to(dropdownContainer.current, {\n        autoAlpha: 0,\n        duration: 1,\n        ease: Linear\n      }); // gsap.to(dropdownButton.current, { backgroundColor: '#f8f9fb', color: '#6C63FF', duration: 1, ease: Linear });\n\n      setDropdownContainerHelper(false);\n      setDropdownButtonColorHelper(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: saveContainer,\n    className: \"relative flex justify-start\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative w-full flex justify-end items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        ref: dropdownButton,\n        onClick: onSaveDropdownShow,\n        className: `hover:bg-primary hover:text-white dark:hover:bg-primarydark dark:hover:text-background focus:outline-none border border-primary text-primary text-sm screenLarge:text-base font-light py-2 px-8 rounded-2xl mt-2 dark:text-primarydark dark:border-primarydark ${dropdownButtonColorHelper ? 'bg-primary text-background dark:bg-primarydark dark:text-background' : ''}`,\n        children: \"Save my work\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 634,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: dropdownContainer,\n        className: \"absolute bg-white rounded-2xl shadow-xl p-6 top-14 z-50 invisible opacity-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-start\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/mobile-navbar/success.svg\",\n            height: 26,\n            width: 26\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 645,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-lg ml-2\",\n            children: \"Show the world your work!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 646,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 644,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-6 py-4 bg-background rounded-2xl mt-2 pr-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"flex\",\n              children: \"Save as PDF:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 650,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              onClick: onDocumentSave1,\n              src: \"/mobile-navbar/pdf.svg\",\n              height: 30,\n              width: 30,\n              className: \"mt-2 cursor-pointer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 651,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-full justify-start items-center mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Share your competitors analysis with this public link:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 654,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-full flex mt-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                value: \"www.project.com\",\n                className: \"bg-linkBackground text-sm px-2 py-1 dark:text-primarydark\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 656,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/mobile-navbar/foreign.svg\",\n                height: 28,\n                width: 28\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 657,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 655,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 653,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 643,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 633,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 632,\n    columnNumber: 5\n  }, this);\n};\n\nexport default PDFDocument;","map":{"version":3,"sources":["C:/off-saas/components/dashboard/startup/project/business-app/PDFDocument.js"],"names":["React","useRef","useState","useEffect","htmlToPdfmake","pdfMake","pdfFonts","db","Router","ChartJsImage","ChartPDF","gsap","Linear","fs","require","PDFDocument","projectId","pdfChartsCreate","sections","setSections","document1","setDocument","imagesUrl","setImagesUrl","console","log","collection","doc","query","project","onSnapshot","querySnapshot","sectionsData","docs","map","data","sort","a","b","position","imagesArray","section","fields","field","type","colors","chartType","colors1","colors2","colors3","colors4","colors5","labels","label","datasets","dataset1Label","dataset1","backgroundColor","borderWidth","dataset2Label","dataset2","dataset3Label","dataset3","dataset4Label","dataset4","dataset5Label","dataset5","dataset6Label","dataset6","datas","dataset","test1","datases","undefined","test","datarer","index","test2","filter","obj","fill","newDatasets","borderColor","toSaveChart","setConfig","options","responsive","legend","scales","yAxes","stacked","ticks","beginAtZero","xAxes","setFormat","setDevicePixelRatio","imageUrl","toDataUrl","then","image","push","imageIndex","vfs","onDocumentSave1","pdfContent","title","body","includes","newFieldBody","replace","imagesData","join","headRows","row","headRowIndex","rows","rowIndex","rowData","rowDataIndex","defaultStyles","p","tableAutoSize","pdfDocument","content","styles","red","color","marginLeft","marginBottom","pageBreakBefore","currentNode","style","indexOf","pdfDocGenerator","createPdf","download","saveContainer","dropdownButton","dropdownContainer","dropdownButtonColorHelper","setDropdownButtonColorHelper","dropdownContainerHelper","setDropdownContainerHelper","onSaveDropdownShow","to","current","autoAlpha","duration","ease"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\n// import { html2pdf } from 'html2pdf.js';\r\nimport htmlToPdfmake from 'html-to-pdfmake';\r\nimport pdfMake from 'pdfmake/build/pdfmake';\r\nimport pdfFonts from 'pdfmake/build/vfs_fonts';\r\nimport { db } from '../../../../../lib/firebase';\r\nimport Router from 'next/router';\r\nimport ChartJsImage from 'chartjs-to-image';\r\nimport ChartPDF from './ChartPDF';\r\nimport gsap, { Linear } from 'gsap';\r\n// import fs from 'fs';\r\n\r\nconst fs = require('fs');\r\n\r\nconst PDFDocument = ({ projectId, pdfChartsCreate }) => {\r\n  // const containerRef = useRef();\r\n  const [sections, setSections] = useState();\r\n  const [document1, setDocument] = useState();\r\n  const [imagesUrl, setImagesUrl] = useState();\r\n\r\n  console.log(projectId);\r\n\r\n  useEffect(async () => {\r\n    if (projectId) {\r\n      await db\r\n        .collection('projects')\r\n        .doc(projectId)\r\n        .collection('businessPlan')\r\n        .doc(Router.query.project)\r\n        .collection('inputs')\r\n        .onSnapshot((querySnapshot) => {\r\n          const sectionsData = querySnapshot.docs.map((doc) => {\r\n            const data = doc.data();\r\n            // data['id'] = doc.id;\r\n            return data;\r\n          });\r\n          sectionsData.sort((a, b) => a.position - b.position);\r\n          console.log('Sections data --> ', sectionsData);\r\n          setSections(sectionsData);\r\n          // pdfChartsCreate(sectionsData);\r\n          const imagesArray = [];\r\n          setImagesUrl(imagesArray);\r\n          sectionsData.map((section) => {\r\n            section.fields.map((field) => {\r\n              if (field.type == 'chart') {\r\n                const colors =\r\n                  field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart'\r\n                    ? [\r\n                        'rgba(205,220,57,1)',\r\n                        'rgba(255,235,59,1)',\r\n                        'rgba(255,193,7,1)',\r\n                        'rgba(255,152,0,1)',\r\n                        'rgba(255,87,34,1)',\r\n                        'rgba(244,67,54,1)',\r\n                        'rgba(233,30,99,1)',\r\n                        'rgba(156,39,176,1)',\r\n                        'rgba(103,58,183,1)',\r\n                        'rgba(63,81,181,1)',\r\n                        'rgba(96,125,139,1)',\r\n                        'rgba(121,85,72,1)',\r\n                      ]\r\n                    : field.chartType == 'Line chart' || field.chartType == 'Area chart'\r\n                    ? 'rgba(255,185,0 ,1 )'\r\n                    : [\r\n                        'rgba(255,185,0 ,1 )',\r\n                        'rgba(255,185,0 ,1 )',\r\n                        'rgba(255,185,0 ,1 )',\r\n                        'rgba(255,185,0 ,1 )',\r\n                        'rgba(255,185,0 ,1 )',\r\n                        'rgba(255,185,0 ,1 )',\r\n                        'rgba(255,185,0 ,1 )',\r\n                        'rgba(255,185,0 ,1 )',\r\n                        'rgba(255,185,0 ,1 )',\r\n                        'rgba(255,185,0 ,1 )',\r\n                        'rgba(255,185,0 ,1 )',\r\n                        'rgba(255,185,0 ,1 )',\r\n                      ];\r\n\r\n                const colors1 =\r\n                  field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart'\r\n                    ? [\r\n                        'rgba(205,220,57,1)',\r\n                        'rgba(255,235,59,1)',\r\n                        'rgba(255,193,7,1)',\r\n                        'rgba(255,152,0,1)',\r\n                        'rgba(255,87,34,1)',\r\n                        'rgba(244,67,54,1)',\r\n                        'rgba(233,30,99,1)',\r\n                        'rgba(156,39,176,1)',\r\n                        'rgba(103,58,183,1)',\r\n                        'rgba(63,81,181,1)',\r\n                        'rgba(96,125,139,1)',\r\n                        'rgba(121,85,72,1)',\r\n                      ]\r\n                    : field.chartType == 'Line chart' || field.chartType == 'Area chart'\r\n                    ? 'rgba(0,204,106 ,1 )'\r\n                    : [\r\n                        'rgba(0,204,106 ,1 )',\r\n                        'rgba(0,204,106 ,1 )',\r\n                        'rgba(0,204,106 ,1 )',\r\n                        'rgba(0,204,106 ,1 )',\r\n                        'rgba(0,204,106 ,1 )',\r\n                        'rgba(0,204,106 ,1 )',\r\n                        'rgba(0,204,106 ,1 )',\r\n                        'rgba(0,204,106 ,1 )',\r\n                        'rgba(0,204,106 ,1 )',\r\n                        'rgba(0,204,106 ,1 )',\r\n                        'rgba(0,204,106 ,1 )',\r\n                        'rgba(0,204,106 ,1 )',\r\n                      ];\r\n\r\n                const colors2 =\r\n                  field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart'\r\n                    ? [\r\n                        'rgba(205,220,57,1)',\r\n                        'rgba(255,235,59,1)',\r\n                        'rgba(255,193,7,1)',\r\n                        'rgba(255,152,0,1)',\r\n                        'rgba(255,87,34,1)',\r\n                        'rgba(244,67,54,1)',\r\n                        'rgba(233,30,99,1)',\r\n                        'rgba(156,39,176,1)',\r\n                        'rgba(103,58,183,1)',\r\n                        'rgba(63,81,181,1)',\r\n                        'rgba(96,125,139,1)',\r\n                        'rgba(121,85,72,1)',\r\n                      ]\r\n                    : field.chartType == 'Line chart' || field.chartType == 'Area chart'\r\n                    ? 'rgba(0,120,215 ,1 )'\r\n                    : [\r\n                        'rgba(0,120,215 ,1 )',\r\n                        'rgba(0,120,215 ,1 )',\r\n                        'rgba(0,120,215 ,1 )',\r\n                        'rgba(0,120,215 ,1 )',\r\n                        'rgba(0,120,215 ,1 )',\r\n                        'rgba(0,120,215 ,1 )',\r\n                        'rgba(0,120,215 ,1 )',\r\n                        'rgba(0,120,215 ,1 )',\r\n                        'rgba(0,120,215 ,1 )',\r\n                        'rgba(0,120,215 ,1 )',\r\n                        'rgba(0,120,215 ,1 )',\r\n                        'rgba(0,120,215 ,1 )',\r\n                      ];\r\n\r\n                const colors3 =\r\n                  field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart'\r\n                    ? [\r\n                        'rgba(205,220,57,1)',\r\n                        'rgba(255,235,59,1)',\r\n                        'rgba(255,193,7,1)',\r\n                        'rgba(255,152,0,1)',\r\n                        'rgba(255,87,34,1)',\r\n                        'rgba(244,67,54,1)',\r\n                        'rgba(233,30,99,1)',\r\n                        'rgba(156,39,176,1)',\r\n                        'rgba(103,58,183,1)',\r\n                        'rgba(63,81,181,1)',\r\n                        'rgba(96,125,139,1)',\r\n                        'rgba(121,85,72,1)',\r\n                      ]\r\n                    : field.chartType == 'Line chart' || field.chartType == 'Area chart'\r\n                    ? 'rgba(231,72,86 ,1 )'\r\n                    : [\r\n                        'rgba(231,72,86 ,1 )',\r\n                        'rgba(231,72,86 ,1 )',\r\n                        'rgba(231,72,86 ,1 )',\r\n                        'rgba(231,72,86 ,1 )',\r\n                        'rgba(231,72,86 ,1 )',\r\n                        'rgba(231,72,86 ,1 )',\r\n                        'rgba(231,72,86 ,1 )',\r\n                        'rgba(231,72,86 ,1 )',\r\n                        'rgba(231,72,86 ,1 )',\r\n                        'rgba(231,72,86 ,1 )',\r\n                        'rgba(231,72,86 ,1 )',\r\n                        'rgba(231,72,86 ,1 )',\r\n                      ];\r\n\r\n                const colors4 =\r\n                  field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart'\r\n                    ? [\r\n                        'rgba(205,220,57,1)',\r\n                        'rgba(255,235,59,1)',\r\n                        'rgba(255,193,7,1)',\r\n                        'rgba(255,152,0,1)',\r\n                        'rgba(255,87,34,1)',\r\n                        'rgba(244,67,54,1)',\r\n                        'rgba(233,30,99,1)',\r\n                        'rgba(156,39,176,1)',\r\n                        'rgba(103,58,183,1)',\r\n                        'rgba(63,81,181,1)',\r\n                        'rgba(96,125,139,1)',\r\n                        'rgba(121,85,72,1)',\r\n                      ]\r\n                    : field.chartType == 'Line chart' || field.chartType == 'Area chart'\r\n                    ? 'rgba(126,115,95 ,1 )'\r\n                    : [\r\n                        'rgba(126,115,95 ,1 )',\r\n                        'rgba(126,115,95 ,1 )',\r\n                        'rgba(126,115,95 ,1 )',\r\n                        'rgba(126,115,95 ,1 )',\r\n                        'rgba(126,115,95 ,1 )',\r\n                        'rgba(126,115,95 ,1 )',\r\n                        'rgba(126,115,95 ,1 )',\r\n                        'rgba(126,115,95 ,1 )',\r\n                        'rgba(126,115,95 ,1 )',\r\n                        'rgba(126,115,95 ,1 )',\r\n                        'rgba(126,115,95 ,1 )',\r\n                        'rgba(126,115,95 ,1 )',\r\n                      ];\r\n\r\n                const colors5 =\r\n                  field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart'\r\n                    ? [\r\n                        'rgba(205,220,57,1)',\r\n                        'rgba(255,235,59,1)',\r\n                        'rgba(255,193,7,1)',\r\n                        'rgba(255,152,0,1)',\r\n                        'rgba(255,87,34,1)',\r\n                        'rgba(244,67,54,1)',\r\n                        'rgba(233,30,99,1)',\r\n                        'rgba(156,39,176,1)',\r\n                        'rgba(103,58,183,1)',\r\n                        'rgba(63,81,181,1)',\r\n                        'rgba(96,125,139,1)',\r\n                        'rgba(121,85,72,1)',\r\n                      ]\r\n                    : field.chartType == 'Line chart' || field.chartType == 'Area chart'\r\n                    ? 'rgba(177,70,194 ,1 )'\r\n                    : [\r\n                        'rgba(177,70,194 ,1 )',\r\n                        'rgba(177,70,194 ,1 )',\r\n                        'rgba(177,70,194 ,1 )',\r\n                        'rgba(177,70,194 ,1 )',\r\n                        'rgba(177,70,194 ,1 )',\r\n                        'rgba(177,70,194 ,1 )',\r\n                        'rgba(177,70,194 ,1 )',\r\n                        'rgba(177,70,194 ,1 )',\r\n                        'rgba(177,70,194 ,1 )',\r\n                        'rgba(177,70,194 ,1 )',\r\n                        'rgba(177,70,194 ,1 )',\r\n                        'rgba(177,70,194 ,1 )',\r\n                      ];\r\n\r\n                const data = {\r\n                  labels: field.labels && [\r\n                    ...field.labels.map((label) => {\r\n                      if (label !== '') {\r\n                        return label;\r\n                      } else {\r\n                        return '';\r\n                      }\r\n                    }),\r\n                  ],\r\n                  datasets: [\r\n                    // Dataset1\r\n                    {\r\n                      label: field.dataset1Label && field.dataset1Label,\r\n                      data:\r\n                        field.dataset1 &&\r\n                        field.dataset1.map((data) => {\r\n                          if (data !== '') {\r\n                            return data;\r\n                          }\r\n                        }),\r\n                      backgroundColor: colors,\r\n                      borderWidth:\r\n                        field.chartType == 'Area chart' ? 0 : field.chartType == 'Pie chart' || (field.chartType == 'Doughnut chart' && 2),\r\n                    },\r\n                    // Dataset2\r\n                    {\r\n                      label: field.dataset2Label && field.dataset2Label,\r\n                      data:\r\n                        field.dataset2 &&\r\n                        field.dataset2.map((data) => {\r\n                          if (data !== '') {\r\n                            return data;\r\n                          }\r\n                        }),\r\n                      backgroundColor: colors1,\r\n                      borderWidth:\r\n                        field.chartType == 'Area chart' ? 0 : field.chartType == 'Pie chart' || (field.chartType == 'Doughnut chart' && 2),\r\n                    },\r\n                    // Dataset3\r\n                    {\r\n                      label: field.dataset3Label && field.dataset3Label,\r\n                      data:\r\n                        field.dataset3 &&\r\n                        field.dataset3.map((data) => {\r\n                          if (data !== '') {\r\n                            return data;\r\n                          }\r\n                        }),\r\n                      backgroundColor: colors2,\r\n                      borderWidth:\r\n                        field.chartType == 'Area chart' ? 0 : field.chartType == 'Pie chart' || (field.chartType == 'Doughnut chart' && 2),\r\n                    },\r\n                    // Dataset4\r\n                    {\r\n                      label: field.dataset4Label && field.dataset4Label,\r\n                      data:\r\n                        field.dataset4 &&\r\n                        field.dataset4.map((data) => {\r\n                          if (data !== '') {\r\n                            return data;\r\n                          }\r\n                        }),\r\n                      backgroundColor: colors3,\r\n                      borderWidth:\r\n                        field.chartType == 'Area chart' ? 0 : field.chartType == 'Pie chart' || (field.chartType == 'Doughnut chart' && 2),\r\n                    },\r\n                    // Dataset5\r\n                    {\r\n                      label: field.dataset5Label && field.dataset5Label,\r\n                      data:\r\n                        field.dataset5 &&\r\n                        field.dataset5.map((data) => {\r\n                          if (data !== '') {\r\n                            return data;\r\n                          }\r\n                        }),\r\n                      backgroundColor: colors4,\r\n                      borderWidth:\r\n                        field.chartType == 'Area chart' ? 0 : field.chartType == 'Pie chart' || (field.chartType == 'Doughnut chart' && 2),\r\n                    },\r\n                    // Dataset6\r\n                    {\r\n                      label: field.dataset6Label && field.dataset6Label,\r\n                      data:\r\n                        field.dataset6 &&\r\n                        field.dataset6.map((data) => {\r\n                          if (data !== '') {\r\n                            return data;\r\n                          }\r\n                        }),\r\n                      backgroundColor: colors5,\r\n                      borderWidth:\r\n                        field.chartType == 'Area chart' ? 0 : field.chartType == 'Pie chart' || (field.chartType == 'Doughnut chart' && 2),\r\n                    },\r\n                  ],\r\n                };\r\n\r\n                const datas = data.datasets.map((dataset) => {\r\n                  console.log(dataset.data[0]);\r\n                  const test1 = dataset.data.map((datases) => {\r\n                    if (datases !== undefined) {\r\n                      return datases;\r\n                    } else {\r\n                      return '';\r\n                    }\r\n                  });\r\n                  const test = test1.map((datarer, index) => {\r\n                    if (data.labels[index] !== '') {\r\n                      return datarer;\r\n                    }\r\n                  });\r\n                  const test2 = test.filter((obj) => obj !== undefined);\r\n                  return test2;\r\n                });\r\n\r\n                const fill = field.chartType == 'Line chart' ? false : undefined;\r\n\r\n                const newDatasets = [\r\n                  {\r\n                    label: data.datasets[0].label,\r\n                    data: datas[0],\r\n                    backgroundColor: data.datasets[0].backgroundColor,\r\n                    borderColor: field.chartType == 'Line chart' ? 'rgba(255,185,0 ,1 )' : 'rgb(255, 255, 255)',\r\n                    borderWidth: data.datasets[0].borderWidth,\r\n                    fill: fill,\r\n                  },\r\n                  {\r\n                    label: data.datasets[1].label,\r\n                    data: datas[1],\r\n                    backgroundColor: data.datasets[1].backgroundColor,\r\n                    borderColor: field.chartType == 'Line chart' ? 'rgba(0,204,106 ,1 )' : 'rgb(255, 255, 255)',\r\n                    borderWidth: data.datasets[1].borderWidth,\r\n                    fill: fill,\r\n                  },\r\n                  {\r\n                    label: data.datasets[2].label,\r\n                    data: datas[2],\r\n                    backgroundColor: data.datasets[2].backgroundColor,\r\n                    borderColor: field.chartType == 'Line chart' ? 'rgba(0,120,215 ,1 )' : 'rgb(255, 255, 255)',\r\n                    borderWidth: data.datasets[2].borderWidth,\r\n                    fill: fill,\r\n                  },\r\n                  {\r\n                    label: data.datasets[3].label,\r\n                    data: datas[3],\r\n                    backgroundColor: data.datasets[3].backgroundColor,\r\n                    borderColor: field.chartType == 'Line chart' ? 'rgba(231,72,86 ,1 )' : 'rgb(255, 255, 255)',\r\n                    borderWidth: data.datasets[3].borderWidth,\r\n                    fill: fill,\r\n                  },\r\n                  {\r\n                    label: data.datasets[4].label,\r\n                    data: datas[4],\r\n                    backgroundColor: data.datasets[4].backgroundColor,\r\n                    borderColor: field.chartType == 'Line chart' ? 'rgba(126,115,95 ,1 )' : 'rgb(255, 255, 255)',\r\n                    borderWidth: data.datasets[4].borderWidth,\r\n                    fill: fill,\r\n                  },\r\n                  {\r\n                    label: data.datasets[5].label,\r\n                    data: datas[5],\r\n                    backgroundColor: data.datasets[5].backgroundColor,\r\n                    borderColor: field.chartType == 'Line chart' ? 'rgba(177,70,194 ,1 )' : 'rgb(255, 255, 255)',\r\n                    borderWidth: data.datasets[5].borderWidth,\r\n                    fill: fill,\r\n                  },\r\n                ];\r\n\r\n                const chartType = [\r\n                  field.chartType == 'Bar chart' ? 'bar' : '',\r\n                  field.chartType == 'Reverse chart' ? 'horizontalBar' : '',\r\n                  field.chartType == 'Line chart' ? 'line' : '',\r\n                  field.chartType == 'Pie chart' ? 'pie' : '',\r\n                  field.chartType == 'Doughnut chart' ? 'doughnut' : '',\r\n                  field.chartType == 'Area chart' ? 'line' : '',\r\n                ];\r\n\r\n                const toSaveChart = new ChartJsImage();\r\n                toSaveChart.setConfig({\r\n                  type: chartType.filter((type) => type !== ''),\r\n                  data: {\r\n                    labels: data.labels.filter((label) => label !== ''),\r\n                    datasets: newDatasets.filter((dataset) => dataset.label !== ''),\r\n                  },\r\n                  options: {\r\n                    responsive: true,\r\n                    legend: {\r\n                      position: 'bottom',\r\n                    },\r\n                    // defaultFontFamily: (Chart.defaults.global.defaultFontFamily = 'Comfortaa'),\r\n                    scales: {\r\n                      yAxes: [\r\n                        {\r\n                          stacked: field.stacked == true ? true : false,\r\n                          ticks: {\r\n                            beginAtZero: true,\r\n                          },\r\n                        },\r\n                      ],\r\n                      xAxes: [\r\n                        {\r\n                          stacked: field.stacked == true ? true : false,\r\n                          ticks: {\r\n                            beginAtZero: true,\r\n                          },\r\n                        },\r\n                      ],\r\n                    },\r\n                  },\r\n                });\r\n\r\n                toSaveChart.setFormat('png').setDevicePixelRatio(2.0);\r\n                const imageUrl = toSaveChart.toDataUrl();\r\n                imageUrl.then((image) => {\r\n                  console.log(image);\r\n                  imagesArray.push({ imageUrl: image, imageIndex: field.index });\r\n                  console.log(imagesArray);\r\n                  setImagesUrl(imagesArray);\r\n                });\r\n              }\r\n            });\r\n          });\r\n        });\r\n    }\r\n  }, [projectId]);\r\n\r\n  pdfMake.vfs = pdfFonts.pdfMake.vfs;\r\n\r\n  const onDocumentSave1 = () => {\r\n    // Deleting commas between the array elements\r\n    console.log(sections);\r\n    const pdfContent = htmlToPdfmake(\r\n      // `<div><p style='color: #6C63FF'>Hello from pdf document1<br />${helper ? '<p>Hello from helper</p>' : ''}</p></div>`\r\n      `<div>\r\n          <div style='height: '100%'>\r\n            <h1>Business plan</h1>\r\n          </div>\r\n          <div>${sections\r\n            .map((section) => {\r\n              return `<h3 class='pdf-pagebreak-before' style='margin-bottom: 20px'>${section.title}</h3>\r\n              ${section.fields\r\n                .map((field) => {\r\n                  console.log(field.type);\r\n                  if (field.type == 'header') {\r\n                    return `<h5>${field.title}</h5>`;\r\n                  }\r\n                  if (field.type == 'text') {\r\n                    console.log(field.body.includes('ql-align-center'));\r\n                    if (field.body.includes('ql-align-center')) {\r\n                      const newFieldBody = field.body.replace('class=\"ql-align-center\"', \"style='text-align: center'\");\r\n                      return `<div>${newFieldBody}</div>`;\r\n                    }\r\n                    if (field.body.includes('ql-align-right')) {\r\n                      const newFieldBody = field.body.replace('class=\"ql-align-right\"', \"style='text-align: right'\");\r\n                      return `<div>${newFieldBody}</div>`;\r\n                    }\r\n                    if (field.body.includes('ql-align-justify')) {\r\n                      const newFieldBody = field.body.replace('class=\"ql-align-justify\"', \"style='text-align: justify'\");\r\n                      return `<div>${newFieldBody}</div>`;\r\n                    }\r\n                    return `<div>${field.body}</div>`;\r\n                  }\r\n                  if (field.type == 'chart') {\r\n                    const imagesData =\r\n                      imagesUrl &&\r\n                      imagesUrl\r\n                        .map((image) => {\r\n                          console.log('Images url --> ', imagesUrl);\r\n                          console.log('Field --> ', field);\r\n                          if (image.imageIndex == field.index) {\r\n                            return `<img src='${image.imageUrl}' width=\"675\" style='margin-top: 30px; margin-bottom: 30px;' />`;\r\n                          }\r\n                        })\r\n                        .join('');\r\n                    return imagesData;\r\n                  }\r\n                  if (field.type == 'spacing') {\r\n                    return `<br />`;\r\n                  }\r\n                  if (field.type == 'table') {\r\n                    console.log('Table --> ', field);\r\n                    return `<table style=\"margin-top: 30px; margin-bottom: 30px;\">\r\n                      <thead>\r\n                          <tr>\r\n                              ${field.headRows\r\n                                .map(\r\n                                  (row, headRowIndex) =>\r\n                                    `<th class=\"thstyle\" style=\"background-color: #6C63FF; margin-top: 8px; margin-bottom: 8px; margin-left: 10px; margin-right: 10px; color: #FCFEFE;\">${row}</th>`\r\n                                )\r\n                                .join('')}\r\n                          </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        ${field.rows\r\n                          .map(\r\n                            (row, rowIndex) =>\r\n                              `<tr\">${row.row\r\n                                .map(\r\n                                  (rowData, rowDataIndex) =>\r\n                                    `<td style=\"margin-top: 8px; margin-bottom: 8px; margin-left: 10px; margin-right: 10px; color: #0a1230;\">${rowData}</td>`\r\n                                )\r\n                                .join('')}</tr>`\r\n                          )\r\n                          .join('')}\r\n                    </tbody>\r\n                    </table>`;\r\n                  }\r\n                })\r\n                .join('')}\r\n              `;\r\n            })\r\n            .join('')}</div>\r\n      </div>`,\r\n      { defaultStyles: { p: '' } },\r\n      { tableAutoSize: true }\r\n    );\r\n    const pdfDocument = {\r\n      content: pdfContent,\r\n      styles: {\r\n        red: {\r\n          // font: 'Comfortaa',\r\n          color: 'red',\r\n          marginLeft: 200,\r\n        },\r\n        // Insert\r\n        'html-p': {\r\n          marginBottom: 15,\r\n        },\r\n        'ql-indent-1': {\r\n          marginLeft: 15,\r\n        },\r\n        'ql-indent-2': {\r\n          marginLeft: 30,\r\n        },\r\n        'ql-indent-3': {\r\n          marginLeft: 45,\r\n        },\r\n        'ql-indent-4': {\r\n          marginLeft: 60,\r\n        },\r\n        'ql-indent-5': {\r\n          marginLeft: 75,\r\n        },\r\n        'ql-indent-6': {\r\n          marginLeft: 90,\r\n        },\r\n        'ql-indent-7': {\r\n          marginLeft: 105,\r\n        },\r\n        'ql-indent-8': {\r\n          marginLeft: 120,\r\n        },\r\n        'html-table': {\r\n          'border-radius': '25px',\r\n          'margin-top': '30px',\r\n          'margin-bottom': '30px',\r\n        },\r\n      },\r\n      pageBreakBefore: function (currentNode) {\r\n        return currentNode.style && currentNode.style.indexOf('pdf-pagebreak-before') > -1;\r\n      },\r\n    };\r\n    const pdfDocGenerator = pdfMake.createPdf(pdfDocument);\r\n    pdfDocGenerator.download(`${Router.query.project}/business-plan.pdf`);\r\n  };\r\n\r\n  const saveContainer = useRef();\r\n\r\n  const dropdownButton = useRef();\r\n  const dropdownContainer = useRef();\r\n  const [dropdownButtonColorHelper, setDropdownButtonColorHelper] = useState(false);\r\n  const [dropdownContainerHelper, setDropdownContainerHelper] = useState(false);\r\n  const onSaveDropdownShow = () => {\r\n    if (!dropdownContainerHelper) {\r\n      gsap.to(dropdownContainer.current, { autoAlpha: 1, duration: 1, ease: Linear });\r\n      // gsap.to(dropdownButton.current, { backgroundColor: '#6C63FF', color: '#f8f9fb', duration: 1, ease: Linear });\r\n      setDropdownContainerHelper(true);\r\n      setDropdownButtonColorHelper(true);\r\n    } else if (dropdownContainerHelper) {\r\n      gsap.to(dropdownContainer.current, { autoAlpha: 0, duration: 1, ease: Linear });\r\n      // gsap.to(dropdownButton.current, { backgroundColor: '#f8f9fb', color: '#6C63FF', duration: 1, ease: Linear });\r\n      setDropdownContainerHelper(false);\r\n      setDropdownButtonColorHelper(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div ref={saveContainer} className=\"relative flex justify-start\">\r\n      <div className=\"relative w-full flex justify-end items-center\">\r\n        <button\r\n          ref={dropdownButton}\r\n          onClick={onSaveDropdownShow}\r\n          className={`hover:bg-primary hover:text-white dark:hover:bg-primarydark dark:hover:text-background focus:outline-none border border-primary text-primary text-sm screenLarge:text-base font-light py-2 px-8 rounded-2xl mt-2 dark:text-primarydark dark:border-primarydark ${\r\n            dropdownButtonColorHelper ? 'bg-primary text-background dark:bg-primarydark dark:text-background' : ''\r\n          }`}\r\n        >\r\n          Save my work\r\n        </button>\r\n        <div ref={dropdownContainer} className=\"absolute bg-white rounded-2xl shadow-xl p-6 top-14 z-50 invisible opacity-0\">\r\n          <div className=\"flex items-center justify-start\">\r\n            <img src=\"/mobile-navbar/success.svg\" height={26} width={26} />\r\n            <p className=\"text-lg ml-2\">Show the world your work!</p>\r\n          </div>\r\n          <div className=\"px-6 py-4 bg-background rounded-2xl mt-2 pr-6\">\r\n            <div>\r\n              <p className=\"flex\">Save as PDF:</p>\r\n              <img onClick={onDocumentSave1} src=\"/mobile-navbar/pdf.svg\" height={30} width={30} className=\"mt-2 cursor-pointer\" />\r\n            </div>\r\n            <div className=\"w-full justify-start items-center mt-4\">\r\n              <p>Share your competitors analysis with this public link:</p>\r\n              <div className=\"w-full flex mt-2\">\r\n                <input value=\"www.project.com\" className=\"bg-linkBackground text-sm px-2 py-1 dark:text-primarydark\" />\r\n                <img src=\"/mobile-navbar/foreign.svg\" height={28} width={28} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PDFDocument;\r\n"]},"metadata":{},"sourceType":"module"}