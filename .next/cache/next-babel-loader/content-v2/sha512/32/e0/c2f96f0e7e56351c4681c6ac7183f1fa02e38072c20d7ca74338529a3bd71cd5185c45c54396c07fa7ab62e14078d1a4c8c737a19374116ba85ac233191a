{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/off-saas/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/off-saas/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\off-saas\\\\components\\\\dashboard\\\\startup\\\\TippyGuide.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport gsap, { Power4 } from 'gsap';\nimport Tippy from '@tippyjs/react';\nimport Image from 'next/image';\n\nvar TippyGuide = function TippyGuide(_ref) {\n  _s();\n\n  var contentClass = _ref.contentClass,\n      contentText = _ref.contentText,\n      market = _ref.market,\n      model = _ref.model,\n      success = _ref.success,\n      tippyMonster = _ref.tippyMonster,\n      setTippyMonster = _ref.setTippyMonster,\n      setCurrentTippy = _ref.setCurrentTippy,\n      emptyInput = _ref.emptyInput,\n      angry = _ref.angry;\n\n  var _useState = useState(false),\n      visible = _useState[0],\n      setVisible = _useState[1];\n\n  var contentRef = useRef(null);\n  var tippyRef = useRef();\n  var suggestionIcon = useRef();\n  var tippyder = useRef(); // const [emptyInput, setEmptyInput] = useState(false);\n\n  var show = function show() {\n    gsap.fromTo(tippyRef.current, {\n      autoAlpha: 0,\n      scale: 0\n    }, {\n      autoAlpha: 1,\n      scale: 1,\n      duration: 1,\n      ease: Power4.easeOut\n    });\n    setVisible(true); // emptyInput && setCurrentTippy(true); // current tippy jest częścią obsługi problemu, kiedy mamy otwartego tooltipa normalnego i wciskamy, żeby wyświetlić czerwonego\n  };\n\n  var hide = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return gsap.to(tippyRef.current, {\n                autoAlpha: 0,\n                scale: 0,\n                duration: 1,\n                ease: Power4.easeIn\n              });\n\n            case 2:\n              // emptyInput && setTippyMonster(false);\n              setVisible(false); // emptyInput && setCurrentTippy(false);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function hide() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var onImageClick = function onImageClick() {\n    visible ? hide() : show();\n  };\n\n  useEffect(function () {\n    tippyder.current.classList.remove('data-placement'); // suggestionIcon.current.addEventListener('mouseenter', () => (visible ? hide() : show()));\n    // suggestionIcon.current.addEventListener('mouseleave', () => (!visible ? hide() : show()));\n    // GSAP\n    // gsap.fromTo(\n    //   contentRef.current,\n    //   { autoAlpha: 0 },\n    //   { autoAlpha: 1, duration: 2, ease: Power4.easeOut }\n    // );\n    // TIPPY\n    // setVisible(true);\n    // emptyInput && setCurrentTippy(true);\n  }, []);\n  console.log('tm - ', tippyMonster);\n  console.log('visible - ', visible);\n  return /*#__PURE__*/_jsxDEV(Tippy, {\n    ref: tippyder // trigger={tippyMonster}\n    ,\n    sticky: false,\n    zIndex: 20,\n    touch: true,\n    visible: visible,\n    onClickOutside: hide,\n    placement: \"left-end\" // offset={[-200, -35]}\n    ,\n    interactive: true,\n    content: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: tippyRef,\n      className: contentClass,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          whiteSpace: 'pre-line'\n        },\n        className: \"text-primarydark p-4 text-sm text-white\",\n        children: [angry ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/emojis/angersymbol.svg\",\n          height: 22,\n          width: 22,\n          className: \"inline-block relative bottom-0.5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, _this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/emojis/test.svg\",\n          height: 22,\n          width: 22,\n          className: \"inline-block\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, _this), contentText]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, _this),\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      ref: suggestionIcon,\n      id: \"suggestionIcon\",\n      className: \"relative cursor-pointer\",\n      src: \"/guide/lamp2.svg\",\n      height: 40,\n      width: 40,\n      onClick: onImageClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(TippyGuide, \"2jsaqhMZxxNYAPjWcRYXtnHr3rA=\");\n\n_c = TippyGuide;\nexport default TippyGuide;\n\nvar _c;\n\n$RefreshReg$(_c, \"TippyGuide\");","map":{"version":3,"sources":["C:/off-saas/components/dashboard/startup/TippyGuide.js"],"names":["React","useState","useEffect","useRef","gsap","Power4","Tippy","Image","TippyGuide","contentClass","contentText","market","model","success","tippyMonster","setTippyMonster","setCurrentTippy","emptyInput","angry","visible","setVisible","contentRef","tippyRef","suggestionIcon","tippyder","show","fromTo","current","autoAlpha","scale","duration","ease","easeOut","hide","to","easeIn","onImageClick","classList","remove","console","log","whiteSpace"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport gsap, { Power4 } from 'gsap';\r\nimport Tippy from '@tippyjs/react';\r\nimport Image from 'next/image';\r\n\r\nconst TippyGuide = ({\r\n  contentClass,\r\n  contentText,\r\n  market,\r\n  model,\r\n  success,\r\n  tippyMonster,\r\n  setTippyMonster,\r\n  setCurrentTippy,\r\n  emptyInput,\r\n  angry,\r\n}) => {\r\n  const [visible, setVisible] = useState(false);\r\n  const contentRef = useRef(null);\r\n  const tippyRef = useRef();\r\n  const suggestionIcon = useRef();\r\n  const tippyder = useRef();\r\n\r\n  // const [emptyInput, setEmptyInput] = useState(false);\r\n\r\n  const show = () => {\r\n    gsap.fromTo(\r\n      tippyRef.current,\r\n      { autoAlpha: 0, scale: 0 },\r\n      { autoAlpha: 1, scale: 1, duration: 1, ease: Power4.easeOut }\r\n    );\r\n    setVisible(true);\r\n    // emptyInput && setCurrentTippy(true); // current tippy jest częścią obsługi problemu, kiedy mamy otwartego tooltipa normalnego i wciskamy, żeby wyświetlić czerwonego\r\n  };\r\n  const hide = async () => {\r\n    await gsap.to(tippyRef.current, {\r\n      autoAlpha: 0,\r\n      scale: 0,\r\n      duration: 1,\r\n      ease: Power4.easeIn,\r\n    });\r\n    // emptyInput && setTippyMonster(false);\r\n    setVisible(false);\r\n    // emptyInput && setCurrentTippy(false);\r\n  };\r\n\r\n  const onImageClick = () => {\r\n    visible ? hide() : show();\r\n  };\r\n\r\n  useEffect(() => {\r\n    tippyder.current.classList.remove('data-placement');\r\n    // suggestionIcon.current.addEventListener('mouseenter', () => (visible ? hide() : show()));\r\n    // suggestionIcon.current.addEventListener('mouseleave', () => (!visible ? hide() : show()));\r\n    // GSAP\r\n    // gsap.fromTo(\r\n    //   contentRef.current,\r\n    //   { autoAlpha: 0 },\r\n    //   { autoAlpha: 1, duration: 2, ease: Power4.easeOut }\r\n    // );\r\n    // TIPPY\r\n    // setVisible(true);\r\n    // emptyInput && setCurrentTippy(true);\r\n  }, []);\r\n\r\n  console.log('tm - ', tippyMonster);\r\n  console.log('visible - ', visible);\r\n\r\n  return (\r\n    <Tippy\r\n      ref={tippyder}\r\n      // trigger={tippyMonster}\r\n      sticky={false}\r\n      zIndex={20}\r\n      touch={true}\r\n      visible={visible}\r\n      onClickOutside={hide}\r\n      placement='left-end'\r\n      // offset={[-200, -35]}\r\n      interactive={true}\r\n      content={\r\n        <div ref={tippyRef} className={contentClass}>\r\n          <div\r\n            style={{ whiteSpace: 'pre-line' }}\r\n            className='text-primarydark p-4 text-sm text-white'\r\n          >\r\n            {angry ? (\r\n              <img\r\n                src='/emojis/angersymbol.svg'\r\n                height={22}\r\n                width={22}\r\n                className='inline-block relative bottom-0.5'\r\n              />\r\n            ) : (\r\n              <img\r\n                src='/emojis/test.svg'\r\n                height={22}\r\n                width={22}\r\n                className='inline-block'\r\n              />\r\n            )}\r\n            {contentText}\r\n          </div>\r\n        </div>\r\n      }\r\n    >\r\n      <img\r\n        ref={suggestionIcon}\r\n        id='suggestionIcon'\r\n        className='relative cursor-pointer'\r\n        src='/guide/lamp2.svg'\r\n        height={40}\r\n        width={40}\r\n        onClick={onImageClick}\r\n      />\r\n    </Tippy>\r\n  );\r\n};\r\n\r\nexport default TippyGuide;\r\n"]},"metadata":{},"sourceType":"module"}