{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport Router from 'next/router';\nimport Image from 'next/image';\nimport debounce from '../../../../../../utils/helpers';\nimport { db } from '../../../../../../lib/firebase';\nimport gsap, { Linear } from 'gsap';\nimport DatePicker from 'react-datepicker';\nimport { addYears, format } from 'date-fns';\nimport moment from 'moment';\nimport { CirclePicker } from 'react-color';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nconst CostsElement = ({\n  provided,\n  setCostsElements,\n  mainDocument,\n  projectId,\n  documentId,\n  costsElements,\n  element,\n  index\n}) => {\n  const {\n    0: costsTitle,\n    1: setCostsTitle\n  } = useState('');\n  const {\n    0: costsType,\n    1: setCostsType\n  } = useState('');\n  const {\n    0: costsValue,\n    1: setCostsValue\n  } = useState('');\n  useEffect(() => {\n    setCostsTitle(element.title);\n    setCostsType(element.type);\n    setCostsValue(element.value);\n    setBoxColor(element.color);\n    setStartDate(element.start.seconds ? element.start.seconds * 1000 : element.start);\n    setEndDate(element.end.seconds ? element.end.seconds * 1000 : element.end);\n  }, []);\n\n  const revenueElementsValueUpdate = (value, index, helper) => {\n    helper == 'title' && setCostsTitle(value);\n    helper == 'value' && setCostsValue(value);\n    console.log(costsElements);\n    const newElementsArray = [...costsElements];\n    newElementsArray[index] = {\n      title: helper == 'title' ? value : element.title,\n      type: helper == 'type' ? value : element.type,\n      start: helper == 'start' ? value : element.start,\n      end: helper == 'end' ? value : element.end,\n      value: helper == 'value' ? value : element.value,\n      periods: helper == 'periods' ? value : element.periods,\n      color: helper == 'color' ? value : element.color,\n      index: helper == 'index' ? value : element.index\n    };\n    dataUpdate(newElementsArray);\n  };\n\n  const dataUpdate = useCallback(debounce(async newElementsArray => {\n    // console.log(costsElements);\n    // const newElementsArray = [...costsElements];\n    // setCostsTitle(newElementsArray);\n    console.log(newElementsArray); // Database update\n\n    await db.collection('projects').doc(projectId).collection('cashFlow').doc(Router.query.project).collection('inputs').doc(documentId) // .set({\n    //     budgetElements: mainDocument.budgetElements,\n    //     costsElements: mainDocument.costsElements,\n    //     pathName: mainDocument.pathName,\n    //     projectId: mainDocument.projectId,\n    //     uid: mainDocument.uid,\n    //     costsElements: newElementsArray\n    // })\n    .update({\n      costsElements: newElementsArray\n    });\n  }, 300), []);\n  useEffect(() => {\n    console.log(costsElements);\n  }, [costsElements]);\n  const {\n    0: show,\n    1: setShow\n  } = useState(false);\n  const valueRef = useRef();\n\n  const onTypeShow = () => {\n    if (!show) {\n      setShow(true);\n      gsap.to(valueRef.current, {\n        height: '40px',\n        duration: 0.3,\n        ease: Linear\n      });\n    } else if (show) {\n      setShow(false);\n      gsap.to(valueRef.current, {\n        height: '20px',\n        duration: 0.3,\n        ease: Linear\n      });\n    }\n  };\n\n  const onValueOptionSelect = async type => {\n    setCostsType(type);\n    const newElementsArray = [...costsElements];\n    newElementsArray[index] = {\n      title: element.title,\n      type: type,\n      start: element.start,\n      end: element.end,\n      value: element.value,\n      periods: element.periods,\n      color: element.color,\n      index: element.index\n    }; // Database update\n\n    await db.collection('projects').doc(projectId).collection('cashFlow').doc(Router.query.project).collection('inputs').doc(documentId).update({\n      costsElements: newElementsArray\n    });\n  };\n\n  const {\n    0: startDate,\n    1: setStartDate\n  } = useState();\n  const {\n    0: endDate,\n    1: setEndDate\n  } = useState();\n\n  const onStartDateUpdate = async date => {\n    setStartDate(date); // Get months\n\n    const newStartDate = format(date, 'yyyy-MM-dd');\n    const newEndDate = format(endDate, 'yyyy-MM-dd');\n    const startDater = moment(newStartDate);\n    const endDater = moment(newEndDate);\n    const dates = [];\n    startDater.subtract(1, 'month'); //Substract one month to exclude endDater itself\n\n    const month = moment(startDater); //clone the startDate\n\n    while (month < endDater) {\n      month.add(1, 'month');\n      dates.push(month.format('MMM yyyy'));\n    } // New elements array\n\n\n    const newElementsArray = [...costsElements];\n    newElementsArray[index] = {\n      title: element.title,\n      type: element.type,\n      start: date,\n      periods: dates,\n      end: element.end,\n      value: element.value,\n      color: element.color,\n      index: element.index // period: element.period,\n\n    }; // Firebase update\n\n    await db.collection('projects').doc(projectId).collection('cashFlow').doc(Router.query.project).collection('inputs').doc(documentId).update({\n      costsElements: newElementsArray\n    });\n  };\n\n  const onEndDateUpdate = async date => {\n    setEndDate(date); // Get months\n\n    const newStartDate = format(startDate, 'yyyy-MM-dd');\n    const newEndDate = format(date, 'yyyy-MM-dd');\n    const startDater = moment(newStartDate);\n    const endDater = moment(newEndDate);\n    const dates = [];\n    startDater.subtract(1, 'month'); //Substract one month to exclude endDater itself\n    // endDater.subtract(1, \"month\"); //Substract one month to exclude endDater itself\n\n    const month = moment(startDater); //clone the startDate\n\n    while (month < endDater) {\n      month.add(1, 'month');\n      dates.push(month.format('MMM yyyy'));\n    } // New elements array\n\n\n    const newElementsArray = [...costsElements];\n    newElementsArray[index] = {\n      title: element.title,\n      type: element.type,\n      start: element.start,\n      periods: dates,\n      end: date,\n      value: element.value,\n      color: element.color,\n      index: element.index // period: element.period,\n\n    }; // Firebase update\n\n    await db.collection('projects').doc(projectId).collection('cashFlow').doc(Router.query.project).collection('inputs').doc(documentId).update({\n      costsElements: newElementsArray\n    });\n  }; // const circleContainer = document.querySelector('.circle-picker');\n  // circleContainer && element.index && circleContainer.setAttribute('id', `colorPicker${element.index}`);\n\n\n  const circleContainerId = document.getElementById(`${element.index}colorPickerContainer`);\n  const {\n    0: circlePickerHelper,\n    1: setCirclePickerHelper\n  } = useState(false);\n  const circlePickerRef = useRef();\n\n  const onCirclePickerClick = () => {\n    if (!circlePickerHelper) {\n      setCirclePickerHelper(true);\n      gsap.to(circleContainerId, {\n        transform: 'scale(1)',\n        transformOrigin: 'bottom right',\n        duration: 1,\n        ease: Linear\n      });\n    } else if (circlePickerHelper) {\n      setCirclePickerHelper(false);\n      gsap.to(circleContainerId, {\n        transform: 'scale(0)',\n        transformOrigin: 'bottom right',\n        duration: 1,\n        ease: Linear\n      });\n    }\n  };\n\n  const {\n    0: boxColor,\n    1: setBoxColor\n  } = useState('');\n\n  const onColorPick = async color => {\n    setBoxColor(color);\n    console.log(color); // New elements array\n\n    const newElementsArray = [...costsElements];\n    newElementsArray[index] = {\n      title: element.title,\n      type: element.type,\n      start: element.start,\n      periods: element.periods,\n      end: element.end,\n      value: element.value,\n      index: element.index,\n      color: color // period: element.period,\n\n    }; // Firebase update\n\n    await db.collection('projects').doc(projectId).collection('cashFlow').doc(Router.query.project).collection('inputs').doc(documentId).update({\n      costsElements: newElementsArray\n    });\n  };\n\n  const onElementDelete = async index => {\n    const newElements = costsElements.filter(element => index !== element.index); // Firebase update\n\n    await db.collection('projects').doc(projectId).collection('cashFlow').doc(Router.query.project).collection('inputs').doc(documentId).update({\n      costsElements: newElements\n    });\n  };\n\n  return /*#__PURE__*/_jsx(\"div\", {\n    children: /*#__PURE__*/_jsxs(\"div\", _objectSpread(_objectSpread({\n      ref: provided.innerRef\n    }, provided.draggableProps), {}, {\n      className: \"w-full grid grid-cols-6fr py-3 items-start text-sm\",\n      children: [/*#__PURE__*/_jsx(\"input\", {\n        placeholder: \"name\",\n        className: \"w-4/5 bg-background focus:outline-none\",\n        value: costsTitle,\n        onChange: e => revenueElementsValueUpdate(e.target.value, index, 'title')\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        ref: valueRef,\n        style: {\n          height: '20px'\n        },\n        className: \"overflow-hidden flex flex-col flex-wrap\",\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: \"w-full flex flex-row flex-nowrap\",\n          children: [/*#__PURE__*/_jsx(\"p\", {\n            className: \"cursor-default\",\n            children: costsType\n          }), /*#__PURE__*/_jsx(\"img\", {\n            onClick: onTypeShow,\n            className: \"ml-2 cursor-pointer\",\n            src: \"/cash-flow/down-arrow.svg\",\n            height: 14,\n            width: 14\n          })]\n        }), /*#__PURE__*/_jsx(\"div\", {\n          children: element.type === 'Recurring' ? /*#__PURE__*/_jsx(\"p\", {\n            className: \"cursor-pointer\",\n            onClick: () => onValueOptionSelect('One time'),\n            children: \"One time\"\n          }) : /*#__PURE__*/_jsx(\"p\", {\n            className: \"cursor-pointer\",\n            onClick: () => onValueOptionSelect('Recurring'),\n            children: \"Recurring\"\n          })\n        })]\n      }), /*#__PURE__*/_jsx(\"div\", {\n        children: /*#__PURE__*/_jsx(\"input\", {\n          placeholder: \"amount\",\n          className: \"w-4/5 bg-background focus:outline-none\",\n          value: costsValue,\n          onChange: e => revenueElementsValueUpdate(e.target.value, index, 'value')\n        })\n      }), /*#__PURE__*/_jsx(\"div\", {\n        children: /*#__PURE__*/_jsx(DatePicker, {\n          selected: startDate,\n          onChange: date => onStartDateUpdate(date),\n          dateFormat: \"MMMM yyyy\",\n          showMonthYearPicker: true,\n          maxDate: addYears(new Date(), 3),\n          minDate: new Date()\n        })\n      }), /*#__PURE__*/_jsx(\"div\", {\n        children: element.type == 'Recurring' ? /*#__PURE__*/_jsx(DatePicker, {\n          selected: endDate,\n          onChange: date => onEndDateUpdate(date),\n          dateFormat: \"MMMM yyyy\",\n          showMonthYearPicker: true,\n          maxDate: addYears(new Date(), 3),\n          minDate: new Date()\n        }) : /*#__PURE__*/_jsx(\"hr\", {\n          className: \"text-primarydark mr-8 mt-2\"\n        })\n      }), /*#__PURE__*/_jsx(\"div\", {\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: \"relative justify-items-center items-center flex flex-nowrap\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            onClick: onCirclePickerClick,\n            style: {\n              backgroundColor: `${boxColor}`,\n              height: '16px',\n              width: '16px'\n            },\n            className: \"rounded-3xl\",\n            children: /*#__PURE__*/_jsxs(\"div\", {\n              style: {\n                transform: 'scale(0)'\n              },\n              id: `${element.index}colorPickerContainer`,\n              className: \"colorPickerContainer grid grid-cols-6fr grid-rows-3fr bg-white w-min shadow rounded-2xl p-2\",\n              children: [/*#__PURE__*/_jsx(\"span\", {\n                onClick: () => onColorPick('#f44336'),\n                className: \"rounded-3xl transform hover:scale-125 transition duration-100 ease-linear cursor-pointer\",\n                style: {\n                  height: '14px',\n                  width: '14px',\n                  backgroundColor: '#f44336',\n                  margin: '6px'\n                }\n              }), /*#__PURE__*/_jsx(\"span\", {\n                onClick: () => onColorPick('#e91e63'),\n                className: \"rounded-3xl transform hover:scale-125 transition duration-100 ease-linear cursor-pointer\",\n                style: {\n                  height: '14px',\n                  width: '14px',\n                  backgroundColor: '#e91e63',\n                  margin: '6px'\n                }\n              }), /*#__PURE__*/_jsx(\"span\", {\n                onClick: () => onColorPick('#9c27b0'),\n                className: \"rounded-3xl transform hover:scale-125 transition duration-100 ease-linear cursor-pointer\",\n                style: {\n                  height: '14px',\n                  width: '14px',\n                  backgroundColor: '#9c27b0',\n                  margin: '6px'\n                }\n              }), /*#__PURE__*/_jsx(\"span\", {\n                onClick: () => onColorPick('#673ab7'),\n                className: \"rounded-3xl transform hover:scale-125 transition duration-100 ease-linear cursor-pointer\",\n                style: {\n                  height: '14px',\n                  width: '14px',\n                  backgroundColor: '#673ab7',\n                  margin: '6px'\n                }\n              }), /*#__PURE__*/_jsx(\"span\", {\n                onClick: () => onColorPick('#3f51b5'),\n                className: \"rounded-3xl transform hover:scale-125 transition duration-100 ease-linear cursor-pointer\",\n                style: {\n                  height: '14px',\n                  width: '14px',\n                  backgroundColor: '#3f51b5',\n                  margin: '6px'\n                }\n              }), /*#__PURE__*/_jsx(\"span\", {\n                onClick: () => onColorPick('#2196f3'),\n                className: \"rounded-3xl transform hover:scale-125 transition duration-100 ease-linear cursor-pointer\",\n                style: {\n                  height: '14px',\n                  width: '14px',\n                  backgroundColor: '#2196f3',\n                  margin: '6px'\n                }\n              }), /*#__PURE__*/_jsx(\"span\", {\n                onClick: () => onColorPick('#03a9f4'),\n                className: \"rounded-3xl transform hover:scale-125 transition duration-100 ease-linear cursor-pointer\",\n                style: {\n                  height: '14px',\n                  width: '14px',\n                  backgroundColor: '#03a9f4',\n                  margin: '6px'\n                }\n              }), /*#__PURE__*/_jsx(\"span\", {\n                onClick: () => onColorPick('#00bcd4'),\n                className: \"rounded-3xl transform hover:scale-125 transition duration-100 ease-linear cursor-pointer\",\n                style: {\n                  height: '14px',\n                  width: '14px',\n                  backgroundColor: '#00bcd4',\n                  margin: '6px'\n                }\n              }), /*#__PURE__*/_jsx(\"span\", {\n                onClick: () => onColorPick('#009688'),\n                className: \"rounded-3xl transform hover:scale-125 transition duration-100 ease-linear cursor-pointer\",\n                style: {\n                  height: '14px',\n                  width: '14px',\n                  backgroundColor: '#009688',\n                  margin: '6px'\n                }\n              }), /*#__PURE__*/_jsx(\"span\", {\n                onClick: () => onColorPick('#4caf50'),\n                className: \"rounded-3xl transform hover:scale-125 transition duration-100 ease-linear cursor-pointer\",\n                style: {\n                  height: '14px',\n                  width: '14px',\n                  backgroundColor: '#4caf50',\n                  margin: '6px'\n                }\n              }), /*#__PURE__*/_jsx(\"span\", {\n                onClick: () => onColorPick('#8bc34a'),\n                className: \"rounded-3xl transform hover:scale-125 transition duration-100 ease-linear cursor-pointer\",\n                style: {\n                  height: '14px',\n                  width: '14px',\n                  backgroundColor: '#8bc34a',\n                  margin: '6px'\n                }\n              }), /*#__PURE__*/_jsx(\"span\", {\n                onClick: () => onColorPick('#cddc39'),\n                className: \"rounded-3xl transform hover:scale-125 transition duration-100 ease-linear cursor-pointer\",\n                style: {\n                  height: '14px',\n                  width: '14px',\n                  backgroundColor: '#cddc39',\n                  margin: '6px'\n                }\n              }), /*#__PURE__*/_jsx(\"span\", {\n                onClick: () => onColorPick('#ffeb3b'),\n                className: \"rounded-3xl transform hover:scale-125 transition duration-100 ease-linear cursor-pointer\",\n                style: {\n                  height: '14px',\n                  width: '14px',\n                  backgroundColor: '#ffeb3b',\n                  margin: '6px'\n                }\n              }), /*#__PURE__*/_jsx(\"span\", {\n                onClick: () => onColorPick('#ffc107'),\n                className: \"rounded-3xl transform hover:scale-125 transition duration-100 ease-linear cursor-pointer\",\n                style: {\n                  height: '14px',\n                  width: '14px',\n                  backgroundColor: '#ffc107',\n                  margin: '6px'\n                }\n              }), /*#__PURE__*/_jsx(\"span\", {\n                onClick: () => onColorPick('#ff9800'),\n                className: \"rounded-3xl transform hover:scale-125 transition duration-100 ease-linear cursor-pointer\",\n                style: {\n                  height: '14px',\n                  width: '14px',\n                  backgroundColor: '#ff9800',\n                  margin: '6px'\n                }\n              }), /*#__PURE__*/_jsx(\"span\", {\n                onClick: () => onColorPick('#ff5722'),\n                className: \"rounded-3xl transform hover:scale-125 transition duration-100 ease-linear cursor-pointer\",\n                style: {\n                  height: '14px',\n                  width: '14px',\n                  backgroundColor: '#ff5722',\n                  margin: '6px'\n                }\n              }), /*#__PURE__*/_jsx(\"span\", {\n                onClick: () => onColorPick('#795548'),\n                className: \"rounded-3xl transform hover:scale-125 transition duration-100 ease-linear cursor-pointer\",\n                style: {\n                  height: '14px',\n                  width: '14px',\n                  backgroundColor: '#795548',\n                  margin: '6px'\n                }\n              }), /*#__PURE__*/_jsx(\"span\", {\n                onClick: () => onColorPick('#607d8b'),\n                className: \"rounded-3xl transform hover:scale-125 transition duration-100 ease-linear cursor-pointer\",\n                style: {\n                  height: '14px',\n                  width: '14px',\n                  backgroundColor: '#607d8b',\n                  margin: '6px'\n                }\n              })]\n            })\n          }), /*#__PURE__*/_jsx(\"img\", _objectSpread(_objectSpread({}, provided.dragHandleProps), {}, {\n            className: \"ml-4\",\n            src: \"/cash-flow/drag.svg\",\n            height: 18,\n            width: 18\n          })), /*#__PURE__*/_jsx(\"img\", {\n            onClick: () => onElementDelete(element.index),\n            className: \"ml-4 cursor-pointer\",\n            src: \"/cash-flow/remove.svg\",\n            height: 18,\n            width: 18\n          })]\n        })\n      })]\n    }))\n  });\n};\n\nexport default CostsElement;","map":null,"metadata":{},"sourceType":"module"}