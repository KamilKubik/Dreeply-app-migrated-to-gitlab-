{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\off-saas\\\\components\\\\dashboard\\\\startup\\\\project\\\\business-app\\\\Table.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport Image from 'next/image';\nimport gsap, { Linear } from 'gsap';\nimport debounce from '../../../../../utils/helpers';\nimport Router from 'next/router';\n\nconst TableElement = ({\n  currentIndex,\n  tableUpdate,\n  provided,\n  field,\n  deleteField\n}) => {\n  console.log(field);\n  const {\n    0: newField,\n    1: setNewField\n  } = useState();\n  useEffect(() => {\n    document.getElementById(`${field.index}container`) && document.getElementById(`${field.index}container`).addEventListener('mouseenter', () => {\n      gsap.to(document.getElementById(`${field.index}table`), {\n        height: 80,\n        marginTop: 10,\n        duration: 0.8,\n        transformOrigin: 'top',\n        ease: Linear\n      });\n    });\n    document.getElementById(`${field.index}container`) && document.getElementById(`${field.index}container`).addEventListener('mouseleave', () => {\n      gsap.to(document.getElementById(`${field.index}table`), {\n        height: 0,\n        marginTop: 0,\n        duration: 0.8,\n        transformOrigin: 'top',\n        ease: Linear\n      });\n    });\n  }, []);\n  useEffect(() => {\n    setNewField(field);\n  }, []);\n\n  const onRowDataChange = (data, rowIndex, rowDataIndex) => {\n    const newArray = [...newField.rows];\n    newArray[rowIndex].row[rowDataIndex] = data;\n    const updatedField = {\n      headRows: field.headRows,\n      rows: newArray,\n      index: field.index,\n      tableId: field.tableId,\n      type: 'table'\n    };\n    setNewField(updatedField); // Firebase update\n\n    databaseUpdate(updatedField);\n  };\n\n  const databaseUpdate = useCallback(debounce(async data => {\n    tableUpdate(data, currentIndex, field.tableId, field.index);\n  }, 500), []);\n\n  const onHeadRowDataChange = (data, headRowIndex) => {\n    console.log(data);\n    const newArray = [...newField.headRows];\n    newArray[headRowIndex] = data;\n    const updatedField = {\n      headRows: newArray,\n      rows: field.rows,\n      index: field.index,\n      tableId: field.tableId,\n      type: 'table'\n    };\n    setNewField(updatedField); // Firebase update\n\n    databaseUpdate(updatedField);\n  };\n\n  const onNewRowAdd = () => {\n    const newArray = [...newField.rows];\n    console.log(newArray);\n    const rowArray = [];\n    newField.headRows.map(headRow => rowArray.push(''));\n    newArray.push({\n      row: rowArray\n    });\n    const updatedField = {\n      headRows: field.headRows,\n      rows: newArray,\n      index: field.index,\n      tableId: field.tableId,\n      type: 'table'\n    };\n    setNewField(updatedField); // If empty, won't be updated to firebase\n\n    databaseUpdate(updatedField);\n  };\n\n  const onNewRowAboveAdd = () => {\n    const newArray = [...newField.rows];\n    const rowArray = [];\n    newField.headRows.map(headRow => rowArray.push(''));\n    newArray.unshift({\n      row: rowArray\n    });\n    const updatedField = {\n      headRows: field.headRows,\n      rows: newArray,\n      index: field.index,\n      tableId: field.tableId,\n      type: 'table'\n    };\n    setNewField(updatedField); // If empty, won't be updated to firebase\n\n    databaseUpdate(updatedField);\n  };\n\n  const onNewColumnAdd = () => {\n    const newArrayRows = [...newField.rows];\n    newArrayRows.map(row => {\n      console.log(row);\n      row.row.push('');\n    });\n    const newArrayHeadRows = [...newField.headRows];\n    newArrayHeadRows.push('');\n    const updatedField = {\n      headRows: newArrayHeadRows,\n      rows: newArrayRows,\n      index: field.index,\n      tableId: field.tableId,\n      type: 'table'\n    };\n    setNewField(updatedField); // Firebase update\n\n    databaseUpdate(updatedField);\n  };\n\n  const onNewColumnLeftAdd = () => {\n    const newArrayRows = [...newField.rows];\n    newArrayRows.map(row => {\n      row.row.unshift('');\n    });\n    const newArrayHeadRows = [...newField.headRows];\n    newArrayHeadRows.unshift('');\n    const updatedField = {\n      headRows: newArrayHeadRows,\n      rows: newArrayRows,\n      index: field.index,\n      tableId: field.tableId,\n      type: 'table'\n    };\n    setNewField(updatedField); // Firebase update\n\n    databaseUpdate(updatedField);\n  };\n\n  const onRowDelete = () => {\n    const newArray = [...newField.rows];\n    newArray.pop();\n    const updatedField = {\n      headRows: field.headRows,\n      rows: newArray,\n      index: field.index,\n      tableId: field.tableId,\n      type: 'table'\n    };\n    setNewField(updatedField); // If empty, won't be updated to firebase\n\n    databaseUpdate(updatedField);\n  };\n\n  const onRowAboveDelete = () => {\n    const newArray = [...newField.rows];\n    newArray.shift();\n    const updatedField = {\n      headRows: field.headRows,\n      rows: newArray,\n      index: field.index,\n      tableId: field.tableId,\n      type: 'table'\n    };\n    setNewField(updatedField); // If empty, won't be updated to firebase\n\n    databaseUpdate(updatedField);\n  };\n\n  const onColumnDelete = () => {\n    const newArrayRows = [...newField.rows];\n    newArrayRows.map(row => {\n      row.row.pop();\n    });\n    const newArrayHeadRows = [...newField.headRows];\n    newArrayHeadRows.pop();\n    const updatedField = {\n      headRows: newArrayHeadRows,\n      rows: newArrayRows,\n      index: field.index,\n      tableId: field.tableId,\n      type: 'table'\n    };\n    setNewField(updatedField); // Firebase update\n\n    databaseUpdate(updatedField);\n  };\n\n  const onColumnLeftDelete = () => {\n    const newArrayRows = [...newField.rows];\n    newArrayRows.map(row => {\n      row.row.shift();\n    });\n    const newArrayHeadRows = [...newField.headRows];\n    newArrayHeadRows.shift();\n    const updatedField = {\n      headRows: newArrayHeadRows,\n      rows: newArrayRows,\n      index: field.index,\n      tableId: field.tableId,\n      type: 'table'\n    };\n    setNewField(updatedField); // Firebase update\n\n    databaseUpdate(updatedField);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({\n    ref: provided.innerRef\n  }, provided.draggableProps), {}, {\n    className: \"w-full grid grid-cols-12fr justify-items-center items-center mt-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: `${field.index}container`,\n      className: \"col-start-2 col-end-12 relative flex flex-col h-full w-full flex px-8 py-8 rounded-2xl bg-white dark:bg-background\",\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table-element\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: newField && newField.headRows.map((row, headRowIndex) => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"w-full bg-primary text-background focus:outline-none\",\n                value: row,\n                onChange: e => onHeadRowDataChange(e.target.value, headRowIndex)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: newField && newField.rows.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: row.row.map((rowData, rowDataIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"w-full bg-white focus:outline-none\",\n                value: rowData,\n                onChange: e => onRowDataChange(e.target.value, rowIndex, rowDataIndex)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: `${field.index}table`,\n        className: \"w-full overflow-hidden h-0 flex justify-between items-center gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-flow-row grid-rows-2fr h-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              onClick: onNewRowAdd,\n              className: \"cursor-pointer\",\n              src: `/table/row-add.svg`,\n              height: 22,\n              width: 22\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              onClick: onRowDelete,\n              className: \"cursor-pointer ml-2\",\n              src: `/table/remove1.svg`,\n              height: 26,\n              width: 26\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              onClick: onNewRowAboveAdd,\n              className: \"cursor-pointer\",\n              src: `/table/row-add-above.svg`,\n              height: 22,\n              width: 22\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              onClick: onRowAboveDelete,\n              className: \"cursor-pointer ml-2\",\n              src: `/table/remove1.svg`,\n              height: 26,\n              width: 26\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-flow-row grid-rows-2fr h-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              onClick: onNewColumnAdd,\n              className: \"cursor-pointer mr-2\",\n              src: `/table/column-add.svg`,\n              height: 22,\n              width: 22\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              onClick: onColumnDelete,\n              className: \"cursor-pointer\",\n              src: `/table/remove1.svg`,\n              height: 26,\n              width: 26\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              onClick: onNewColumnLeftAdd,\n              className: \"cursor-pointer mr-2\",\n              src: `/table/column-add-left.svg`,\n              height: 22,\n              width: 22\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              onClick: onColumnLeftDelete,\n              className: \"cursor-pointer\",\n              src: `/table/remove1.svg`,\n              height: 26,\n              width: 26\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-start-12 col-end-13 justify-self-center self-start flex flex-col flex-wrap gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        onClick: () => deleteField(field.index),\n        className: \"cursor-pointer\",\n        src: `/plan-bar/exit4.svg`,\n        height: 36,\n        width: 36\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Image, _objectSpread(_objectSpread({}, provided.dragHandleProps), {}, {\n        className: \"cursor-pointer mt-2\",\n        src: `/plan-bar/drag2.svg`,\n        height: 36,\n        width: 36\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 13\n    }, this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 229,\n    columnNumber: 9\n  }, this);\n};\n\nexport default TableElement;","map":{"version":3,"sources":["C:/off-saas/components/dashboard/startup/project/business-app/Table.js"],"names":["React","useCallback","useEffect","useState","Image","gsap","Linear","debounce","Router","TableElement","currentIndex","tableUpdate","provided","field","deleteField","console","log","newField","setNewField","document","getElementById","index","addEventListener","to","height","marginTop","duration","transformOrigin","ease","onRowDataChange","data","rowIndex","rowDataIndex","newArray","rows","row","updatedField","headRows","tableId","type","databaseUpdate","onHeadRowDataChange","headRowIndex","onNewRowAdd","rowArray","map","headRow","push","onNewRowAboveAdd","unshift","onNewColumnAdd","newArrayRows","newArrayHeadRows","onNewColumnLeftAdd","onRowDelete","pop","onRowAboveDelete","shift","onColumnDelete","onColumnLeftDelete","innerRef","draggableProps","e","target","value","rowData","dragHandleProps"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\r\nimport Image from 'next/image';\r\nimport gsap, { Linear } from 'gsap';\r\nimport debounce from '../../../../../utils/helpers';\r\nimport Router from 'next/router';\r\n\r\nconst TableElement = ({ currentIndex, tableUpdate, provided, field, deleteField }) => {\r\n\r\n    console.log(field);\r\n    const [newField, setNewField] = useState();\r\n\r\n    useEffect(() => {\r\n        document.getElementById(`${field.index}container`) &&\r\n          document.getElementById(`${field.index}container`).addEventListener('mouseenter', () => {\r\n            gsap.to(document.getElementById(`${field.index}table`), {\r\n              height: 80,\r\n              marginTop: 10,\r\n              duration: 0.8,\r\n              transformOrigin: 'top',\r\n              ease: Linear,\r\n            });\r\n          });\r\n          document.getElementById(`${field.index}container`) &&\r\n          document.getElementById(`${field.index}container`).addEventListener('mouseleave', () => {\r\n            gsap.to(document.getElementById(`${field.index}table`), {\r\n              height: 0,\r\n              marginTop: 0,\r\n              duration: 0.8,\r\n              transformOrigin: 'top',\r\n              ease: Linear,\r\n            });\r\n          });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setNewField(field);\r\n    }, [])\r\n\r\n    const onRowDataChange = (data, rowIndex, rowDataIndex) => {\r\n        const newArray = [...newField.rows];\r\n        newArray[rowIndex].row[rowDataIndex] = data;\r\n        const updatedField = {\r\n            headRows: field.headRows,\r\n            rows: newArray,\r\n            index: field.index,\r\n            tableId: field.tableId,\r\n            type: 'table'\r\n        };\r\n        setNewField(updatedField);\r\n        // Firebase update\r\n        databaseUpdate(updatedField);\r\n    }\r\n\r\n    const databaseUpdate = useCallback(\r\n        debounce(async (data) => {\r\n          tableUpdate(data, currentIndex, field.tableId, field.index);\r\n        }, 500),\r\n        []\r\n      );\r\n\r\n    const onHeadRowDataChange = (data, headRowIndex) => {\r\n        console.log(data);\r\n        const newArray = [...newField.headRows];\r\n        newArray[headRowIndex] = data;\r\n        const updatedField = {\r\n            headRows: newArray,\r\n            rows: field.rows,\r\n            index: field.index,\r\n            tableId: field.tableId,\r\n            type: 'table'\r\n        };\r\n        setNewField(updatedField);\r\n        // Firebase update\r\n        databaseUpdate(updatedField);\r\n    }\r\n\r\n    const onNewRowAdd = () => {\r\n        const newArray = [...newField.rows];\r\n        console.log(newArray);\r\n        const rowArray = [];\r\n        newField.headRows.map((headRow) => rowArray.push(''));\r\n        newArray.push(\r\n            {\r\n                row: rowArray\r\n            }\r\n        );\r\n        const updatedField = {\r\n            headRows: field.headRows,\r\n            rows: newArray,\r\n            index: field.index,\r\n            tableId: field.tableId,\r\n            type: 'table'\r\n        };\r\n        setNewField(updatedField);\r\n        // If empty, won't be updated to firebase\r\n        databaseUpdate(updatedField);\r\n    }\r\n\r\n    const onNewRowAboveAdd = () => {\r\n        const newArray = [...newField.rows];\r\n        const rowArray = [];\r\n        newField.headRows.map((headRow) => rowArray.push(''));\r\n        newArray.unshift(\r\n            {\r\n                row: rowArray\r\n            }\r\n        );\r\n        const updatedField = {\r\n            headRows: field.headRows,\r\n            rows: newArray,\r\n            index: field.index,\r\n            tableId: field.tableId,\r\n            type: 'table'\r\n        };\r\n        setNewField(updatedField);\r\n        // If empty, won't be updated to firebase\r\n        databaseUpdate(updatedField);\r\n    }\r\n\r\n    const onNewColumnAdd = () => {\r\n        const newArrayRows = [...newField.rows];\r\n        newArrayRows.map((row) => {\r\n            console.log(row);\r\n            row.row.push('');\r\n        })\r\n        const newArrayHeadRows = [...newField.headRows];\r\n        newArrayHeadRows.push('');\r\n        const updatedField = {\r\n            headRows: newArrayHeadRows,\r\n            rows: newArrayRows,\r\n            index: field.index,\r\n            tableId: field.tableId,\r\n            type: 'table'\r\n        };\r\n        setNewField(updatedField);\r\n        // Firebase update\r\n        databaseUpdate(updatedField);\r\n    }\r\n\r\n    const onNewColumnLeftAdd = () => {\r\n        const newArrayRows = [...newField.rows];\r\n        newArrayRows.map((row) => {\r\n            row.row.unshift('');\r\n        })\r\n        const newArrayHeadRows = [...newField.headRows];\r\n        newArrayHeadRows.unshift('');\r\n        const updatedField = {\r\n            headRows: newArrayHeadRows,\r\n            rows: newArrayRows,\r\n            index: field.index,\r\n            tableId: field.tableId,\r\n            type: 'table'\r\n        };\r\n        setNewField(updatedField);\r\n        // Firebase update\r\n        databaseUpdate(updatedField);\r\n    }\r\n\r\n    const onRowDelete = () => {\r\n        const newArray = [...newField.rows];\r\n        newArray.pop();\r\n        const updatedField = {\r\n            headRows: field.headRows,\r\n            rows: newArray,\r\n            index: field.index,\r\n            tableId: field.tableId,\r\n            type: 'table'\r\n        };\r\n        setNewField(updatedField);\r\n        // If empty, won't be updated to firebase\r\n        databaseUpdate(updatedField);\r\n    }\r\n\r\n    const onRowAboveDelete = () => {\r\n        const newArray = [...newField.rows];\r\n        newArray.shift();\r\n        const updatedField = {\r\n            headRows: field.headRows,\r\n            rows: newArray,\r\n            index: field.index,\r\n            tableId: field.tableId,\r\n            type: 'table'\r\n        };\r\n        setNewField(updatedField);\r\n        // If empty, won't be updated to firebase\r\n        databaseUpdate(updatedField);\r\n    }\r\n\r\n    const onColumnDelete = () => {\r\n        const newArrayRows = [...newField.rows];\r\n        newArrayRows.map((row) => {\r\n            row.row.pop();\r\n        })\r\n        const newArrayHeadRows = [...newField.headRows];\r\n        newArrayHeadRows.pop();\r\n        const updatedField = {\r\n            headRows: newArrayHeadRows,\r\n            rows: newArrayRows,\r\n            index: field.index,\r\n            tableId: field.tableId,\r\n            type: 'table'\r\n        };\r\n        setNewField(updatedField);\r\n        // Firebase update\r\n        databaseUpdate(updatedField);\r\n    }\r\n\r\n    const onColumnLeftDelete = () => {\r\n        const newArrayRows = [...newField.rows];\r\n        newArrayRows.map((row) => {\r\n            row.row.shift();\r\n        })\r\n        const newArrayHeadRows = [...newField.headRows];\r\n        newArrayHeadRows.shift();\r\n        const updatedField = {\r\n            headRows: newArrayHeadRows,\r\n            rows: newArrayRows,\r\n            index: field.index,\r\n            tableId: field.tableId,\r\n            type: 'table'\r\n        };\r\n        setNewField(updatedField);\r\n        // Firebase update\r\n        databaseUpdate(updatedField);\r\n    }\r\n\r\n\r\n    return (\r\n        <div ref={provided.innerRef} {...provided.draggableProps} className='w-full grid grid-cols-12fr justify-items-center items-center mt-6'>\r\n            <div id={`${field.index}container`} className='col-start-2 col-end-12 relative flex flex-col h-full w-full flex px-8 py-8 rounded-2xl bg-white dark:bg-background'>\r\n                    <table className='table-element'>\r\n                        <thead>\r\n                            <tr>\r\n                                {newField && newField.headRows.map((row, headRowIndex) => (\r\n                                    <th><input className='w-full bg-primary text-background focus:outline-none' value={row} onChange={(e) => onHeadRowDataChange(e.target.value, headRowIndex)} /></th>\r\n                                ))}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {newField && newField.rows.map((row, rowIndex) => (\r\n                                <tr>{row.row.map((rowData, rowDataIndex) => (\r\n                                    <td><input className='w-full bg-white focus:outline-none' value={rowData} onChange={(e) => onRowDataChange(e.target.value, rowIndex, rowDataIndex)} /></td>\r\n                                ))}</tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                    {/* <div id={`${field.index}table`} className='w-full overflow-auto h-0'></div> */}\r\n                <div id={`${field.index}table`} className='w-full overflow-hidden h-0 flex justify-between items-center gap-4'>\r\n                    <div className='grid grid-flow-row grid-rows-2fr h-full'>\r\n                        <div className='flex'>\r\n                            <img\r\n                                onClick={onNewRowAdd}\r\n                                className='cursor-pointer'\r\n                                src={`/table/row-add.svg`}\r\n                                height={22}\r\n                                width={22}\r\n                            />\r\n                            <img\r\n                                onClick={onRowDelete}\r\n                                className='cursor-pointer ml-2'\r\n                                src={`/table/remove1.svg`}\r\n                                height={26}\r\n                                width={26}\r\n                            />\r\n                        </div>\r\n                        <div className='flex'>\r\n                            <img\r\n                                onClick={onNewRowAboveAdd}\r\n                                className='cursor-pointer'\r\n                                src={`/table/row-add-above.svg`}\r\n                                height={22}\r\n                                width={22}\r\n                            />\r\n                            <img\r\n                                onClick={onRowAboveDelete}\r\n                                className='cursor-pointer ml-2'\r\n                                src={`/table/remove1.svg`}\r\n                                height={26}\r\n                                width={26}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className='grid grid-flow-row grid-rows-2fr h-full'>\r\n                        <div className='flex'>\r\n                            <img\r\n                                onClick={onNewColumnAdd}\r\n                                className='cursor-pointer mr-2'\r\n                                src={`/table/column-add.svg`}\r\n                                height={22}\r\n                                width={22}\r\n                            />\r\n                            <img\r\n                                onClick={onColumnDelete}\r\n                                className='cursor-pointer'\r\n                                src={`/table/remove1.svg`}\r\n                                height={26}\r\n                                width={26}\r\n                            />\r\n                        </div>\r\n                        <div className='flex'>\r\n                            <img\r\n                                onClick={onNewColumnLeftAdd}\r\n                                className='cursor-pointer mr-2'\r\n                                src={`/table/column-add-left.svg`}\r\n                                height={22}\r\n                                width={22}\r\n                            />\r\n                            <img\r\n                                onClick={onColumnLeftDelete}\r\n                                className='cursor-pointer'\r\n                                src={`/table/remove1.svg`}\r\n                                height={26}\r\n                                width={26}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='col-start-12 col-end-13 justify-self-center self-start flex flex-col flex-wrap gap-2'>\r\n                <Image\r\n                    onClick={() => deleteField(field.index)}\r\n                    className='cursor-pointer'\r\n                    src={`/plan-bar/exit4.svg`}\r\n                    height={36}\r\n                    width={36}\r\n                />\r\n                <Image\r\n                    {...provided.dragHandleProps}\r\n                    className='cursor-pointer mt-2'\r\n                    src={`/plan-bar/drag2.svg`}\r\n                    height={36}\r\n                    width={36}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TableElement;"]},"metadata":{},"sourceType":"module"}