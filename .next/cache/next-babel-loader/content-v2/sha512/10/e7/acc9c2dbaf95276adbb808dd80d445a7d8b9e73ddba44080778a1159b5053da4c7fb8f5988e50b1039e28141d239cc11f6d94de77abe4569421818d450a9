{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useState, useEffect } from 'react'; // Usage\n\nfunction App() {\n  var size = useWindowSize();\n  return /*#__PURE__*/_jsxs(\"div\", {\n    children: [size.width, \"px / \", size.height, \"px\"]\n  });\n} // Hook\n\n\nexport function useWindowSize() {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  var _useState = useState({\n    width: undefined,\n    height: undefined\n  }),\n      windowSize = _useState[0],\n      setWindowSize = _useState[1];\n\n  useEffect(function () {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    } // Add event listener\n\n\n    window.addEventListener('resize', handleResize); // Call handler right away so state gets updated with initial window size\n\n    handleResize(); // Remove event listener on cleanup\n\n    return function () {\n      return window.removeEventListener('resize', handleResize);\n    };\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}","map":null,"metadata":{},"sourceType":"module"}