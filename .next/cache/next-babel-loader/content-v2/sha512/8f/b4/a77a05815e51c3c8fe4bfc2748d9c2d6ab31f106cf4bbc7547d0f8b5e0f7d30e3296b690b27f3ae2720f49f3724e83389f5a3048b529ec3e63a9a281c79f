{"ast":null,"code":"import _regeneratorRuntime from \"C:/off-saas/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/off-saas/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport Router from 'next/router';\nimport firebase, { db } from '../../../../../../../lib/firebase'; // Add new section\n\nexport var newSectionPage = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(title, sections, setSelectedSection, projectId) {\n    var section, newFromDB, newID, newSectionIndex;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            section = {\n              position: sections.length,\n              title: title,\n              body: ''\n            };\n            _context.next = 3;\n            return db.collection('projects').doc(projectId).collection('businessPlan').doc(Router.query.project).collection('inputs').add({\n              position: section.position,\n              title: section.title,\n              // body: section.body,\n              fields: [],\n              timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n              createdAt: new Date()\n            });\n\n          case 3:\n            newFromDB = _context.sent;\n            newID = newFromDB.id; // await this.setState({ sections: [...this.state.sections, section] });\n\n            newSectionIndex = sections.indexOf(sections.filter(function (_section) {\n              return _section.id === newID;\n            })[0]);\n            setSelectedSection(sections[newSectionIndex]);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function newSectionPage(_x, _x2, _x3, _x4) {\n    return _ref.apply(this, arguments);\n  };\n}(); // Select section\n\nexport var selectSectionPage = function selectSectionPage(section, index, setSelectedSection) {\n  return setSelectedSection(section);\n};","map":{"version":3,"sources":["C:/off-saas/components/dashboard/startup/project/business-app/business-plan/businessPlanUtils/sections.js"],"names":["Router","firebase","db","newSectionPage","title","sections","setSelectedSection","projectId","section","position","length","body","collection","doc","query","project","add","fields","timestamp","firestore","FieldValue","serverTimestamp","createdAt","Date","newFromDB","newID","id","newSectionIndex","indexOf","filter","_section","selectSectionPage","index"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,aAAnB;AACA,OAAOC,QAAP,IAAmBC,EAAnB,QAA6B,mCAA7B,C,CAEA;;AACA,OAAO,IAAMC,cAAc;AAAA,sEAAG,iBAAOC,KAAP,EAAcC,QAAd,EAAwBC,kBAAxB,EAA4CC,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AACtBC,YAAAA,OADsB,GACZ;AACdC,cAAAA,QAAQ,EAAEJ,QAAQ,CAACK,MADL;AAEdN,cAAAA,KAAK,EAAEA,KAFO;AAGdO,cAAAA,IAAI,EAAE;AAHQ,aADY;AAAA;AAAA,mBAMJT,EAAE,CACvBU,UADqB,CACV,UADU,EAErBC,GAFqB,CAEjBN,SAFiB,EAGrBK,UAHqB,CAGV,cAHU,EAIrBC,GAJqB,CAIjBb,MAAM,CAACc,KAAP,CAAaC,OAJI,EAKrBH,UALqB,CAKV,QALU,EAMrBI,GANqB,CAMjB;AACHP,cAAAA,QAAQ,EAAED,OAAO,CAACC,QADf;AAEHL,cAAAA,KAAK,EAAEI,OAAO,CAACJ,KAFZ;AAGH;AACAa,cAAAA,MAAM,EAAE,EAJL;AAKHC,cAAAA,SAAS,EAAEjB,QAAQ,CAACkB,SAAT,CAAmBC,UAAnB,CAA8BC,eAA9B,EALR;AAMHC,cAAAA,SAAS,EAAE,IAAIC,IAAJ;AANR,aANiB,CANI;;AAAA;AAMtBC,YAAAA,SANsB;AAoBtBC,YAAAA,KApBsB,GAoBdD,SAAS,CAACE,EApBI,EAqB5B;;AACMC,YAAAA,eAtBsB,GAsBJtB,QAAQ,CAACuB,OAAT,CAAiBvB,QAAQ,CAACwB,MAAT,CAAgB,UAACC,QAAD;AAAA,qBAAcA,QAAQ,CAACJ,EAAT,KAAgBD,KAA9B;AAAA,aAAhB,EAAqD,CAArD,CAAjB,CAtBI;AAuB5BnB,YAAAA,kBAAkB,CAACD,QAAQ,CAACsB,eAAD,CAAT,CAAlB;;AAvB4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAdxB,cAAc;AAAA;AAAA;AAAA,GAApB,C,CA0BP;;AACA,OAAO,IAAM4B,iBAAiB,GAAG,SAApBA,iBAAoB,CAACvB,OAAD,EAAUwB,KAAV,EAAiB1B,kBAAjB;AAAA,SAAwCA,kBAAkB,CAACE,OAAD,CAA1D;AAAA,CAA1B","sourcesContent":["import Router from 'next/router';\r\nimport firebase, { db } from '../../../../../../../lib/firebase';\r\n\r\n// Add new section\r\nexport const newSectionPage = async (title, sections, setSelectedSection, projectId) => {\r\n  const section = {\r\n    position: sections.length,\r\n    title: title,\r\n    body: '',\r\n  };\r\n  const newFromDB = await db\r\n    .collection('projects')\r\n    .doc(projectId)\r\n    .collection('businessPlan')\r\n    .doc(Router.query.project)\r\n    .collection('inputs')\r\n    .add({\r\n      position: section.position,\r\n      title: section.title,\r\n      // body: section.body,\r\n      fields: [],\r\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n      createdAt: new Date(),\r\n    });\r\n  const newID = newFromDB.id;\r\n  // await this.setState({ sections: [...this.state.sections, section] });\r\n  const newSectionIndex = sections.indexOf(sections.filter((_section) => _section.id === newID)[0]);\r\n  setSelectedSection(sections[newSectionIndex]);\r\n};\r\n\r\n// Select section\r\nexport const selectSectionPage = (section, index, setSelectedSection) => setSelectedSection(section);\r\n"]},"metadata":{},"sourceType":"module"}