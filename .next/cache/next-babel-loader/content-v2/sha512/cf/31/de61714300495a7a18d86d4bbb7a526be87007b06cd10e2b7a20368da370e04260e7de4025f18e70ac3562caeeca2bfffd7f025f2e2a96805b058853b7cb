{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport dynamic from 'next/dynamic'; // import debounce from 'lodash/debounce';\n// import debounce from '../../../../../utils/helpers';\n// import debounce from 'lodash/debounce';\n\nimport debounce from '../../../../../utils/helpers';\nimport { useStateWithPromise } from '../../../../../utils/useStateWithPromise';\nimport { useCustomState } from '../../../../../utils/useCustomState';\nconst ReactQuill = dynamic(() => import('react-quill'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('react-quill')],\n    modules: [\"..\\\\components\\\\dashboard\\\\startup\\\\project\\\\business-app\\\\Editor.js -> \" + 'react-quill']\n  }\n});\nimport '../../../../../node_modules/react-quill/dist/quill.snow.css';\nimport '../../../../../node_modules/react-quill/dist/quill.bubble.css';\nimport '../../../../../node_modules/react-quill/dist/quill.core.css';\nimport Image from 'next/image';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'; // import { useRechartToPng } from 'recharts-to-png';\n\nimport FileSaver from 'file-saver';\nimport ChartJsComponent from './Chartjs'; // import ReactChart from './ReachChart';\n\nimport gsap, { Power4, Linear } from 'gsap';\nimport HeaderComponent from './Header';\nimport TextElement from './Text';\nimport TableElement from './Table';\nimport SpacingElement from './Spacing';\n\nconst EditorInputElement = ({\n  sectionTitleUpdate,\n  tableUpdate,\n  headerUpdate,\n  reorderElements,\n  projectId,\n  addChart,\n  addNewHeader,\n  chartTypeUpdate,\n  onDatasetLabel6Update,\n  onDatasetLabel5Update,\n  onDatasetLabel4Update,\n  onDatasetLabel3Update,\n  onDatasetLabel2Update,\n  onDatasetLabel1Update,\n  onDataset6Update,\n  onDataset5Update,\n  onDataset4Update,\n  onDataset3Update,\n  onDataset2Update,\n  onDataset1Update,\n  chartLabelsUpdate,\n  chartValueUpdate,\n  addNewChart,\n  deleteParticularField,\n  addNewField,\n  fieldUpdate,\n  sectionUpdate,\n  selectedSection,\n  selectedSectionIndex,\n  sections\n}) => {\n  const {\n    0: title,\n    1: setTitle\n  } = useState('');\n  const {\n    0: text,\n    1: setText\n  } = useState('');\n  const {\n    0: id,\n    1: setId\n  } = useState('');\n  const {\n    0: currentIndex,\n    1: setCurrentIndex\n  } = useState(null);\n  const {\n    0: lastSectionIndex,\n    1: setLastSectionIndex\n  } = useState(null); // const [currentSectionIndex, setCurrentSectionIndex] = useState(null);\n\n  const onLeftBarShow = () => {\n    // --- VERSION 1 ---\n    // gsap.to(document.getElementById('left-bar'), {width: '160px', transformOrigin: 'left', duration: 1, ease: Linear });\n    // // EXIT\n    // gsap.to(document.getElementById('exit'), { autoAlpha: 1, duration: 1, ease: Linear, delay: 2 })\n    // // IMAGES\n    // gsap.to(document.getElementById('left-element'), { scale: 1, duration: 1, ease: Linear, delay: 1 });\n    // gsap.to(document.getElementById('left-element1'), { scale: 1, duration: 1, ease: Linear, delay: 1 });\n    // gsap.to(document.getElementById('left-element2'), { scale: 1, duration: 1, ease: Linear, delay: 1 });\n    // // TEXT\n    // gsap.to(document.getElementById('left-text'), { scale: 1, duration: 1, ease: Linear, delay: 1 });\n    // gsap.to(document.getElementById('left-text1'), { scale: 1, duration: 1, ease: Linear, delay: 1 });\n    // gsap.to(document.getElementById('left-text2'), { scale: 1, duration: 1, ease: Linear, delay: 1 });\n    // --- VERSION 2 ---\n    // CONTAINERS\n    gsap.to(document.getElementById('container'), {\n      autoAlpha: 1\n    });\n    gsap.to(document.getElementById('container1'), {\n      autoAlpha: 1\n    });\n    gsap.to(document.getElementById('container2'), {\n      autoAlpha: 1\n    });\n    gsap.to(document.getElementById('container3'), {\n      autoAlpha: 1\n    });\n    gsap.to(document.getElementById('container4'), {\n      autoAlpha: 1\n    }); // LEFT BAR\n\n    gsap.to(document.getElementById('left-bar'), {\n      height: '100vh',\n      transformOrigin: 'top',\n      duration: 2,\n      ease: Linear\n    }); // EXIT\n\n    gsap.to(document.getElementById('exit'), {\n      autoAlpha: 1,\n      duration: 1,\n      ease: Linear,\n      delay: 2\n    }); // IMAGES\n\n    gsap.to(document.getElementById('left-element'), {\n      zIndex: 50,\n      scale: 1,\n      transformOrigin: 'top',\n      duration: 1,\n      ease: Linear,\n      delay: 0.3\n    });\n    gsap.to(document.getElementById('left-element1'), {\n      zIndex: 50,\n      scale: 1,\n      transformOrigin: 'top',\n      duration: 1,\n      ease: Linear,\n      delay: 0.5\n    });\n    gsap.to(document.getElementById('left-element2'), {\n      zIndex: 50,\n      scale: 1,\n      transformOrigin: 'top',\n      duration: 1,\n      ease: Linear,\n      delay: 0.7\n    });\n    gsap.to(document.getElementById('left-element3'), {\n      zIndex: 50,\n      scale: 1,\n      transformOrigin: 'top',\n      duration: 1,\n      ease: Linear,\n      delay: 0.9\n    });\n    gsap.to(document.getElementById('left-element4'), {\n      zIndex: 50,\n      scale: 1,\n      transformOrigin: 'top',\n      duration: 1,\n      ease: Linear,\n      delay: 1.1\n    }); // TEXT\n\n    gsap.to(document.getElementById('left-text'), {\n      zIndex: 50,\n      scale: 1,\n      transformOrigin: 'top',\n      duration: 1,\n      ease: Linear,\n      delay: 0.3\n    });\n    gsap.to(document.getElementById('left-text1'), {\n      zIndex: 50,\n      scale: 1,\n      transformOrigin: 'top',\n      duration: 1,\n      ease: Linear,\n      delay: 0.5\n    });\n    gsap.to(document.getElementById('left-text2'), {\n      zIndex: 50,\n      scale: 1,\n      transformOrigin: 'top',\n      duration: 1,\n      ease: Linear,\n      delay: 0.7\n    });\n    gsap.to(document.getElementById('left-text3'), {\n      zIndex: 50,\n      scale: 1,\n      transformOrigin: 'top',\n      duration: 1,\n      ease: Linear,\n      delay: 0.9\n    });\n    gsap.to(document.getElementById('left-text4'), {\n      zIndex: 50,\n      scale: 1,\n      transformOrigin: 'top',\n      duration: 1,\n      ease: Linear,\n      delay: 1.1\n    });\n  };\n\n  const deleteField = index => {\n    deleteParticularField(index);\n  };\n\n  const updateTitle = async title => {\n    await setTitle(title);\n    onSectionTitleUpdate(title);\n  };\n\n  const onSectionTitleUpdate = useCallback(debounce(data => {\n    sectionTitleUpdate(data);\n  }, 500), []);\n  const labelUpdate = useCallback(debounce(async data => {\n    const currentSectionIndex = await data.selSection.fields.findIndex(field => field.index == data.index);\n    console.log(data);\n    chartLabelsUpdate(data, data.index, currentSectionIndex, data.selSection);\n  }, 500), []); // Dataset1 update\n\n  const dataset1Update = useCallback(debounce(async data => {\n    const currentSectionIndex = await data.selSection.fields.findIndex(field => field.index == data.index);\n    console.log(data);\n    onDataset1Update(data, data.index, currentSectionIndex, data.selSection);\n  }, 500), []); // Dataset2 update\n\n  const dataset2Update = useCallback(debounce(async data => {\n    const currentSectionIndex = await data.selSection.fields.findIndex(field => field.index == data.index);\n    console.log(data);\n    onDataset2Update(data, data.index, currentSectionIndex, data.selSection);\n  }, 500), []); // Dataset3 update\n\n  const dataset3Update = useCallback(debounce(async data => {\n    const currentSectionIndex = await data.selSection.fields.findIndex(field => field.index == data.index);\n    console.log(data);\n    onDataset3Update(data, data.index, currentSectionIndex, data.selSection);\n  }, 500), []); // Dataset4 update\n\n  const dataset4Update = useCallback(debounce(async data => {\n    const currentSectionIndex = await data.selSection.fields.findIndex(field => field.index == data.index);\n    console.log(data);\n    onDataset4Update(data, data.index, currentSectionIndex, data.selSection);\n  }, 500), []); // Dataset5 update\n\n  const dataset5Update = useCallback(debounce(async data => {\n    const currentSectionIndex = await data.selSection.fields.findIndex(field => field.index == data.index);\n    console.log(data);\n    onDataset5Update(data, data.index, currentSectionIndex, data.selSection);\n  }, 500), []); // Dataset6 update\n\n  const dataset6Update = useCallback(debounce(async data => {\n    const currentSectionIndex = await data.selSection.fields.findIndex(field => field.index == data.index);\n    console.log(data);\n    onDataset6Update(data, data.index, currentSectionIndex, data.selSection);\n  }, 500), []); // Dataset labels update\n\n  const datasetLabel1Update = useCallback(debounce(async data => {\n    const currentSectionIndex = await data.selSection.fields.findIndex(field => field.index == data.index);\n    console.log(data);\n    onDatasetLabel1Update(data, data.index, currentSectionIndex, data.selSection);\n  }, 500), []);\n  const datasetLabel2Update = useCallback(debounce(async data => {\n    const currentSectionIndex = await data.selSection.fields.findIndex(field => field.index == data.index);\n    console.log(data);\n    onDatasetLabel2Update(data, data.index, currentSectionIndex, data.selSection);\n  }, 500), []);\n  const datasetLabel3Update = useCallback(debounce(async data => {\n    const currentSectionIndex = await data.selSection.fields.findIndex(field => field.index == data.index);\n    console.log(data);\n    onDatasetLabel3Update(data, data.index, currentSectionIndex, data.selSection);\n  }, 500), []);\n  const datasetLabel4Update = useCallback(debounce(async data => {\n    const currentSectionIndex = await data.selSection.fields.findIndex(field => field.index == data.index);\n    console.log(data);\n    onDatasetLabel4Update(data, data.index, currentSectionIndex, data.selSection);\n  }, 500), []);\n  const datasetLabel5Update = useCallback(debounce(async data => {\n    const currentSectionIndex = await data.selSection.fields.findIndex(field => field.index == data.index);\n    console.log(data);\n    onDatasetLabel5Update(data, data.index, currentSectionIndex, data.selSection);\n  }, 500), []);\n  const datasetLabel6Update = useCallback(debounce(async data => {\n    const currentSectionIndex = await data.selSection.fields.findIndex(field => field.index == data.index);\n    console.log(data);\n    onDatasetLabel6Update(data, data.index, currentSectionIndex, data.selSection);\n  }, 500), []);\n  useEffect(() => {\n    setCurrentIndex(null); // selectedSection.fields możesz wyrzucić\n  }, [selectedSection.id, selectedSection.fields]);\n  useEffect(() => {\n    if (selectedSection.id !== id) {\n      setTitle(selectedSection.title); // setText(selectedSection.body);\n      // setId(selectedSection.id);\n    }\n  }, [selectedSection.id]); // useEffect(() => {\n  //   setCurrentIndex()\n  // }, [currentIndex])\n  // console.log(selectedSection);\n  // console.log(currentIndex);\n\n  console.log(selectedSection); // const [png, ref] = useRechartToPng();\n  // const fn = useCallback(async () => {\n  //   FileSaver.saveAs(png, 'myChart.png');\n  //   console.log(png);\n  // }, [png]);\n\n  const containerRef = useRef();\n  console.log('Selected section --> ', selectedSection); // Elements manager\n\n  const {\n    0: elementsArray,\n    1: setElementsArray\n  } = useState();\n  useEffect(() => {\n    // elementsArray !== selectedSection.fields\n    if (!elementsArray || elementsArray !== selectedSection.fields) {\n      console.log('Yeeeeep');\n      setElementsArray(selectedSection.fields);\n    }\n  }, [selectedSection]);\n\n  const handleOnDragEnd = result => {\n    if (!result.destination) return;\n    const items = Array.from(elementsArray);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n    console.log(result);\n    setElementsArray(items);\n    reorderElements(items);\n  };\n\n  console.log(elementsArray);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: \"relative flex flex-col h-full w-full flex px-2 py-2 rounded-2xl bg-white dark:bg-background mt-1\",\n      children: /*#__PURE__*/_jsx(\"div\", {\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: \"w-full px-3 bg-white py-3 rounded-2xl flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsx(\"input\", {\n            className: \"text-lg bg-white focus:outline-none w-3/5 text-primarydark\",\n            placeholder: \"Section title...\",\n            value: title ? title : '',\n            onChange: e => updateTitle(e.target.value)\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"flex justify-end items-center w-2/5\",\n            children: [/*#__PURE__*/_jsx(\"p\", {\n              className: \"text-primarydark text-basae mr-4 pl-2\",\n              children: \"New element\"\n            }), /*#__PURE__*/_jsx(Image, {\n              onClick: onLeftBarShow,\n              src: \"/chart/pencil.svg\",\n              height: 40,\n              width: 40\n            })]\n          })]\n        })\n      })\n    }), /*#__PURE__*/_jsx(DragDropContext, {\n      onDragEnd: handleOnDragEnd,\n      children: /*#__PURE__*/_jsx(Droppable, {\n        droppableId: \"elements\",\n        children: provided => /*#__PURE__*/_jsxs(\"div\", _objectSpread(_objectSpread({\n          className: \"elements\"\n        }, provided.droppableProps), {}, {\n          ref: provided.innerRef,\n          className: \"w-full flex justify-center items-center flex-col\",\n          children: [elementsArray && elementsArray.length !== 0 && elementsArray.map((field, currentIndex) => {\n            console.log('FIELD --> ', field);\n            return /*#__PURE__*/_jsx(Draggable, {\n              draggableId: field.index,\n              index: currentIndex,\n              children: provided => field.type == 'text' && /*#__PURE__*/_jsx(TextElement, {\n                fieldUpdate: fieldUpdate,\n                currentIndex: currentIndex,\n                selectedSection: selectedSection,\n                provided: provided,\n                field: field,\n                deleteField: deleteField,\n                setCurrentIndex: setCurrentIndex\n              }) || field.type == 'chart' && /*#__PURE__*/_jsx(ChartJsComponent, {\n                provided: provided,\n                projectId: projectId,\n                addChart: addChart,\n                chartTypeUpdate: chartTypeUpdate,\n                currentIndex: currentIndex,\n                deleteField: deleteField,\n                containerRef: containerRef,\n                datasetLabel6Update: datasetLabel6Update,\n                datasetLabel5Update: datasetLabel5Update,\n                datasetLabel4Update: datasetLabel4Update,\n                datasetLabel3Update: datasetLabel3Update,\n                datasetLabel2Update: datasetLabel2Update,\n                datasetLabel1Update: datasetLabel1Update,\n                dataset6Update: dataset6Update,\n                dataset5Update: dataset5Update,\n                dataset4Update: dataset4Update,\n                dataset3Update: dataset3Update,\n                dataset2Update: dataset2Update,\n                dataset1Update: dataset1Update,\n                labelUpdate: labelUpdate,\n                chartLabelsUpdate: chartLabelsUpdate,\n                field: field,\n                selectedSection: selectedSection,\n                index: field.index,\n                chartValueUpdate: chartValueUpdate,\n                selectedSection: selectedSection\n              }) || field.type == 'header' && /*#__PURE__*/_jsx(HeaderComponent, {\n                fieldUpdate: fieldUpdate,\n                currentIndex: currentIndex,\n                headerUpdate: headerUpdate,\n                provided: provided,\n                deleteField: deleteField,\n                field: field\n              }) || field.type == 'table' && /*#__PURE__*/_jsx(TableElement, {\n                currentIndex: currentIndex,\n                tableUpdate: tableUpdate,\n                deleteField: deleteField,\n                provided: provided,\n                field: field\n              }) || field.type == 'spacing' && /*#__PURE__*/_jsx(SpacingElement, {\n                deleteField: deleteField,\n                provided: provided,\n                field: field\n              })\n            }, field.index);\n          }), provided.placeholder]\n        }))\n      })\n    })]\n  });\n};\n\nexport default EditorInputElement;","map":null,"metadata":{},"sourceType":"module"}