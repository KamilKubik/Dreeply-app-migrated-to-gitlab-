{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { withSuperJSONPage as _withSuperJSONPage } from \"babel-plugin-superjson-next/tools\";\nimport { withSuperJSONProps as _withSuperJSONProps } from \"babel-plugin-superjson-next/tools\";\n\nvar _jsxFileName = \"C:\\\\off-saas\\\\pages\\\\dashboard\\\\projects\\\\index.js\",\n    _this = this;\n\nimport React from 'react';\n\nvar ProjectsManager = function ProjectsManager(_ref) {\n  var projects = _ref.projects;\n  console.log(projects);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = ProjectsManager;\nexport var __N_SSP = true;\nexport default _c2 = _withSuperJSONPage(ProjectsManager);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ProjectsManager\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/off-saas/pages/dashboard/projects/index.js"],"names":["React","ProjectsManager","projects","console","log"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAIA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AACxCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,sBACE;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAKD,CAPD;;KAAMD,e;;AAuCN,wCAAeA,eAAf","sourcesContent":["import React from 'react';\r\nimport Cookies from 'js-cookie';\r\nimport { db } from '../../../lib/firebase-admin';\r\n\r\nconst ProjectsManager = ({ projects }) => {\r\n  console.log(projects);\r\n  return (\r\n    <div>\r\n      <p>Projects</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = async (context) => {\r\n  const cookies = context.req.headers.cookie;\r\n  console.log(cookies.uid);\r\n  const userUid = Cookies.get('uid');\r\n  const projects = [];\r\n  await db\r\n    .collection('projects')\r\n    .where('uid', '==', userUid)\r\n    .get()\r\n    .then((querySnapshot) => {\r\n      querySnapshot.forEach((doc) => {\r\n        projects.push({ ...doc.data() });\r\n      });\r\n    });\r\n  // const data = await snapshot.get();\r\n  // data.docs.forEach((doc) => projects.push({ ...doc.data() }));\r\n  return {\r\n    props: { projects },\r\n    // revalidate: 1,\r\n  };\r\n\r\n  // const snapshot = await ref.get();\r\n  // const project = [];\r\n\r\n  // snapshot.docs.forEach((doc) => {\r\n  //   const data = JSON.parse(safeJsonStringify(doc.data()));\r\n  //   project.push({ ...data });\r\n  // });\r\n};\r\n\r\nexport default ProjectsManager;\r\n"]},"metadata":{},"sourceType":"module"}