{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/off-saas/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"C:/off-saas/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"C:/off-saas/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\off-saas\\\\components\\\\dashboard\\\\startup\\\\project\\\\business-app\\\\PDFDocument.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from 'react'; // import { html2pdf } from 'html2pdf.js';\n\nimport htmlToPdfmake from 'html-to-pdfmake';\nimport pdfMake from 'pdfmake/build/pdfmake';\nimport pdfFonts from 'pdfmake/build/vfs_fonts';\nimport { db } from '../../../../../lib/firebase';\nimport Router from 'next/router';\nimport ChartJsImage from 'chartjs-to-image';\nimport ChartPDF from './ChartPDF';\nimport gsap, { Linear } from 'gsap'; // import fs from 'fs';\n\nvar fs = require('fs');\n\nvar PDFDocument = function PDFDocument(_ref) {\n  _s();\n\n  var projectId = _ref.projectId,\n      pdfChartsCreate = _ref.pdfChartsCreate;\n\n  // const containerRef = useRef();\n  var _useState = useState(),\n      sections = _useState[0],\n      setSections = _useState[1];\n\n  var _useState2 = useState(),\n      document1 = _useState2[0],\n      setDocument = _useState2[1];\n\n  var _useState3 = useState(),\n      imagesUrl = _useState3[0],\n      setImagesUrl = _useState3[1];\n\n  console.log(projectId);\n  useEffect( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!projectId) {\n              _context.next = 3;\n              break;\n            }\n\n            _context.next = 3;\n            return db.collection('projects').doc(projectId).collection('businessPlan').doc(Router.query.project).collection('inputs').onSnapshot(function (querySnapshot) {\n              var sectionsData = querySnapshot.docs.map(function (doc) {\n                var data = doc.data(); // data['id'] = doc.id;\n\n                return data;\n              });\n              sectionsData.sort(function (a, b) {\n                return a.position - b.position;\n              });\n              console.log('Sections data --> ', sectionsData);\n              setSections(sectionsData); // pdfChartsCreate(sectionsData);\n\n              var imagesArray = [];\n              setImagesUrl(imagesArray);\n              sectionsData.map(function (section) {\n                section.fields.map(function (field) {\n                  if (field.type == 'chart') {\n                    var colors = field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' ? ['rgba(205,220,57,1)', 'rgba(255,235,59,1)', 'rgba(255,193,7,1)', 'rgba(255,152,0,1)', 'rgba(255,87,34,1)', 'rgba(244,67,54,1)', 'rgba(233,30,99,1)', 'rgba(156,39,176,1)', 'rgba(103,58,183,1)', 'rgba(63,81,181,1)', 'rgba(96,125,139,1)', 'rgba(121,85,72,1)'] : field.chartType == 'Line chart' || field.chartType == 'Area chart' ? 'rgba(255,185,0 ,1 )' : ['rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )'];\n                    var colors1 = field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' ? ['rgba(205,220,57,1)', 'rgba(255,235,59,1)', 'rgba(255,193,7,1)', 'rgba(255,152,0,1)', 'rgba(255,87,34,1)', 'rgba(244,67,54,1)', 'rgba(233,30,99,1)', 'rgba(156,39,176,1)', 'rgba(103,58,183,1)', 'rgba(63,81,181,1)', 'rgba(96,125,139,1)', 'rgba(121,85,72,1)'] : field.chartType == 'Line chart' || field.chartType == 'Area chart' ? 'rgba(0,204,106 ,1 )' : ['rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )'];\n                    var colors2 = field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' ? ['rgba(205,220,57,1)', 'rgba(255,235,59,1)', 'rgba(255,193,7,1)', 'rgba(255,152,0,1)', 'rgba(255,87,34,1)', 'rgba(244,67,54,1)', 'rgba(233,30,99,1)', 'rgba(156,39,176,1)', 'rgba(103,58,183,1)', 'rgba(63,81,181,1)', 'rgba(96,125,139,1)', 'rgba(121,85,72,1)'] : field.chartType == 'Line chart' || field.chartType == 'Area chart' ? 'rgba(0,120,215 ,1 )' : ['rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )'];\n                    var colors3 = field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' ? ['rgba(205,220,57,1)', 'rgba(255,235,59,1)', 'rgba(255,193,7,1)', 'rgba(255,152,0,1)', 'rgba(255,87,34,1)', 'rgba(244,67,54,1)', 'rgba(233,30,99,1)', 'rgba(156,39,176,1)', 'rgba(103,58,183,1)', 'rgba(63,81,181,1)', 'rgba(96,125,139,1)', 'rgba(121,85,72,1)'] : field.chartType == 'Line chart' || field.chartType == 'Area chart' ? 'rgba(231,72,86 ,1 )' : ['rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )'];\n                    var colors4 = field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' ? ['rgba(205,220,57,1)', 'rgba(255,235,59,1)', 'rgba(255,193,7,1)', 'rgba(255,152,0,1)', 'rgba(255,87,34,1)', 'rgba(244,67,54,1)', 'rgba(233,30,99,1)', 'rgba(156,39,176,1)', 'rgba(103,58,183,1)', 'rgba(63,81,181,1)', 'rgba(96,125,139,1)', 'rgba(121,85,72,1)'] : field.chartType == 'Line chart' || field.chartType == 'Area chart' ? 'rgba(126,115,95 ,1 )' : ['rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )'];\n                    var colors5 = field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' ? ['rgba(205,220,57,1)', 'rgba(255,235,59,1)', 'rgba(255,193,7,1)', 'rgba(255,152,0,1)', 'rgba(255,87,34,1)', 'rgba(244,67,54,1)', 'rgba(233,30,99,1)', 'rgba(156,39,176,1)', 'rgba(103,58,183,1)', 'rgba(63,81,181,1)', 'rgba(96,125,139,1)', 'rgba(121,85,72,1)'] : field.chartType == 'Line chart' || field.chartType == 'Area chart' ? 'rgba(177,70,194 ,1 )' : ['rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )'];\n                    var data = {\n                      labels: field.labels && _toConsumableArray(field.labels.map(function (label) {\n                        if (label !== '') {\n                          return label;\n                        } else {\n                          return '';\n                        }\n                      })),\n                      datasets: [// Dataset1\n                      {\n                        label: field.dataset1Label && field.dataset1Label,\n                        data: field.dataset1 && field.dataset1.map(function (data) {\n                          if (data !== '') {\n                            return data;\n                          }\n                        }),\n                        backgroundColor: colors,\n                        borderWidth: field.chartType == 'Area chart' ? 0 : field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' && 2\n                      }, // Dataset2\n                      {\n                        label: field.dataset2Label && field.dataset2Label,\n                        data: field.dataset2 && field.dataset2.map(function (data) {\n                          if (data !== '') {\n                            return data;\n                          }\n                        }),\n                        backgroundColor: colors1,\n                        borderWidth: field.chartType == 'Area chart' ? 0 : field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' && 2\n                      }, // Dataset3\n                      {\n                        label: field.dataset3Label && field.dataset3Label,\n                        data: field.dataset3 && field.dataset3.map(function (data) {\n                          if (data !== '') {\n                            return data;\n                          }\n                        }),\n                        backgroundColor: colors2,\n                        borderWidth: field.chartType == 'Area chart' ? 0 : field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' && 2\n                      }, // Dataset4\n                      {\n                        label: field.dataset4Label && field.dataset4Label,\n                        data: field.dataset4 && field.dataset4.map(function (data) {\n                          if (data !== '') {\n                            return data;\n                          }\n                        }),\n                        backgroundColor: colors3,\n                        borderWidth: field.chartType == 'Area chart' ? 0 : field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' && 2\n                      }, // Dataset5\n                      {\n                        label: field.dataset5Label && field.dataset5Label,\n                        data: field.dataset5 && field.dataset5.map(function (data) {\n                          if (data !== '') {\n                            return data;\n                          }\n                        }),\n                        backgroundColor: colors4,\n                        borderWidth: field.chartType == 'Area chart' ? 0 : field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' && 2\n                      }, // Dataset6\n                      {\n                        label: field.dataset6Label && field.dataset6Label,\n                        data: field.dataset6 && field.dataset6.map(function (data) {\n                          if (data !== '') {\n                            return data;\n                          }\n                        }),\n                        backgroundColor: colors5,\n                        borderWidth: field.chartType == 'Area chart' ? 0 : field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' && 2\n                      }]\n                    };\n                    var datas = data.datasets.map(function (dataset) {\n                      console.log(dataset.data[0]);\n                      var test1 = dataset.data.map(function (datases) {\n                        if (datases !== undefined) {\n                          return datases;\n                        } else {\n                          return '';\n                        }\n                      });\n                      var test = test1.map(function (datarer, index) {\n                        if (data.labels[index] !== '') {\n                          return datarer;\n                        }\n                      });\n                      var test2 = test.filter(function (obj) {\n                        return obj !== undefined;\n                      });\n                      return test2;\n                    });\n                    var fill = field.chartType == 'Line chart' ? false : undefined;\n                    var newDatasets = [{\n                      label: data.datasets[0].label,\n                      data: datas[0],\n                      backgroundColor: data.datasets[0].backgroundColor,\n                      borderColor: field.chartType == 'Line chart' ? 'rgba(255,185,0 ,1 )' : 'rgb(255, 255, 255)',\n                      borderWidth: data.datasets[0].borderWidth,\n                      fill: fill\n                    }, {\n                      label: data.datasets[1].label,\n                      data: datas[1],\n                      backgroundColor: data.datasets[1].backgroundColor,\n                      borderColor: field.chartType == 'Line chart' ? 'rgba(0,204,106 ,1 )' : 'rgb(255, 255, 255)',\n                      borderWidth: data.datasets[1].borderWidth,\n                      fill: fill\n                    }, {\n                      label: data.datasets[2].label,\n                      data: datas[2],\n                      backgroundColor: data.datasets[2].backgroundColor,\n                      borderColor: field.chartType == 'Line chart' ? 'rgba(0,120,215 ,1 )' : 'rgb(255, 255, 255)',\n                      borderWidth: data.datasets[2].borderWidth,\n                      fill: fill\n                    }, {\n                      label: data.datasets[3].label,\n                      data: datas[3],\n                      backgroundColor: data.datasets[3].backgroundColor,\n                      borderColor: field.chartType == 'Line chart' ? 'rgba(231,72,86 ,1 )' : 'rgb(255, 255, 255)',\n                      borderWidth: data.datasets[3].borderWidth,\n                      fill: fill\n                    }, {\n                      label: data.datasets[4].label,\n                      data: datas[4],\n                      backgroundColor: data.datasets[4].backgroundColor,\n                      borderColor: field.chartType == 'Line chart' ? 'rgba(126,115,95 ,1 )' : 'rgb(255, 255, 255)',\n                      borderWidth: data.datasets[4].borderWidth,\n                      fill: fill\n                    }, {\n                      label: data.datasets[5].label,\n                      data: datas[5],\n                      backgroundColor: data.datasets[5].backgroundColor,\n                      borderColor: field.chartType == 'Line chart' ? 'rgba(177,70,194 ,1 )' : 'rgb(255, 255, 255)',\n                      borderWidth: data.datasets[5].borderWidth,\n                      fill: fill\n                    }];\n                    var chartType = [field.chartType == 'Bar chart' ? 'bar' : '', field.chartType == 'Reverse chart' ? 'horizontalBar' : '', field.chartType == 'Line chart' ? 'line' : '', field.chartType == 'Pie chart' ? 'pie' : '', field.chartType == 'Doughnut chart' ? 'doughnut' : '', field.chartType == 'Area chart' ? 'line' : ''];\n                    var toSaveChart = new ChartJsImage();\n                    toSaveChart.setConfig({\n                      type: chartType.filter(function (type) {\n                        return type !== '';\n                      }),\n                      data: {\n                        labels: data.labels.filter(function (label) {\n                          return label !== '';\n                        }),\n                        datasets: newDatasets.filter(function (dataset) {\n                          return dataset.label !== '';\n                        })\n                      },\n                      options: {\n                        responsive: true,\n                        legend: {\n                          position: 'bottom'\n                        },\n                        // defaultFontFamily: (Chart.defaults.global.defaultFontFamily = 'Comfortaa'),\n                        scales: {\n                          yAxes: [{\n                            stacked: field.stacked == true ? true : false,\n                            ticks: {\n                              beginAtZero: true\n                            }\n                          }],\n                          xAxes: [{\n                            stacked: field.stacked == true ? true : false,\n                            ticks: {\n                              beginAtZero: true\n                            }\n                          }]\n                        }\n                      }\n                    });\n                    toSaveChart.setFormat('png').setDevicePixelRatio(2.0);\n                    var imageUrl = toSaveChart.toDataUrl();\n                    imageUrl.then(function (image) {\n                      console.log(image);\n                      imagesArray.push({\n                        imageUrl: image,\n                        imageIndex: field.index\n                      });\n                      console.log(imagesArray);\n                      setImagesUrl(imagesArray);\n                    });\n                  }\n                });\n              });\n            });\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), [projectId]);\n  pdfMake.vfs = pdfFonts.pdfMake.vfs;\n\n  var onDocumentSave1 = function onDocumentSave1() {\n    // Deleting commas between the array elements\n    console.log(sections);\n    var pdfContent = htmlToPdfmake( // `<div><p style='color: #6C63FF'>Hello from pdf document1<br />${helper ? '<p>Hello from helper</p>' : ''}</p></div>`\n    \"<div>\\n          <div>\\n            <h2 style='text-align: center; color: green'>First page</h2>\\n            <p class='red'>Some more random text below...</p>\\n            <br />\\n            <br />\\n            <br />\\n            <br />\\n            <p style='text-align: center'>Some more random text below...</p>\\n            <div class='test'></div>\\n            <p>normal</p><p style='text-align: center'>center</p><p class=\\\"ql-align-right\\\">right</p><p class=\\\"ql-align-justify\\\">justify</p>\\n          </div>\\n          <div>\".concat(sections.map(function (section) {\n      return \"<h2 class='pdf-pagebreak-before' style='margin-bottom: 50px'>\".concat(section.title, \"</h2>\\n              \").concat(section.fields.map(function (field) {\n        console.log(field.type);\n\n        if (field.type == 'header') {\n          return \"<h5>\".concat(field.title, \"</h5>\");\n        }\n\n        if (field.type == 'text') {\n          console.log(field.body.includes('ql-align-center'));\n\n          if (field.body.includes('ql-align-center')) {\n            var newFieldBody = field.body.replace('class=\"ql-align-center\"', \"style='text-align: center'\");\n            return \"<div>\".concat(newFieldBody, \"</div>\");\n          }\n\n          if (field.body.includes('ql-align-right')) {\n            var _newFieldBody = field.body.replace('class=\"ql-align-right\"', \"style='text-align: right'\");\n\n            return \"<div>\".concat(_newFieldBody, \"</div>\");\n          }\n\n          if (field.body.includes('ql-align-justify')) {\n            var _newFieldBody2 = field.body.replace('class=\"ql-align-justify\"', \"style='text-align: justify'\");\n\n            return \"<div>\".concat(_newFieldBody2, \"</div>\");\n          }\n\n          return \"<div>\".concat(field.body, \"</div>\");\n        }\n\n        if (field.type == 'chart') {\n          var imagesData = imagesUrl && imagesUrl.map(function (image) {\n            console.log('Images url --> ', imagesUrl);\n            console.log('Field --> ', field);\n\n            if (image.imageIndex == field.index) {\n              return \"<img src='\".concat(image.imageUrl, \"' width=\\\"768\\\" style='margin-top: 30px; margin-bottom: 30px;' />\");\n            }\n          }).join('');\n          return imagesData;\n        }\n\n        if (field.type == 'spacing') {\n          return \"<br />\";\n        }\n\n        if (field.type == 'table') {\n          console.log('Table --> ', field);\n          return \"<table style=\\\"margin-top: 30px; margin-bottom: 30px;\\\">\\n                      <thead>\\n                          <tr>\\n                              \".concat(field.headRows.map(function (row, headRowIndex) {\n            return \"<th class=\\\"thstyle\\\" style=\\\"background-color: #6C63FF; margin-top: 8px; margin-bottom: 8px; margin-left: 10px; margin-right: 10px; color: #FCFEFE;\\\">\".concat(row, \"</th>\");\n          }).join(''), \"\\n                          </tr>\\n                      </thead>\\n                      <tbody>\\n                        \").concat(field.rows.map(function (row, rowIndex) {\n            return \"<tr\\\">\".concat(row.row.map(function (rowData, rowDataIndex) {\n              return \"<td style=\\\"margin-top: 8px; margin-bottom: 8px; margin-left: 10px; margin-right: 10px; color: #0a1230;\\\">\".concat(rowData, \"</td>\");\n            }).join(''), \"</tr>\");\n          }).join(''), \"\\n                    </tbody>\\n                    </table>\");\n        }\n      }).join(''), \"\\n              \");\n    }).join(''), \"</div>\\n      </div>\"), {\n      defaultStyles: {\n        p: ''\n      }\n    }, {\n      tableAutoSize: true\n    });\n    var pdfDocument = {\n      content: pdfContent,\n      styles: {\n        red: {\n          // font: 'Comfortaa',\n          color: 'red',\n          marginLeft: 200\n        },\n        // Insert\n        'html-p': {\n          marginBottom: 15\n        },\n        'ql-indent-1': {\n          marginLeft: 15\n        },\n        'ql-indent-2': {\n          marginLeft: 30\n        },\n        'ql-indent-3': {\n          marginLeft: 45\n        },\n        'ql-indent-4': {\n          marginLeft: 60\n        },\n        'ql-indent-5': {\n          marginLeft: 75\n        },\n        'ql-indent-6': {\n          marginLeft: 90\n        },\n        'ql-indent-7': {\n          marginLeft: 105\n        },\n        'ql-indent-8': {\n          marginLeft: 120\n        },\n        'html-table': {\n          'border-radius': '25px',\n          'margin-top': '30px',\n          'margin-bottom': '30px'\n        }\n      },\n      pageBreakBefore: function pageBreakBefore(currentNode) {\n        return currentNode.style && currentNode.style.indexOf('pdf-pagebreak-before') > -1;\n      }\n    };\n    var pdfDocGenerator = pdfMake.createPdf(pdfDocument);\n    pdfDocGenerator.download(\"\".concat(Router.query.project, \"/business-plan.pdf\"));\n  };\n\n  var saveContainer = useRef();\n  var dropdownButton = useRef();\n  var dropdownContainer = useRef();\n\n  var _useState4 = useState(false),\n      dropdownButtonColorHelper = _useState4[0],\n      setDropdownButtonColorHelper = _useState4[1];\n\n  var _useState5 = useState(false),\n      dropdownContainerHelper = _useState5[0],\n      setDropdownContainerHelper = _useState5[1];\n\n  var onSaveDropdownShow = function onSaveDropdownShow() {\n    if (!dropdownContainerHelper) {\n      gsap.to(dropdownContainer.current, {\n        autoAlpha: 1,\n        duration: 1,\n        ease: Linear\n      }); // gsap.to(dropdownButton.current, { backgroundColor: '#6C63FF', color: '#f8f9fb', duration: 1, ease: Linear });\n\n      setDropdownContainerHelper(true);\n      setDropdownButtonColorHelper(true);\n    } else if (dropdownContainerHelper) {\n      gsap.to(dropdownContainer.current, {\n        autoAlpha: 0,\n        duration: 1,\n        ease: Linear\n      }); // gsap.to(dropdownButton.current, { backgroundColor: '#f8f9fb', color: '#6C63FF', duration: 1, ease: Linear });\n\n      setDropdownContainerHelper(false);\n      setDropdownButtonColorHelper(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: saveContainer,\n    className: \"relative flex justify-start\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative w-full flex justify-end items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        ref: dropdownButton,\n        onClick: onSaveDropdownShow,\n        className: \"hover:bg-primary hover:text-white dark:hover:bg-primarydark dark:hover:text-background focus:outline-none border border-primary text-primary text-sm screenLarge:text-base font-light py-2 px-8 rounded-2xl mt-2 dark:text-primarydark dark:border-primarydark \".concat(dropdownButtonColorHelper ? 'bg-primary text-background dark:bg-primarydark dark:text-background' : ''),\n        children: \"Save my work\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 642,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: dropdownContainer,\n        className: \"absolute bg-white rounded-2xl shadow-xl p-6 top-14 z-50 invisible opacity-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-start\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/mobile-navbar/success.svg\",\n            height: 26,\n            width: 26\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 653,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-lg ml-2\",\n            children: \"Show the world your work!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 654,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-6 py-4 bg-background rounded-2xl mt-2 pr-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"flex\",\n              children: \"Save as PDF:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 658,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"img\", {\n              onClick: onDocumentSave1,\n              src: \"/mobile-navbar/pdf.svg\",\n              height: 30,\n              width: 30,\n              className: \"mt-2 cursor-pointer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 659,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 657,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-full justify-start items-center mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Share your competitors analysis with this public link:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 662,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-full flex mt-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                value: \"www.project.com\",\n                className: \"bg-linkBackground text-sm px-2 py-1 dark:text-primarydark\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 664,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/mobile-navbar/foreign.svg\",\n                height: 28,\n                width: 28\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 665,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 663,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 661,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 656,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 651,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 641,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 640,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(PDFDocument, \"4Ty3v2lOBeYxYabhZyNeoZKquEw=\");\n\n_c = PDFDocument;\nexport default PDFDocument;\n\nvar _c;\n\n$RefreshReg$(_c, \"PDFDocument\");","map":{"version":3,"sources":["C:/off-saas/components/dashboard/startup/project/business-app/PDFDocument.js"],"names":["React","useRef","useState","useEffect","htmlToPdfmake","pdfMake","pdfFonts","db","Router","ChartJsImage","ChartPDF","gsap","Linear","fs","require","PDFDocument","projectId","pdfChartsCreate","sections","setSections","document1","setDocument","imagesUrl","setImagesUrl","console","log","collection","doc","query","project","onSnapshot","querySnapshot","sectionsData","docs","map","data","sort","a","b","position","imagesArray","section","fields","field","type","colors","chartType","colors1","colors2","colors3","colors4","colors5","labels","label","datasets","dataset1Label","dataset1","backgroundColor","borderWidth","dataset2Label","dataset2","dataset3Label","dataset3","dataset4Label","dataset4","dataset5Label","dataset5","dataset6Label","dataset6","datas","dataset","test1","datases","undefined","test","datarer","index","test2","filter","obj","fill","newDatasets","borderColor","toSaveChart","setConfig","options","responsive","legend","scales","yAxes","stacked","ticks","beginAtZero","xAxes","setFormat","setDevicePixelRatio","imageUrl","toDataUrl","then","image","push","imageIndex","vfs","onDocumentSave1","pdfContent","title","body","includes","newFieldBody","replace","imagesData","join","headRows","row","headRowIndex","rows","rowIndex","rowData","rowDataIndex","defaultStyles","p","tableAutoSize","pdfDocument","content","styles","red","color","marginLeft","marginBottom","pageBreakBefore","currentNode","style","indexOf","pdfDocGenerator","createPdf","download","saveContainer","dropdownButton","dropdownContainer","dropdownButtonColorHelper","setDropdownButtonColorHelper","dropdownContainerHelper","setDropdownContainerHelper","onSaveDropdownShow","to","current","autoAlpha","duration","ease"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\n// import { html2pdf } from 'html2pdf.js';\r\nimport htmlToPdfmake from 'html-to-pdfmake';\r\nimport pdfMake from 'pdfmake/build/pdfmake';\r\nimport pdfFonts from 'pdfmake/build/vfs_fonts';\r\nimport { db } from '../../../../../lib/firebase';\r\nimport Router from 'next/router';\r\nimport ChartJsImage from 'chartjs-to-image';\r\nimport ChartPDF from './ChartPDF';\r\nimport gsap, { Linear } from 'gsap';\r\n// import fs from 'fs';\r\n\r\nconst fs = require('fs');\r\n\r\nconst PDFDocument = ({ projectId, pdfChartsCreate }) => {\r\n  // const containerRef = useRef();\r\n  const [sections, setSections] = useState();\r\n  const [document1, setDocument] = useState();\r\n  const [imagesUrl, setImagesUrl] = useState();\r\n\r\n  console.log(projectId);\r\n\r\n  useEffect(async () => {\r\n    if (projectId) {\r\n      await db\r\n        .collection('projects')\r\n        .doc(projectId)\r\n        .collection('businessPlan')\r\n        .doc(Router.query.project)\r\n        .collection('inputs')\r\n        .onSnapshot((querySnapshot) => {\r\n          const sectionsData = querySnapshot.docs.map((doc) => {\r\n            const data = doc.data();\r\n            // data['id'] = doc.id;\r\n            return data;\r\n          });\r\n          sectionsData.sort((a, b) => a.position - b.position);\r\n          console.log('Sections data --> ', sectionsData);\r\n          setSections(sectionsData);\r\n          // pdfChartsCreate(sectionsData);\r\n          const imagesArray = [];\r\n          setImagesUrl(imagesArray);\r\n          sectionsData.map((section) => {\r\n            section.fields.map((field) => {\r\n              if (field.type == 'chart') {\r\n                const colors =\r\n                  field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart'\r\n                    ? [\r\n                        'rgba(205,220,57,1)',\r\n                        'rgba(255,235,59,1)',\r\n                        'rgba(255,193,7,1)',\r\n                        'rgba(255,152,0,1)',\r\n                        'rgba(255,87,34,1)',\r\n                        'rgba(244,67,54,1)',\r\n                        'rgba(233,30,99,1)',\r\n                        'rgba(156,39,176,1)',\r\n                        'rgba(103,58,183,1)',\r\n                        'rgba(63,81,181,1)',\r\n                        'rgba(96,125,139,1)',\r\n                        'rgba(121,85,72,1)',\r\n                      ]\r\n                    : field.chartType == 'Line chart' || field.chartType == 'Area chart'\r\n                    ? 'rgba(255,185,0 ,1 )'\r\n                    : [\r\n                        'rgba(255,185,0 ,1 )',\r\n                        'rgba(255,185,0 ,1 )',\r\n                        'rgba(255,185,0 ,1 )',\r\n                        'rgba(255,185,0 ,1 )',\r\n                        'rgba(255,185,0 ,1 )',\r\n                        'rgba(255,185,0 ,1 )',\r\n                        'rgba(255,185,0 ,1 )',\r\n                        'rgba(255,185,0 ,1 )',\r\n                        'rgba(255,185,0 ,1 )',\r\n                        'rgba(255,185,0 ,1 )',\r\n                        'rgba(255,185,0 ,1 )',\r\n                        'rgba(255,185,0 ,1 )',\r\n                      ];\r\n\r\n                const colors1 =\r\n                  field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart'\r\n                    ? [\r\n                        'rgba(205,220,57,1)',\r\n                        'rgba(255,235,59,1)',\r\n                        'rgba(255,193,7,1)',\r\n                        'rgba(255,152,0,1)',\r\n                        'rgba(255,87,34,1)',\r\n                        'rgba(244,67,54,1)',\r\n                        'rgba(233,30,99,1)',\r\n                        'rgba(156,39,176,1)',\r\n                        'rgba(103,58,183,1)',\r\n                        'rgba(63,81,181,1)',\r\n                        'rgba(96,125,139,1)',\r\n                        'rgba(121,85,72,1)',\r\n                      ]\r\n                    : field.chartType == 'Line chart' || field.chartType == 'Area chart'\r\n                    ? 'rgba(0,204,106 ,1 )'\r\n                    : [\r\n                        'rgba(0,204,106 ,1 )',\r\n                        'rgba(0,204,106 ,1 )',\r\n                        'rgba(0,204,106 ,1 )',\r\n                        'rgba(0,204,106 ,1 )',\r\n                        'rgba(0,204,106 ,1 )',\r\n                        'rgba(0,204,106 ,1 )',\r\n                        'rgba(0,204,106 ,1 )',\r\n                        'rgba(0,204,106 ,1 )',\r\n                        'rgba(0,204,106 ,1 )',\r\n                        'rgba(0,204,106 ,1 )',\r\n                        'rgba(0,204,106 ,1 )',\r\n                        'rgba(0,204,106 ,1 )',\r\n                      ];\r\n\r\n                const colors2 =\r\n                  field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart'\r\n                    ? [\r\n                        'rgba(205,220,57,1)',\r\n                        'rgba(255,235,59,1)',\r\n                        'rgba(255,193,7,1)',\r\n                        'rgba(255,152,0,1)',\r\n                        'rgba(255,87,34,1)',\r\n                        'rgba(244,67,54,1)',\r\n                        'rgba(233,30,99,1)',\r\n                        'rgba(156,39,176,1)',\r\n                        'rgba(103,58,183,1)',\r\n                        'rgba(63,81,181,1)',\r\n                        'rgba(96,125,139,1)',\r\n                        'rgba(121,85,72,1)',\r\n                      ]\r\n                    : field.chartType == 'Line chart' || field.chartType == 'Area chart'\r\n                    ? 'rgba(0,120,215 ,1 )'\r\n                    : [\r\n                        'rgba(0,120,215 ,1 )',\r\n                        'rgba(0,120,215 ,1 )',\r\n                        'rgba(0,120,215 ,1 )',\r\n                        'rgba(0,120,215 ,1 )',\r\n                        'rgba(0,120,215 ,1 )',\r\n                        'rgba(0,120,215 ,1 )',\r\n                        'rgba(0,120,215 ,1 )',\r\n                        'rgba(0,120,215 ,1 )',\r\n                        'rgba(0,120,215 ,1 )',\r\n                        'rgba(0,120,215 ,1 )',\r\n                        'rgba(0,120,215 ,1 )',\r\n                        'rgba(0,120,215 ,1 )',\r\n                      ];\r\n\r\n                const colors3 =\r\n                  field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart'\r\n                    ? [\r\n                        'rgba(205,220,57,1)',\r\n                        'rgba(255,235,59,1)',\r\n                        'rgba(255,193,7,1)',\r\n                        'rgba(255,152,0,1)',\r\n                        'rgba(255,87,34,1)',\r\n                        'rgba(244,67,54,1)',\r\n                        'rgba(233,30,99,1)',\r\n                        'rgba(156,39,176,1)',\r\n                        'rgba(103,58,183,1)',\r\n                        'rgba(63,81,181,1)',\r\n                        'rgba(96,125,139,1)',\r\n                        'rgba(121,85,72,1)',\r\n                      ]\r\n                    : field.chartType == 'Line chart' || field.chartType == 'Area chart'\r\n                    ? 'rgba(231,72,86 ,1 )'\r\n                    : [\r\n                        'rgba(231,72,86 ,1 )',\r\n                        'rgba(231,72,86 ,1 )',\r\n                        'rgba(231,72,86 ,1 )',\r\n                        'rgba(231,72,86 ,1 )',\r\n                        'rgba(231,72,86 ,1 )',\r\n                        'rgba(231,72,86 ,1 )',\r\n                        'rgba(231,72,86 ,1 )',\r\n                        'rgba(231,72,86 ,1 )',\r\n                        'rgba(231,72,86 ,1 )',\r\n                        'rgba(231,72,86 ,1 )',\r\n                        'rgba(231,72,86 ,1 )',\r\n                        'rgba(231,72,86 ,1 )',\r\n                      ];\r\n\r\n                const colors4 =\r\n                  field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart'\r\n                    ? [\r\n                        'rgba(205,220,57,1)',\r\n                        'rgba(255,235,59,1)',\r\n                        'rgba(255,193,7,1)',\r\n                        'rgba(255,152,0,1)',\r\n                        'rgba(255,87,34,1)',\r\n                        'rgba(244,67,54,1)',\r\n                        'rgba(233,30,99,1)',\r\n                        'rgba(156,39,176,1)',\r\n                        'rgba(103,58,183,1)',\r\n                        'rgba(63,81,181,1)',\r\n                        'rgba(96,125,139,1)',\r\n                        'rgba(121,85,72,1)',\r\n                      ]\r\n                    : field.chartType == 'Line chart' || field.chartType == 'Area chart'\r\n                    ? 'rgba(126,115,95 ,1 )'\r\n                    : [\r\n                        'rgba(126,115,95 ,1 )',\r\n                        'rgba(126,115,95 ,1 )',\r\n                        'rgba(126,115,95 ,1 )',\r\n                        'rgba(126,115,95 ,1 )',\r\n                        'rgba(126,115,95 ,1 )',\r\n                        'rgba(126,115,95 ,1 )',\r\n                        'rgba(126,115,95 ,1 )',\r\n                        'rgba(126,115,95 ,1 )',\r\n                        'rgba(126,115,95 ,1 )',\r\n                        'rgba(126,115,95 ,1 )',\r\n                        'rgba(126,115,95 ,1 )',\r\n                        'rgba(126,115,95 ,1 )',\r\n                      ];\r\n\r\n                const colors5 =\r\n                  field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart'\r\n                    ? [\r\n                        'rgba(205,220,57,1)',\r\n                        'rgba(255,235,59,1)',\r\n                        'rgba(255,193,7,1)',\r\n                        'rgba(255,152,0,1)',\r\n                        'rgba(255,87,34,1)',\r\n                        'rgba(244,67,54,1)',\r\n                        'rgba(233,30,99,1)',\r\n                        'rgba(156,39,176,1)',\r\n                        'rgba(103,58,183,1)',\r\n                        'rgba(63,81,181,1)',\r\n                        'rgba(96,125,139,1)',\r\n                        'rgba(121,85,72,1)',\r\n                      ]\r\n                    : field.chartType == 'Line chart' || field.chartType == 'Area chart'\r\n                    ? 'rgba(177,70,194 ,1 )'\r\n                    : [\r\n                        'rgba(177,70,194 ,1 )',\r\n                        'rgba(177,70,194 ,1 )',\r\n                        'rgba(177,70,194 ,1 )',\r\n                        'rgba(177,70,194 ,1 )',\r\n                        'rgba(177,70,194 ,1 )',\r\n                        'rgba(177,70,194 ,1 )',\r\n                        'rgba(177,70,194 ,1 )',\r\n                        'rgba(177,70,194 ,1 )',\r\n                        'rgba(177,70,194 ,1 )',\r\n                        'rgba(177,70,194 ,1 )',\r\n                        'rgba(177,70,194 ,1 )',\r\n                        'rgba(177,70,194 ,1 )',\r\n                      ];\r\n\r\n                const data = {\r\n                  labels: field.labels && [\r\n                    ...field.labels.map((label) => {\r\n                      if (label !== '') {\r\n                        return label;\r\n                      } else {\r\n                        return '';\r\n                      }\r\n                    }),\r\n                  ],\r\n                  datasets: [\r\n                    // Dataset1\r\n                    {\r\n                      label: field.dataset1Label && field.dataset1Label,\r\n                      data:\r\n                        field.dataset1 &&\r\n                        field.dataset1.map((data) => {\r\n                          if (data !== '') {\r\n                            return data;\r\n                          }\r\n                        }),\r\n                      backgroundColor: colors,\r\n                      borderWidth:\r\n                        field.chartType == 'Area chart' ? 0 : field.chartType == 'Pie chart' || (field.chartType == 'Doughnut chart' && 2),\r\n                    },\r\n                    // Dataset2\r\n                    {\r\n                      label: field.dataset2Label && field.dataset2Label,\r\n                      data:\r\n                        field.dataset2 &&\r\n                        field.dataset2.map((data) => {\r\n                          if (data !== '') {\r\n                            return data;\r\n                          }\r\n                        }),\r\n                      backgroundColor: colors1,\r\n                      borderWidth:\r\n                        field.chartType == 'Area chart' ? 0 : field.chartType == 'Pie chart' || (field.chartType == 'Doughnut chart' && 2),\r\n                    },\r\n                    // Dataset3\r\n                    {\r\n                      label: field.dataset3Label && field.dataset3Label,\r\n                      data:\r\n                        field.dataset3 &&\r\n                        field.dataset3.map((data) => {\r\n                          if (data !== '') {\r\n                            return data;\r\n                          }\r\n                        }),\r\n                      backgroundColor: colors2,\r\n                      borderWidth:\r\n                        field.chartType == 'Area chart' ? 0 : field.chartType == 'Pie chart' || (field.chartType == 'Doughnut chart' && 2),\r\n                    },\r\n                    // Dataset4\r\n                    {\r\n                      label: field.dataset4Label && field.dataset4Label,\r\n                      data:\r\n                        field.dataset4 &&\r\n                        field.dataset4.map((data) => {\r\n                          if (data !== '') {\r\n                            return data;\r\n                          }\r\n                        }),\r\n                      backgroundColor: colors3,\r\n                      borderWidth:\r\n                        field.chartType == 'Area chart' ? 0 : field.chartType == 'Pie chart' || (field.chartType == 'Doughnut chart' && 2),\r\n                    },\r\n                    // Dataset5\r\n                    {\r\n                      label: field.dataset5Label && field.dataset5Label,\r\n                      data:\r\n                        field.dataset5 &&\r\n                        field.dataset5.map((data) => {\r\n                          if (data !== '') {\r\n                            return data;\r\n                          }\r\n                        }),\r\n                      backgroundColor: colors4,\r\n                      borderWidth:\r\n                        field.chartType == 'Area chart' ? 0 : field.chartType == 'Pie chart' || (field.chartType == 'Doughnut chart' && 2),\r\n                    },\r\n                    // Dataset6\r\n                    {\r\n                      label: field.dataset6Label && field.dataset6Label,\r\n                      data:\r\n                        field.dataset6 &&\r\n                        field.dataset6.map((data) => {\r\n                          if (data !== '') {\r\n                            return data;\r\n                          }\r\n                        }),\r\n                      backgroundColor: colors5,\r\n                      borderWidth:\r\n                        field.chartType == 'Area chart' ? 0 : field.chartType == 'Pie chart' || (field.chartType == 'Doughnut chart' && 2),\r\n                    },\r\n                  ],\r\n                };\r\n\r\n                const datas = data.datasets.map((dataset) => {\r\n                  console.log(dataset.data[0]);\r\n                  const test1 = dataset.data.map((datases) => {\r\n                    if (datases !== undefined) {\r\n                      return datases;\r\n                    } else {\r\n                      return '';\r\n                    }\r\n                  });\r\n                  const test = test1.map((datarer, index) => {\r\n                    if (data.labels[index] !== '') {\r\n                      return datarer;\r\n                    }\r\n                  });\r\n                  const test2 = test.filter((obj) => obj !== undefined);\r\n                  return test2;\r\n                });\r\n\r\n                const fill = field.chartType == 'Line chart' ? false : undefined;\r\n\r\n                const newDatasets = [\r\n                  {\r\n                    label: data.datasets[0].label,\r\n                    data: datas[0],\r\n                    backgroundColor: data.datasets[0].backgroundColor,\r\n                    borderColor: field.chartType == 'Line chart' ? 'rgba(255,185,0 ,1 )' : 'rgb(255, 255, 255)',\r\n                    borderWidth: data.datasets[0].borderWidth,\r\n                    fill: fill,\r\n                  },\r\n                  {\r\n                    label: data.datasets[1].label,\r\n                    data: datas[1],\r\n                    backgroundColor: data.datasets[1].backgroundColor,\r\n                    borderColor: field.chartType == 'Line chart' ? 'rgba(0,204,106 ,1 )' : 'rgb(255, 255, 255)',\r\n                    borderWidth: data.datasets[1].borderWidth,\r\n                    fill: fill,\r\n                  },\r\n                  {\r\n                    label: data.datasets[2].label,\r\n                    data: datas[2],\r\n                    backgroundColor: data.datasets[2].backgroundColor,\r\n                    borderColor: field.chartType == 'Line chart' ? 'rgba(0,120,215 ,1 )' : 'rgb(255, 255, 255)',\r\n                    borderWidth: data.datasets[2].borderWidth,\r\n                    fill: fill,\r\n                  },\r\n                  {\r\n                    label: data.datasets[3].label,\r\n                    data: datas[3],\r\n                    backgroundColor: data.datasets[3].backgroundColor,\r\n                    borderColor: field.chartType == 'Line chart' ? 'rgba(231,72,86 ,1 )' : 'rgb(255, 255, 255)',\r\n                    borderWidth: data.datasets[3].borderWidth,\r\n                    fill: fill,\r\n                  },\r\n                  {\r\n                    label: data.datasets[4].label,\r\n                    data: datas[4],\r\n                    backgroundColor: data.datasets[4].backgroundColor,\r\n                    borderColor: field.chartType == 'Line chart' ? 'rgba(126,115,95 ,1 )' : 'rgb(255, 255, 255)',\r\n                    borderWidth: data.datasets[4].borderWidth,\r\n                    fill: fill,\r\n                  },\r\n                  {\r\n                    label: data.datasets[5].label,\r\n                    data: datas[5],\r\n                    backgroundColor: data.datasets[5].backgroundColor,\r\n                    borderColor: field.chartType == 'Line chart' ? 'rgba(177,70,194 ,1 )' : 'rgb(255, 255, 255)',\r\n                    borderWidth: data.datasets[5].borderWidth,\r\n                    fill: fill,\r\n                  },\r\n                ];\r\n\r\n                const chartType = [\r\n                  field.chartType == 'Bar chart' ? 'bar' : '',\r\n                  field.chartType == 'Reverse chart' ? 'horizontalBar' : '',\r\n                  field.chartType == 'Line chart' ? 'line' : '',\r\n                  field.chartType == 'Pie chart' ? 'pie' : '',\r\n                  field.chartType == 'Doughnut chart' ? 'doughnut' : '',\r\n                  field.chartType == 'Area chart' ? 'line' : '',\r\n                ];\r\n\r\n                const toSaveChart = new ChartJsImage();\r\n                toSaveChart.setConfig({\r\n                  type: chartType.filter((type) => type !== ''),\r\n                  data: {\r\n                    labels: data.labels.filter((label) => label !== ''),\r\n                    datasets: newDatasets.filter((dataset) => dataset.label !== ''),\r\n                  },\r\n                  options: {\r\n                    responsive: true,\r\n                    legend: {\r\n                      position: 'bottom',\r\n                    },\r\n                    // defaultFontFamily: (Chart.defaults.global.defaultFontFamily = 'Comfortaa'),\r\n                    scales: {\r\n                      yAxes: [\r\n                        {\r\n                          stacked: field.stacked == true ? true : false,\r\n                          ticks: {\r\n                            beginAtZero: true,\r\n                          },\r\n                        },\r\n                      ],\r\n                      xAxes: [\r\n                        {\r\n                          stacked: field.stacked == true ? true : false,\r\n                          ticks: {\r\n                            beginAtZero: true,\r\n                          },\r\n                        },\r\n                      ],\r\n                    },\r\n                  },\r\n                });\r\n\r\n                toSaveChart.setFormat('png').setDevicePixelRatio(2.0);\r\n                const imageUrl = toSaveChart.toDataUrl();\r\n                imageUrl.then((image) => {\r\n                  console.log(image);\r\n                  imagesArray.push({ imageUrl: image, imageIndex: field.index });\r\n                  console.log(imagesArray);\r\n                  setImagesUrl(imagesArray);\r\n                });\r\n              }\r\n            });\r\n          });\r\n        });\r\n    }\r\n  }, [projectId]);\r\n\r\n  pdfMake.vfs = pdfFonts.pdfMake.vfs;\r\n\r\n  const onDocumentSave1 = () => {\r\n    // Deleting commas between the array elements\r\n    console.log(sections);\r\n    const pdfContent = htmlToPdfmake(\r\n      // `<div><p style='color: #6C63FF'>Hello from pdf document1<br />${helper ? '<p>Hello from helper</p>' : ''}</p></div>`\r\n      `<div>\r\n          <div>\r\n            <h2 style='text-align: center; color: green'>First page</h2>\r\n            <p class='red'>Some more random text below...</p>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <p style='text-align: center'>Some more random text below...</p>\r\n            <div class='test'></div>\r\n            <p>normal</p><p style='text-align: center'>center</p><p class=\"ql-align-right\">right</p><p class=\"ql-align-justify\">justify</p>\r\n          </div>\r\n          <div>${sections\r\n            .map((section) => {\r\n              return `<h2 class='pdf-pagebreak-before' style='margin-bottom: 50px'>${section.title}</h2>\r\n              ${section.fields\r\n                .map((field) => {\r\n                  console.log(field.type);\r\n                  if (field.type == 'header') {\r\n                    return `<h5>${field.title}</h5>`;\r\n                  }\r\n                  if (field.type == 'text') {\r\n                    console.log(field.body.includes('ql-align-center'));\r\n                    if (field.body.includes('ql-align-center')) {\r\n                      const newFieldBody = field.body.replace('class=\"ql-align-center\"', \"style='text-align: center'\");\r\n                      return `<div>${newFieldBody}</div>`;\r\n                    }\r\n                    if (field.body.includes('ql-align-right')) {\r\n                      const newFieldBody = field.body.replace('class=\"ql-align-right\"', \"style='text-align: right'\");\r\n                      return `<div>${newFieldBody}</div>`;\r\n                    }\r\n                    if (field.body.includes('ql-align-justify')) {\r\n                      const newFieldBody = field.body.replace('class=\"ql-align-justify\"', \"style='text-align: justify'\");\r\n                      return `<div>${newFieldBody}</div>`;\r\n                    }\r\n                    return `<div>${field.body}</div>`;\r\n                  }\r\n                  if (field.type == 'chart') {\r\n                    const imagesData =\r\n                      imagesUrl &&\r\n                      imagesUrl\r\n                        .map((image) => {\r\n                          console.log('Images url --> ', imagesUrl);\r\n                          console.log('Field --> ', field);\r\n                          if (image.imageIndex == field.index) {\r\n                            return `<img src='${image.imageUrl}' width=\"768\" style='margin-top: 30px; margin-bottom: 30px;' />`;\r\n                          }\r\n                        })\r\n                        .join('');\r\n                    return imagesData;\r\n                  }\r\n                  if (field.type == 'spacing') {\r\n                    return `<br />`;\r\n                  }\r\n                  if (field.type == 'table') {\r\n                    console.log('Table --> ', field);\r\n                    return `<table style=\"margin-top: 30px; margin-bottom: 30px;\">\r\n                      <thead>\r\n                          <tr>\r\n                              ${field.headRows\r\n                                .map(\r\n                                  (row, headRowIndex) =>\r\n                                    `<th class=\"thstyle\" style=\"background-color: #6C63FF; margin-top: 8px; margin-bottom: 8px; margin-left: 10px; margin-right: 10px; color: #FCFEFE;\">${row}</th>`\r\n                                )\r\n                                .join('')}\r\n                          </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        ${field.rows\r\n                          .map(\r\n                            (row, rowIndex) =>\r\n                              `<tr\">${row.row\r\n                                .map(\r\n                                  (rowData, rowDataIndex) =>\r\n                                    `<td style=\"margin-top: 8px; margin-bottom: 8px; margin-left: 10px; margin-right: 10px; color: #0a1230;\">${rowData}</td>`\r\n                                )\r\n                                .join('')}</tr>`\r\n                          )\r\n                          .join('')}\r\n                    </tbody>\r\n                    </table>`;\r\n                  }\r\n                })\r\n                .join('')}\r\n              `;\r\n            })\r\n            .join('')}</div>\r\n      </div>`,\r\n      { defaultStyles: { p: '' } },\r\n      { tableAutoSize: true }\r\n    );\r\n    const pdfDocument = {\r\n      content: pdfContent,\r\n      styles: {\r\n        red: {\r\n          // font: 'Comfortaa',\r\n          color: 'red',\r\n          marginLeft: 200,\r\n        },\r\n        // Insert\r\n        'html-p': {\r\n          marginBottom: 15,\r\n        },\r\n        'ql-indent-1': {\r\n          marginLeft: 15,\r\n        },\r\n        'ql-indent-2': {\r\n          marginLeft: 30,\r\n        },\r\n        'ql-indent-3': {\r\n          marginLeft: 45,\r\n        },\r\n        'ql-indent-4': {\r\n          marginLeft: 60,\r\n        },\r\n        'ql-indent-5': {\r\n          marginLeft: 75,\r\n        },\r\n        'ql-indent-6': {\r\n          marginLeft: 90,\r\n        },\r\n        'ql-indent-7': {\r\n          marginLeft: 105,\r\n        },\r\n        'ql-indent-8': {\r\n          marginLeft: 120,\r\n        },\r\n        'html-table': {\r\n          'border-radius': '25px',\r\n          'margin-top': '30px',\r\n          'margin-bottom': '30px',\r\n        },\r\n      },\r\n      pageBreakBefore: function (currentNode) {\r\n        return currentNode.style && currentNode.style.indexOf('pdf-pagebreak-before') > -1;\r\n      },\r\n    };\r\n    const pdfDocGenerator = pdfMake.createPdf(pdfDocument);\r\n    pdfDocGenerator.download(`${Router.query.project}/business-plan.pdf`);\r\n  };\r\n\r\n  const saveContainer = useRef();\r\n\r\n  const dropdownButton = useRef();\r\n  const dropdownContainer = useRef();\r\n  const [dropdownButtonColorHelper, setDropdownButtonColorHelper] = useState(false);\r\n  const [dropdownContainerHelper, setDropdownContainerHelper] = useState(false);\r\n  const onSaveDropdownShow = () => {\r\n    if (!dropdownContainerHelper) {\r\n      gsap.to(dropdownContainer.current, { autoAlpha: 1, duration: 1, ease: Linear });\r\n      // gsap.to(dropdownButton.current, { backgroundColor: '#6C63FF', color: '#f8f9fb', duration: 1, ease: Linear });\r\n      setDropdownContainerHelper(true);\r\n      setDropdownButtonColorHelper(true);\r\n    } else if (dropdownContainerHelper) {\r\n      gsap.to(dropdownContainer.current, { autoAlpha: 0, duration: 1, ease: Linear });\r\n      // gsap.to(dropdownButton.current, { backgroundColor: '#f8f9fb', color: '#6C63FF', duration: 1, ease: Linear });\r\n      setDropdownContainerHelper(false);\r\n      setDropdownButtonColorHelper(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div ref={saveContainer} className=\"relative flex justify-start\">\r\n      <div className=\"relative w-full flex justify-end items-center\">\r\n        <button\r\n          ref={dropdownButton}\r\n          onClick={onSaveDropdownShow}\r\n          className={`hover:bg-primary hover:text-white dark:hover:bg-primarydark dark:hover:text-background focus:outline-none border border-primary text-primary text-sm screenLarge:text-base font-light py-2 px-8 rounded-2xl mt-2 dark:text-primarydark dark:border-primarydark ${\r\n            dropdownButtonColorHelper ? 'bg-primary text-background dark:bg-primarydark dark:text-background' : ''\r\n          }`}\r\n        >\r\n          Save my work\r\n        </button>\r\n        <div ref={dropdownContainer} className=\"absolute bg-white rounded-2xl shadow-xl p-6 top-14 z-50 invisible opacity-0\">\r\n          <div className=\"flex items-center justify-start\">\r\n            <img src=\"/mobile-navbar/success.svg\" height={26} width={26} />\r\n            <p className=\"text-lg ml-2\">Show the world your work!</p>\r\n          </div>\r\n          <div className=\"px-6 py-4 bg-background rounded-2xl mt-2 pr-6\">\r\n            <div>\r\n              <p className=\"flex\">Save as PDF:</p>\r\n              <img onClick={onDocumentSave1} src=\"/mobile-navbar/pdf.svg\" height={30} width={30} className=\"mt-2 cursor-pointer\" />\r\n            </div>\r\n            <div className=\"w-full justify-start items-center mt-4\">\r\n              <p>Share your competitors analysis with this public link:</p>\r\n              <div className=\"w-full flex mt-2\">\r\n                <input value=\"www.project.com\" className=\"bg-linkBackground text-sm px-2 py-1 dark:text-primarydark\" />\r\n                <img src=\"/mobile-navbar/foreign.svg\" height={28} width={28} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PDFDocument;\r\n"]},"metadata":{},"sourceType":"module"}