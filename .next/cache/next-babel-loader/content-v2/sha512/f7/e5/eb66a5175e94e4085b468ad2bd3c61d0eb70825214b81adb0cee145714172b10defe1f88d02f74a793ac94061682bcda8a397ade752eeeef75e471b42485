{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport gsap, { Power4 } from 'gsap';\nimport Tippy from '@tippyjs/react';\nimport Image from 'next/image';\n\nconst TippyGuide = ({\n  contentClass,\n  contentText,\n  market,\n  model,\n  success,\n  tippyMonster,\n  setTippyMonster,\n  setCurrentTippy,\n  emptyInput,\n  angry\n}) => {\n  const {\n    0: visible,\n    1: setVisible\n  } = useState(false);\n  const contentRef = useRef(null);\n  const tippyRef = useRef();\n  const suggestionIcon = useRef();\n  const tippyder = useRef(); // const [emptyInput, setEmptyInput] = useState(false);\n\n  const show = () => {\n    gsap.fromTo(tippyRef.current, {\n      autoAlpha: 0,\n      scale: 0\n    }, {\n      autoAlpha: 1,\n      scale: 1,\n      duration: 1,\n      ease: Power4.easeOut\n    });\n    setVisible(true); // emptyInput && setCurrentTippy(true); // current tippy jest częścią obsługi problemu, kiedy mamy otwartego tooltipa normalnego i wciskamy, żeby wyświetlić czerwonego\n  };\n\n  const hide = async () => {\n    await gsap.to(tippyRef.current, {\n      autoAlpha: 0,\n      scale: 0,\n      duration: 1,\n      ease: Power4.easeIn\n    }); // emptyInput && setTippyMonster(false);\n\n    setVisible(false); // emptyInput && setCurrentTippy(false);\n  };\n\n  const onImageClick = () => {\n    visible ? hide() : show();\n  };\n\n  useEffect(() => {\n    tippyder.current.classList.remove('data-placement'); // suggestionIcon.current.addEventListener('mouseenter', () => (visible ? hide() : show()));\n    // suggestionIcon.current.addEventListener('mouseleave', () => (!visible ? hide() : show()));\n    // GSAP\n    // gsap.fromTo(\n    //   contentRef.current,\n    //   { autoAlpha: 0 },\n    //   { autoAlpha: 1, duration: 2, ease: Power4.easeOut }\n    // );\n    // TIPPY\n    // setVisible(true);\n    // emptyInput && setCurrentTippy(true);\n  }, []);\n  console.log('tm - ', tippyMonster);\n  console.log('visible - ', visible);\n  return /*#__PURE__*/_jsx(Tippy, {\n    ref: tippyder // trigger={tippyMonster}\n    ,\n    sticky: false,\n    zIndex: 20,\n    touch: true,\n    visible: visible,\n    onClickOutside: hide,\n    placement: \"left-end\" // offset={[-200, -35]}\n    ,\n    interactive: true,\n    content: /*#__PURE__*/_jsx(\"div\", {\n      ref: tippyRef,\n      className: contentClass,\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        style: {\n          whiteSpace: 'pre-line'\n        },\n        className: \"text-primarydark p-4 text-sm text-white\",\n        children: [angry ? /*#__PURE__*/_jsx(\"img\", {\n          src: \"/emojis/angersymbol.svg\",\n          height: 22,\n          width: 22,\n          className: \"inline-block relative bottom-0.5\"\n        }) : /*#__PURE__*/_jsx(\"img\", {\n          src: \"/emojis/test.svg\",\n          height: 22,\n          width: 22,\n          className: \"inline-block\"\n        }), contentText]\n      })\n    }),\n    children: /*#__PURE__*/_jsx(\"img\", {\n      ref: suggestionIcon,\n      id: \"suggestionIcon\",\n      className: \"relative cursor-pointer\",\n      src: \"/guide/lamp2.svg\",\n      height: 40,\n      width: 40,\n      onClick: onImageClick\n    })\n  });\n};\n\nexport default TippyGuide;","map":null,"metadata":{},"sourceType":"module"}