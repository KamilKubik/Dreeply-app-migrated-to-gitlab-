{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\off-saas\\\\components\\\\dashboard\\\\startup\\\\project\\\\business-plan\\\\DisplayedData.js\";\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { db } from '../../../../../lib/firebase';\nimport { useAuth } from '../../../../../lib/newAuth';\nimport InputElement from './InputElement';\n\nconst DisplayedData = ({\n  setDataFromInput,\n  activeSection\n}) => {\n  const {\n    0: sections1,\n    1: setSections1\n  } = useState();\n  const {\n    currentUser\n  } = useAuth();\n  const ref = db.collection('currentBusinessPlan');\n  useEffect(() => {\n    ref.doc(currentUser.uid).collection('data').where('name', '==', activeSection).onSnapshot(querySnapshot => {\n      const items = [];\n      querySnapshot.forEach(doc => {\n        console.log(doc.data()); // items.push(...doc.data().sections);\n\n        setSections1(doc.data());\n      }); // setSections1(items);\n    });\n  }, []);\n  console.log('DISPLAED DATA --> ', sections1);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: sections1 ? sections1.sections[0] ? sections1.sections.map(section => {\n      console.log(section); // return (\n      //   <div>\n      //     <p>Sections below:</p>\n      //     {section.blocks.map((block) => {\n      //       return (\n      //         <div>\n      //           <p>{block.data.text}</p>\n      //         </div>\n      //       );\n      //     })}\n      //   </div>\n      // );\n    }) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Sections exists but it is empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No sections\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n};\n\nexport default DisplayedData;","map":{"version":3,"sources":["C:/off-saas/components/dashboard/startup/project/business-plan/DisplayedData.js"],"names":["React","useEffect","useMemo","useState","db","useAuth","InputElement","DisplayedData","setDataFromInput","activeSection","sections1","setSections1","currentUser","ref","collection","doc","uid","where","onSnapshot","querySnapshot","items","forEach","console","log","data","sections","map","section"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,OAA3B,EAAoCC,QAApC,QAAoD,OAApD;AACA,SAASC,EAAT,QAAmB,6BAAnB;AACA,SAASC,OAAT,QAAwB,4BAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,gBAAF;AAAoBC,EAAAA;AAApB,CAAD,KAAyC;AAC7D,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BR,QAAQ,EAA1C;AAEA,QAAM;AAAES,IAAAA;AAAF,MAAkBP,OAAO,EAA/B;AAEA,QAAMQ,GAAG,GAAGT,EAAE,CAACU,UAAH,CAAc,qBAAd,CAAZ;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,GAAG,CACAE,GADH,CACOH,WAAW,CAACI,GADnB,EAEGF,UAFH,CAEc,MAFd,EAGGG,KAHH,CAGS,MAHT,EAGiB,IAHjB,EAGuBR,aAHvB,EAIGS,UAJH,CAIeC,aAAD,IAAmB;AAC7B,YAAMC,KAAK,GAAG,EAAd;AACAD,MAAAA,aAAa,CAACE,OAAd,CAAuBN,GAAD,IAAS;AAC7BO,QAAAA,OAAO,CAACC,GAAR,CAAYR,GAAG,CAACS,IAAJ,EAAZ,EAD6B,CAE7B;;AACAb,QAAAA,YAAY,CAACI,GAAG,CAACS,IAAJ,EAAD,CAAZ;AACD,OAJD,EAF6B,CAO7B;AACD,KAZH;AAaH,GAdQ,EAcN,EAdM,CAAT;AAgBAF,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCb,SAAlC;AAEA,sBACI;AAAA,cACGA,SAAS,GACRA,SAAS,CAACe,QAAV,CAAmB,CAAnB,IACEf,SAAS,CAACe,QAAV,CAAmBC,GAAnB,CAAwBC,OAAD,IAAa;AAClCL,MAAAA,OAAO,CAACC,GAAR,CAAYI,OAAZ,EADkC,CAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,KAdD,CADF,gBAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBM,gBAqBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAtBJ,mBADJ;AA2BD,CApDD;;AAsDA,eAAepB,aAAf","sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\r\nimport { db } from '../../../../../lib/firebase';\r\nimport { useAuth } from '../../../../../lib/newAuth';\r\nimport InputElement from './InputElement';\r\n\r\nconst DisplayedData = ({ setDataFromInput, activeSection }) => {\r\n  const [sections1, setSections1] = useState();\r\n\r\n  const { currentUser } = useAuth();\r\n\r\n  const ref = db.collection('currentBusinessPlan');\r\n\r\n  useEffect(() => {\r\n      ref\r\n        .doc(currentUser.uid)\r\n        .collection('data')\r\n        .where('name', '==', activeSection)\r\n        .onSnapshot((querySnapshot) => {\r\n          const items = [];\r\n          querySnapshot.forEach((doc) => {\r\n            console.log(doc.data());\r\n            // items.push(...doc.data().sections);\r\n            setSections1(doc.data());\r\n          });\r\n          // setSections1(items);\r\n        });\r\n  }, []);\r\n\r\n  console.log('DISPLAED DATA --> ', sections1);\r\n\r\n  return (\r\n      <>\r\n        {sections1 ? (\r\n          sections1.sections[0] ? (\r\n            sections1.sections.map((section) => {\r\n              console.log(section);\r\n              // return (\r\n              //   <div>\r\n              //     <p>Sections below:</p>\r\n              //     {section.blocks.map((block) => {\r\n              //       return (\r\n              //         <div>\r\n              //           <p>{block.data.text}</p>\r\n              //         </div>\r\n              //       );\r\n              //     })}\r\n              //   </div>\r\n              // );\r\n            })\r\n          ) : (\r\n            <div>Sections exists but it is empty</div>\r\n          )\r\n        ) : (\r\n          <div>No sections</div>\r\n        )}\r\n      </>\r\n  );\r\n};\r\n\r\nexport default DisplayedData;\r\n"]},"metadata":{},"sourceType":"module"}