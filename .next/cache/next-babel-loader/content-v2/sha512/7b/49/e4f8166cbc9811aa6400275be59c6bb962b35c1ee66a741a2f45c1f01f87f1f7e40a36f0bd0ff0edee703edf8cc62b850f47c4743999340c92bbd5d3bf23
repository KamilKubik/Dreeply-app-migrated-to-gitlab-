{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\off-saas\\\\components\\\\dashboard\\\\startup\\\\project\\\\business-app\\\\business-plan\\\\unique\\\\UniqueChart.js\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport ChartJsImage from 'chartjs-to-image';\n\nconst ChartJsComponent = ({\n  field\n}) => {\n  const chartRef = useRef();\n  const toSaveChart = new ChartJsImage();\n  toSaveChart.setConfig({\n    type: 'bar',\n    data: data,\n    options: {\n      responsive: false,\n      scales: {\n        y: {\n          beginAtZero: true\n        }\n      }\n    }\n  });\n  const {\n    0: imageUrl,\n    1: setImageUrl\n  } = useState();\n  useEffect(async () => {\n    setImageUrl(await toSaveChart.toDataUrl());\n  }, []);\n  const colors = field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' ? ['rgba(205,220,57,1)', 'rgba(255,235,59,1)', 'rgba(255,193,7,1)', 'rgba(255,152,0,1)', 'rgba(255,87,34,1)', 'rgba(244,67,54,1)', 'rgba(233,30,99,1)', 'rgba(156,39,176,1)', 'rgba(103,58,183,1)', 'rgba(63,81,181,1)', 'rgba(96,125,139,1)', 'rgba(121,85,72,1)'] : field.chartType == 'Line chart' || field.chartType == 'Area chart' ? 'rgba(255,185,0 ,1 )' : ['rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )', 'rgba(255,185,0 ,1 )'];\n  const colors1 = field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' ? ['rgba(205,220,57,1)', 'rgba(255,235,59,1)', 'rgba(255,193,7,1)', 'rgba(255,152,0,1)', 'rgba(255,87,34,1)', 'rgba(244,67,54,1)', 'rgba(233,30,99,1)', 'rgba(156,39,176,1)', 'rgba(103,58,183,1)', 'rgba(63,81,181,1)', 'rgba(96,125,139,1)', 'rgba(121,85,72,1)'] : field.chartType == 'Line chart' || field.chartType == 'Area chart' ? 'rgba(0,204,106 ,1 )' : ['rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )', 'rgba(0,204,106 ,1 )'];\n  const colors2 = field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' ? ['rgba(205,220,57,1)', 'rgba(255,235,59,1)', 'rgba(255,193,7,1)', 'rgba(255,152,0,1)', 'rgba(255,87,34,1)', 'rgba(244,67,54,1)', 'rgba(233,30,99,1)', 'rgba(156,39,176,1)', 'rgba(103,58,183,1)', 'rgba(63,81,181,1)', 'rgba(96,125,139,1)', 'rgba(121,85,72,1)'] : field.chartType == 'Line chart' || field.chartType == 'Area chart' ? 'rgba(0,120,215 ,1 )' : ['rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )', 'rgba(0,120,215 ,1 )'];\n  const colors3 = field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' ? ['rgba(205,220,57,1)', 'rgba(255,235,59,1)', 'rgba(255,193,7,1)', 'rgba(255,152,0,1)', 'rgba(255,87,34,1)', 'rgba(244,67,54,1)', 'rgba(233,30,99,1)', 'rgba(156,39,176,1)', 'rgba(103,58,183,1)', 'rgba(63,81,181,1)', 'rgba(96,125,139,1)', 'rgba(121,85,72,1)'] : field.chartType == 'Line chart' || field.chartType == 'Area chart' ? 'rgba(231,72,86 ,1 )' : ['rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )', 'rgba(231,72,86 ,1 )'];\n  const colors4 = field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' ? ['rgba(205,220,57,1)', 'rgba(255,235,59,1)', 'rgba(255,193,7,1)', 'rgba(255,152,0,1)', 'rgba(255,87,34,1)', 'rgba(244,67,54,1)', 'rgba(233,30,99,1)', 'rgba(156,39,176,1)', 'rgba(103,58,183,1)', 'rgba(63,81,181,1)', 'rgba(96,125,139,1)', 'rgba(121,85,72,1)'] : field.chartType == 'Line chart' || field.chartType == 'Area chart' ? 'rgba(126,115,95 ,1 )' : ['rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )', 'rgba(126,115,95 ,1 )'];\n  const colors5 = field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' ? ['rgba(205,220,57,1)', 'rgba(255,235,59,1)', 'rgba(255,193,7,1)', 'rgba(255,152,0,1)', 'rgba(255,87,34,1)', 'rgba(244,67,54,1)', 'rgba(233,30,99,1)', 'rgba(156,39,176,1)', 'rgba(103,58,183,1)', 'rgba(63,81,181,1)', 'rgba(96,125,139,1)', 'rgba(121,85,72,1)'] : field.chartType == 'Line chart' || field.chartType == 'Area chart' ? 'rgba(177,70,194 ,1 )' : ['rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )', 'rgba(177,70,194 ,1 )'];\n  const data = {\n    labels: field.labels && [...field.labels.map(label => {\n      if (label !== '') {\n        return label;\n      } else {\n        return '';\n      }\n    })],\n    datasets: [// Dataset1\n    {\n      label: field.dataset1Label && field.dataset1Label,\n      data: field.dataset1 && field.dataset1.map(data => {\n        if (data !== '') {\n          return data;\n        }\n      }),\n      backgroundColor: colors,\n      borderWidth: field.chartType == 'Area chart' ? 0 : field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' && 2\n    }, // Dataset2\n    {\n      label: field.dataset2Label && field.dataset2Label,\n      data: field.dataset2 && field.dataset2.map(data => {\n        if (data !== '') {\n          return data;\n        }\n      }),\n      backgroundColor: colors1,\n      borderWidth: field.chartType == 'Area chart' ? 0 : field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' && 2\n    }, // Dataset3\n    {\n      label: field.dataset3Label && field.dataset3Label,\n      data: field.dataset3 && field.dataset3.map(data => {\n        if (data !== '') {\n          return data;\n        }\n      }),\n      backgroundColor: colors2,\n      borderWidth: field.chartType == 'Area chart' ? 0 : field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' && 2\n    }, // Dataset4\n    {\n      label: field.dataset4Label && field.dataset4Label,\n      data: field.dataset4 && field.dataset4.map(data => {\n        if (data !== '') {\n          return data;\n        }\n      }),\n      backgroundColor: colors3,\n      borderWidth: field.chartType == 'Area chart' ? 0 : field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' && 2\n    }, // Dataset5\n    {\n      label: field.dataset5Label && field.dataset5Label,\n      data: field.dataset5 && field.dataset5.map(data => {\n        if (data !== '') {\n          return data;\n        }\n      }),\n      backgroundColor: colors4,\n      borderWidth: field.chartType == 'Area chart' ? 0 : field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' && 2\n    }, // Dataset6\n    {\n      label: field.dataset6Label && field.dataset6Label,\n      data: field.dataset6 && field.dataset6.map(data => {\n        if (data !== '') {\n          return data;\n        }\n      }),\n      backgroundColor: colors5,\n      borderWidth: field.chartType == 'Area chart' ? 0 : field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart' && 2\n    }]\n  };\n  useEffect(async () => {\n    document.getElementById(`${field.index}chartContainer`).innerHTML = '&nbsp;';\n    document.getElementById(`${field.index}chartContainer`).innerHTML = `<canvas id=${field.index} ref=${chartRef}></canvas>`;\n    const myChartRef = document.getElementById(field.index).getContext('2d');\n    console.log(data.datasets);\n    const datas = data.datasets.map(dataset => {\n      console.log(dataset.data[0]);\n      const test1 = dataset.data.map(datases => {\n        if (datases !== undefined) {\n          return datases;\n        } else {\n          return '';\n        }\n      });\n      const test = test1.map((datarer, index) => {\n        if (data.labels[index] !== '') {\n          return datarer;\n        }\n      });\n      const test2 = test.filter(obj => obj !== undefined);\n      return test2;\n    });\n    const fill = field.chartType == 'Line chart' ? false : undefined;\n    const newDatasets = [{\n      label: data.datasets[0].label,\n      data: datas[0],\n      backgroundColor: data.datasets[0].backgroundColor,\n      borderColor: field.chartType == 'Line chart' ? 'rgba(255,185,0 ,1 )' : 'rgb(255, 255, 255)',\n      borderWidth: data.datasets[0].borderWidth,\n      fill: fill\n    }, {\n      label: data.datasets[1].label,\n      data: datas[1],\n      backgroundColor: data.datasets[1].backgroundColor,\n      borderColor: field.chartType == 'Line chart' ? 'rgba(0,204,106 ,1 )' : 'rgb(255, 255, 255)',\n      borderWidth: data.datasets[1].borderWidth,\n      fill: fill\n    }, {\n      label: data.datasets[2].label,\n      data: datas[2],\n      backgroundColor: data.datasets[2].backgroundColor,\n      borderColor: field.chartType == 'Line chart' ? 'rgba(0,120,215 ,1 )' : 'rgb(255, 255, 255)',\n      borderWidth: data.datasets[2].borderWidth,\n      fill: fill\n    }, {\n      label: data.datasets[3].label,\n      data: datas[3],\n      backgroundColor: data.datasets[3].backgroundColor,\n      borderColor: field.chartType == 'Line chart' ? 'rgba(231,72,86 ,1 )' : 'rgb(255, 255, 255)',\n      borderWidth: data.datasets[3].borderWidth,\n      fill: fill\n    }, {\n      label: data.datasets[4].label,\n      data: datas[4],\n      backgroundColor: data.datasets[4].backgroundColor,\n      borderColor: field.chartType == 'Line chart' ? 'rgba(126,115,95 ,1 )' : 'rgb(255, 255, 255)',\n      borderWidth: data.datasets[4].borderWidth,\n      fill: fill\n    }, {\n      label: data.datasets[5].label,\n      data: datas[5],\n      backgroundColor: data.datasets[5].backgroundColor,\n      borderColor: field.chartType == 'Line chart' ? 'rgba(177,70,194 ,1 )' : 'rgb(255, 255, 255)',\n      borderWidth: data.datasets[5].borderWidth,\n      fill: fill\n    }];\n    console.log(newDatasets);\n    const chartType = [field.chartType == 'Bar chart' ? 'bar' : '', field.chartType == 'Reverse chart' ? 'horizontalBar' : '', field.chartType == 'Line chart' ? 'line' : '', field.chartType == 'Pie chart' ? 'pie' : '', field.chartType == 'Doughnut chart' ? 'doughnut' : '', field.chartType == 'Area chart' ? 'line' : ''];\n    window.id = new Chart(myChartRef, {\n      type: chartType.filter(type => type !== ''),\n      data: {\n        labels: data.labels.filter(label => label !== ''),\n        datasets: newDatasets.filter(dataset => dataset.label !== '')\n      },\n      options: {\n        skipNull: true,\n        responsive: true,\n        legend: {\n          position: 'bottom'\n        },\n        // defaultFontFamily: (Chart.defaults.global.defaultFontFamily =\n        //   'Comfortaa'),\n        scales: {\n          yAxes: [{\n            stacked: field.stacked == true ? true : false,\n            ticks: {\n              beginAtZero: true\n            }\n          }],\n          xAxes: [{\n            stacked: field.stacked == true ? true : false,\n            ticks: {\n              beginAtZero: true\n            }\n          }]\n        }\n      }\n    });\n  }, [data.labels, data.datasets, data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full grid grid-cols-12fr justify-items-center items-center mt-6\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: `${field.index}container`,\n      className: \"col-start-2 col-end-12 relative flex flex-col h-full w-full flex px-8 py-8 rounded-2xl bg-white dark:bg-background\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full h-full\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: `${field.index}chartContainer`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 441,\n    columnNumber: 5\n  }, this);\n};\n\nexport default ChartJsComponent;","map":{"version":3,"sources":["C:/off-saas/components/dashboard/startup/project/business-app/business-plan/unique/UniqueChart.js"],"names":["React","useEffect","useRef","useState","ChartJsImage","ChartJsComponent","field","chartRef","toSaveChart","setConfig","type","data","options","responsive","scales","y","beginAtZero","imageUrl","setImageUrl","toDataUrl","colors","chartType","colors1","colors2","colors3","colors4","colors5","labels","map","label","datasets","dataset1Label","dataset1","backgroundColor","borderWidth","dataset2Label","dataset2","dataset3Label","dataset3","dataset4Label","dataset4","dataset5Label","dataset5","dataset6Label","dataset6","document","getElementById","index","innerHTML","myChartRef","getContext","console","log","datas","dataset","test1","datases","undefined","test","datarer","test2","filter","obj","fill","newDatasets","borderColor","window","id","Chart","skipNull","legend","position","yAxes","stacked","ticks","xAxes"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport ChartJsImage from 'chartjs-to-image';\r\n\r\nconst ChartJsComponent = ({ field }) => {\r\n  const chartRef = useRef();\r\n\r\n  const toSaveChart = new ChartJsImage();\r\n  toSaveChart.setConfig({\r\n    type: 'bar',\r\n    data: data,\r\n    options: {\r\n      responsive: false,\r\n      scales: {\r\n        y: {\r\n          beginAtZero: true,\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  const [imageUrl, setImageUrl] = useState();\r\n\r\n  useEffect(async () => {\r\n    setImageUrl(await toSaveChart.toDataUrl());\r\n  }, []);\r\n\r\n  const colors =\r\n    field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart'\r\n      ? [\r\n          'rgba(205,220,57,1)',\r\n          'rgba(255,235,59,1)',\r\n          'rgba(255,193,7,1)',\r\n          'rgba(255,152,0,1)',\r\n          'rgba(255,87,34,1)',\r\n          'rgba(244,67,54,1)',\r\n          'rgba(233,30,99,1)',\r\n          'rgba(156,39,176,1)',\r\n          'rgba(103,58,183,1)',\r\n          'rgba(63,81,181,1)',\r\n          'rgba(96,125,139,1)',\r\n          'rgba(121,85,72,1)',\r\n        ]\r\n      : field.chartType == 'Line chart' || field.chartType == 'Area chart'\r\n      ? 'rgba(255,185,0 ,1 )'\r\n      : [\r\n          'rgba(255,185,0 ,1 )',\r\n          'rgba(255,185,0 ,1 )',\r\n          'rgba(255,185,0 ,1 )',\r\n          'rgba(255,185,0 ,1 )',\r\n          'rgba(255,185,0 ,1 )',\r\n          'rgba(255,185,0 ,1 )',\r\n          'rgba(255,185,0 ,1 )',\r\n          'rgba(255,185,0 ,1 )',\r\n          'rgba(255,185,0 ,1 )',\r\n          'rgba(255,185,0 ,1 )',\r\n          'rgba(255,185,0 ,1 )',\r\n          'rgba(255,185,0 ,1 )',\r\n        ];\r\n\r\n  const colors1 =\r\n    field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart'\r\n      ? [\r\n          'rgba(205,220,57,1)',\r\n          'rgba(255,235,59,1)',\r\n          'rgba(255,193,7,1)',\r\n          'rgba(255,152,0,1)',\r\n          'rgba(255,87,34,1)',\r\n          'rgba(244,67,54,1)',\r\n          'rgba(233,30,99,1)',\r\n          'rgba(156,39,176,1)',\r\n          'rgba(103,58,183,1)',\r\n          'rgba(63,81,181,1)',\r\n          'rgba(96,125,139,1)',\r\n          'rgba(121,85,72,1)',\r\n        ]\r\n      : field.chartType == 'Line chart' || field.chartType == 'Area chart'\r\n      ? 'rgba(0,204,106 ,1 )'\r\n      : [\r\n          'rgba(0,204,106 ,1 )',\r\n          'rgba(0,204,106 ,1 )',\r\n          'rgba(0,204,106 ,1 )',\r\n          'rgba(0,204,106 ,1 )',\r\n          'rgba(0,204,106 ,1 )',\r\n          'rgba(0,204,106 ,1 )',\r\n          'rgba(0,204,106 ,1 )',\r\n          'rgba(0,204,106 ,1 )',\r\n          'rgba(0,204,106 ,1 )',\r\n          'rgba(0,204,106 ,1 )',\r\n          'rgba(0,204,106 ,1 )',\r\n          'rgba(0,204,106 ,1 )',\r\n        ];\r\n\r\n  const colors2 =\r\n    field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart'\r\n      ? [\r\n          'rgba(205,220,57,1)',\r\n          'rgba(255,235,59,1)',\r\n          'rgba(255,193,7,1)',\r\n          'rgba(255,152,0,1)',\r\n          'rgba(255,87,34,1)',\r\n          'rgba(244,67,54,1)',\r\n          'rgba(233,30,99,1)',\r\n          'rgba(156,39,176,1)',\r\n          'rgba(103,58,183,1)',\r\n          'rgba(63,81,181,1)',\r\n          'rgba(96,125,139,1)',\r\n          'rgba(121,85,72,1)',\r\n        ]\r\n      : field.chartType == 'Line chart' || field.chartType == 'Area chart'\r\n      ? 'rgba(0,120,215 ,1 )'\r\n      : [\r\n          'rgba(0,120,215 ,1 )',\r\n          'rgba(0,120,215 ,1 )',\r\n          'rgba(0,120,215 ,1 )',\r\n          'rgba(0,120,215 ,1 )',\r\n          'rgba(0,120,215 ,1 )',\r\n          'rgba(0,120,215 ,1 )',\r\n          'rgba(0,120,215 ,1 )',\r\n          'rgba(0,120,215 ,1 )',\r\n          'rgba(0,120,215 ,1 )',\r\n          'rgba(0,120,215 ,1 )',\r\n          'rgba(0,120,215 ,1 )',\r\n          'rgba(0,120,215 ,1 )',\r\n        ];\r\n\r\n  const colors3 =\r\n    field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart'\r\n      ? [\r\n          'rgba(205,220,57,1)',\r\n          'rgba(255,235,59,1)',\r\n          'rgba(255,193,7,1)',\r\n          'rgba(255,152,0,1)',\r\n          'rgba(255,87,34,1)',\r\n          'rgba(244,67,54,1)',\r\n          'rgba(233,30,99,1)',\r\n          'rgba(156,39,176,1)',\r\n          'rgba(103,58,183,1)',\r\n          'rgba(63,81,181,1)',\r\n          'rgba(96,125,139,1)',\r\n          'rgba(121,85,72,1)',\r\n        ]\r\n      : field.chartType == 'Line chart' || field.chartType == 'Area chart'\r\n      ? 'rgba(231,72,86 ,1 )'\r\n      : [\r\n          'rgba(231,72,86 ,1 )',\r\n          'rgba(231,72,86 ,1 )',\r\n          'rgba(231,72,86 ,1 )',\r\n          'rgba(231,72,86 ,1 )',\r\n          'rgba(231,72,86 ,1 )',\r\n          'rgba(231,72,86 ,1 )',\r\n          'rgba(231,72,86 ,1 )',\r\n          'rgba(231,72,86 ,1 )',\r\n          'rgba(231,72,86 ,1 )',\r\n          'rgba(231,72,86 ,1 )',\r\n          'rgba(231,72,86 ,1 )',\r\n          'rgba(231,72,86 ,1 )',\r\n        ];\r\n\r\n  const colors4 =\r\n    field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart'\r\n      ? [\r\n          'rgba(205,220,57,1)',\r\n          'rgba(255,235,59,1)',\r\n          'rgba(255,193,7,1)',\r\n          'rgba(255,152,0,1)',\r\n          'rgba(255,87,34,1)',\r\n          'rgba(244,67,54,1)',\r\n          'rgba(233,30,99,1)',\r\n          'rgba(156,39,176,1)',\r\n          'rgba(103,58,183,1)',\r\n          'rgba(63,81,181,1)',\r\n          'rgba(96,125,139,1)',\r\n          'rgba(121,85,72,1)',\r\n        ]\r\n      : field.chartType == 'Line chart' || field.chartType == 'Area chart'\r\n      ? 'rgba(126,115,95 ,1 )'\r\n      : [\r\n          'rgba(126,115,95 ,1 )',\r\n          'rgba(126,115,95 ,1 )',\r\n          'rgba(126,115,95 ,1 )',\r\n          'rgba(126,115,95 ,1 )',\r\n          'rgba(126,115,95 ,1 )',\r\n          'rgba(126,115,95 ,1 )',\r\n          'rgba(126,115,95 ,1 )',\r\n          'rgba(126,115,95 ,1 )',\r\n          'rgba(126,115,95 ,1 )',\r\n          'rgba(126,115,95 ,1 )',\r\n          'rgba(126,115,95 ,1 )',\r\n          'rgba(126,115,95 ,1 )',\r\n        ];\r\n\r\n  const colors5 =\r\n    field.chartType == 'Pie chart' || field.chartType == 'Doughnut chart'\r\n      ? [\r\n          'rgba(205,220,57,1)',\r\n          'rgba(255,235,59,1)',\r\n          'rgba(255,193,7,1)',\r\n          'rgba(255,152,0,1)',\r\n          'rgba(255,87,34,1)',\r\n          'rgba(244,67,54,1)',\r\n          'rgba(233,30,99,1)',\r\n          'rgba(156,39,176,1)',\r\n          'rgba(103,58,183,1)',\r\n          'rgba(63,81,181,1)',\r\n          'rgba(96,125,139,1)',\r\n          'rgba(121,85,72,1)',\r\n        ]\r\n      : field.chartType == 'Line chart' || field.chartType == 'Area chart'\r\n      ? 'rgba(177,70,194 ,1 )'\r\n      : [\r\n          'rgba(177,70,194 ,1 )',\r\n          'rgba(177,70,194 ,1 )',\r\n          'rgba(177,70,194 ,1 )',\r\n          'rgba(177,70,194 ,1 )',\r\n          'rgba(177,70,194 ,1 )',\r\n          'rgba(177,70,194 ,1 )',\r\n          'rgba(177,70,194 ,1 )',\r\n          'rgba(177,70,194 ,1 )',\r\n          'rgba(177,70,194 ,1 )',\r\n          'rgba(177,70,194 ,1 )',\r\n          'rgba(177,70,194 ,1 )',\r\n          'rgba(177,70,194 ,1 )',\r\n        ];\r\n\r\n  const data = {\r\n    labels: field.labels && [\r\n      ...field.labels.map((label) => {\r\n        if (label !== '') {\r\n          return label;\r\n        } else {\r\n          return '';\r\n        }\r\n      }),\r\n    ],\r\n    datasets: [\r\n      // Dataset1\r\n      {\r\n        label: field.dataset1Label && field.dataset1Label,\r\n        data:\r\n          field.dataset1 &&\r\n          field.dataset1.map((data) => {\r\n            if (data !== '') {\r\n              return data;\r\n            }\r\n          }),\r\n        backgroundColor: colors,\r\n        borderWidth: field.chartType == 'Area chart' ? 0 : field.chartType == 'Pie chart' || (field.chartType == 'Doughnut chart' && 2),\r\n      },\r\n      // Dataset2\r\n      {\r\n        label: field.dataset2Label && field.dataset2Label,\r\n        data:\r\n          field.dataset2 &&\r\n          field.dataset2.map((data) => {\r\n            if (data !== '') {\r\n              return data;\r\n            }\r\n          }),\r\n        backgroundColor: colors1,\r\n        borderWidth: field.chartType == 'Area chart' ? 0 : field.chartType == 'Pie chart' || (field.chartType == 'Doughnut chart' && 2),\r\n      },\r\n      // Dataset3\r\n      {\r\n        label: field.dataset3Label && field.dataset3Label,\r\n        data:\r\n          field.dataset3 &&\r\n          field.dataset3.map((data) => {\r\n            if (data !== '') {\r\n              return data;\r\n            }\r\n          }),\r\n        backgroundColor: colors2,\r\n        borderWidth: field.chartType == 'Area chart' ? 0 : field.chartType == 'Pie chart' || (field.chartType == 'Doughnut chart' && 2),\r\n      },\r\n      // Dataset4\r\n      {\r\n        label: field.dataset4Label && field.dataset4Label,\r\n        data:\r\n          field.dataset4 &&\r\n          field.dataset4.map((data) => {\r\n            if (data !== '') {\r\n              return data;\r\n            }\r\n          }),\r\n        backgroundColor: colors3,\r\n        borderWidth: field.chartType == 'Area chart' ? 0 : field.chartType == 'Pie chart' || (field.chartType == 'Doughnut chart' && 2),\r\n      },\r\n      // Dataset5\r\n      {\r\n        label: field.dataset5Label && field.dataset5Label,\r\n        data:\r\n          field.dataset5 &&\r\n          field.dataset5.map((data) => {\r\n            if (data !== '') {\r\n              return data;\r\n            }\r\n          }),\r\n        backgroundColor: colors4,\r\n        borderWidth: field.chartType == 'Area chart' ? 0 : field.chartType == 'Pie chart' || (field.chartType == 'Doughnut chart' && 2),\r\n      },\r\n      // Dataset6\r\n      {\r\n        label: field.dataset6Label && field.dataset6Label,\r\n        data:\r\n          field.dataset6 &&\r\n          field.dataset6.map((data) => {\r\n            if (data !== '') {\r\n              return data;\r\n            }\r\n          }),\r\n        backgroundColor: colors5,\r\n        borderWidth: field.chartType == 'Area chart' ? 0 : field.chartType == 'Pie chart' || (field.chartType == 'Doughnut chart' && 2),\r\n      },\r\n    ],\r\n  };\r\n\r\n  useEffect(async () => {\r\n    document.getElementById(`${field.index}chartContainer`).innerHTML = '&nbsp;';\r\n    document.getElementById(`${field.index}chartContainer`).innerHTML = `<canvas id=${field.index} ref=${chartRef}></canvas>`;\r\n    const myChartRef = document.getElementById(field.index).getContext('2d');\r\n\r\n    console.log(data.datasets);\r\n    const datas = data.datasets.map((dataset) => {\r\n      console.log(dataset.data[0]);\r\n      const test1 = dataset.data.map((datases) => {\r\n        if (datases !== undefined) {\r\n          return datases;\r\n        } else {\r\n          return '';\r\n        }\r\n      });\r\n      const test = test1.map((datarer, index) => {\r\n        if (data.labels[index] !== '') {\r\n          return datarer;\r\n        }\r\n      });\r\n      const test2 = test.filter((obj) => obj !== undefined);\r\n      return test2;\r\n    });\r\n\r\n    const fill = field.chartType == 'Line chart' ? false : undefined;\r\n\r\n    const newDatasets = [\r\n      {\r\n        label: data.datasets[0].label,\r\n        data: datas[0],\r\n        backgroundColor: data.datasets[0].backgroundColor,\r\n        borderColor: field.chartType == 'Line chart' ? 'rgba(255,185,0 ,1 )' : 'rgb(255, 255, 255)',\r\n        borderWidth: data.datasets[0].borderWidth,\r\n        fill: fill,\r\n      },\r\n      {\r\n        label: data.datasets[1].label,\r\n        data: datas[1],\r\n        backgroundColor: data.datasets[1].backgroundColor,\r\n        borderColor: field.chartType == 'Line chart' ? 'rgba(0,204,106 ,1 )' : 'rgb(255, 255, 255)',\r\n        borderWidth: data.datasets[1].borderWidth,\r\n        fill: fill,\r\n      },\r\n      {\r\n        label: data.datasets[2].label,\r\n        data: datas[2],\r\n        backgroundColor: data.datasets[2].backgroundColor,\r\n        borderColor: field.chartType == 'Line chart' ? 'rgba(0,120,215 ,1 )' : 'rgb(255, 255, 255)',\r\n        borderWidth: data.datasets[2].borderWidth,\r\n        fill: fill,\r\n      },\r\n      {\r\n        label: data.datasets[3].label,\r\n        data: datas[3],\r\n        backgroundColor: data.datasets[3].backgroundColor,\r\n        borderColor: field.chartType == 'Line chart' ? 'rgba(231,72,86 ,1 )' : 'rgb(255, 255, 255)',\r\n        borderWidth: data.datasets[3].borderWidth,\r\n        fill: fill,\r\n      },\r\n      {\r\n        label: data.datasets[4].label,\r\n        data: datas[4],\r\n        backgroundColor: data.datasets[4].backgroundColor,\r\n        borderColor: field.chartType == 'Line chart' ? 'rgba(126,115,95 ,1 )' : 'rgb(255, 255, 255)',\r\n        borderWidth: data.datasets[4].borderWidth,\r\n        fill: fill,\r\n      },\r\n      {\r\n        label: data.datasets[5].label,\r\n        data: datas[5],\r\n        backgroundColor: data.datasets[5].backgroundColor,\r\n        borderColor: field.chartType == 'Line chart' ? 'rgba(177,70,194 ,1 )' : 'rgb(255, 255, 255)',\r\n        borderWidth: data.datasets[5].borderWidth,\r\n        fill: fill,\r\n      },\r\n    ];\r\n    console.log(newDatasets);\r\n\r\n    const chartType = [\r\n      field.chartType == 'Bar chart' ? 'bar' : '',\r\n      field.chartType == 'Reverse chart' ? 'horizontalBar' : '',\r\n      field.chartType == 'Line chart' ? 'line' : '',\r\n      field.chartType == 'Pie chart' ? 'pie' : '',\r\n      field.chartType == 'Doughnut chart' ? 'doughnut' : '',\r\n      field.chartType == 'Area chart' ? 'line' : '',\r\n    ];\r\n\r\n    window.id = new Chart(myChartRef, {\r\n      type: chartType.filter((type) => type !== ''),\r\n      data: {\r\n        labels: data.labels.filter((label) => label !== ''),\r\n        datasets: newDatasets.filter((dataset) => dataset.label !== ''),\r\n      },\r\n      options: {\r\n        skipNull: true,\r\n        responsive: true,\r\n        legend: {\r\n          position: 'bottom',\r\n        },\r\n        // defaultFontFamily: (Chart.defaults.global.defaultFontFamily =\r\n        //   'Comfortaa'),\r\n        scales: {\r\n          yAxes: [\r\n            {\r\n              stacked: field.stacked == true ? true : false,\r\n              ticks: {\r\n                beginAtZero: true,\r\n              },\r\n            },\r\n          ],\r\n          xAxes: [\r\n            {\r\n              stacked: field.stacked == true ? true : false,\r\n              ticks: {\r\n                beginAtZero: true,\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      },\r\n    });\r\n  }, [data.labels, data.datasets, data]);\r\n\r\n  return (\r\n    <div className=\"w-full grid grid-cols-12fr justify-items-center items-center mt-6\">\r\n      <div\r\n        id={`${field.index}container`}\r\n        className=\"col-start-2 col-end-12 relative flex flex-col h-full w-full flex px-8 py-8 rounded-2xl bg-white dark:bg-background\"\r\n      >\r\n        <div className=\"w-full h-full\">\r\n          <div id={`${field.index}chartContainer`}></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartJsComponent;\r\n"]},"metadata":{},"sourceType":"module"}