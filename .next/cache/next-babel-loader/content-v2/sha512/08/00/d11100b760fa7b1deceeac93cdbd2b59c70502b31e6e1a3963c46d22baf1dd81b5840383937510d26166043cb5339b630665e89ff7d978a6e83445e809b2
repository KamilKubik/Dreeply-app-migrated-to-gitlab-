{"ast":null,"code":"import _regeneratorRuntime from \"C:/off-saas/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"C:/off-saas/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"C:/off-saas/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport firebase from './firebase.js';\nimport { db } from './firebase';\nimport getStripe from './stripe.js';\nvar firestore = firebase.firestore();\nexport var getAllProjects = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var snapshot, projects;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return firestore.collection('projects').get();\n\n          case 2:\n            snapshot = _context.sent;\n            projects = [];\n            snapshot.forEach(function (doc) {\n              projects.push(_objectSpread({\n                id: doc.id\n              }, doc.data()));\n            });\n            console.log(projects);\n            return _context.abrupt(\"return\", {\n              projects: projects\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getAllProjects() {\n    return _ref.apply(this, arguments);\n  };\n}(); // CLIENT-DATA\n\nexport var createUser = function createUser(uid, data) {\n  return firestore.collection('users').doc(uid).set(_objectSpread({\n    uid: uid\n  }, data), {\n    merge: true\n  }); // merge powoduje, że każde id będzie unikatowe\n};\nexport var getUser = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(uid) {\n    var user, users;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return firestore.collection('users').get();\n\n          case 2:\n            user = _context2.sent;\n            users = [];\n            user.forEach(function (doc) {\n              users.push(_objectSpread({\n                id: doc.id\n              }, doc.data()));\n            });\n            return _context2.abrupt(\"return\", {\n              users: users\n            });\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function getUser(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}(); // STARTUP-DATA\n\nexport var createStartupData = function createStartupData(data) {\n  // Wszystkie informacje wrzucamy, a potem będziemy je pobierali dla odpowiedniego użytkownika\n  return firestore.collection('startup-data').add(data);\n}; // PROJECT DELETE\n\nexport var deleteProject = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(projectId) {\n    var snapshot, batch;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return firestore.collection('projects').where('projectId', '==', projectId).get();\n\n          case 2:\n            snapshot = _context3.sent;\n            batch = firestore.batch();\n            console.log(batch);\n            snapshot.forEach(function (doc) {\n              batch[\"delete\"](doc.ref);\n            });\n            return _context3.abrupt(\"return\", batch.commit());\n\n          case 7:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function deleteProject(_x2) {\n    return _ref3.apply(this, arguments);\n  };\n}(); // STRIPE\n\nexport var createCheckoutSessionThreeDays = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(uid) {\n    var checkoutSessionRef;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return db.collection('users').doc(uid) // TO JEST DO ZMIANY Z PODSTAWOWEJ TEMPLATKI\n            .collection('checkout_sessions').add({\n              price: 'price_1IovN1BdXPtKajNHtQTV1N1q',\n              // TO JEST DO ZMIANY Z PODSTAWOWEJ TEMPLATKI\n              success_url: \"\".concat(window.location.origin, \"/dashboard/account\"),\n              cancel_url: \"\".concat(window.location.origin, \"/dashboard/account\")\n            });\n\n          case 2:\n            checkoutSessionRef = _context5.sent;\n            // Wait for the CheckoutSession to get attached by the extension\n            checkoutSessionRef.onSnapshot( /*#__PURE__*/function () {\n              var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(snap) {\n                var _snap$data, error, sessionId, stripe;\n\n                return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        // TO JEST DO ZMIANY Z PODSTAWOWEJ TEMPLATKI (tutaj dodajemy tylko słówko async)\n                        _snap$data = snap.data(), error = _snap$data.error, sessionId = _snap$data.sessionId;\n\n                        if (error) {\n                          // Show an error to your customer and\n                          // inspect your Cloud Function logs in the Firebase console.\n                          alert(\"An error occured: \".concat(error.message));\n                        }\n\n                        if (!sessionId) {\n                          _context4.next = 7;\n                          break;\n                        }\n\n                        _context4.next = 5;\n                        return getStripe();\n\n                      case 5:\n                        stripe = _context4.sent;\n                        // TO JEST DO ZMIANY Z PODSTAWOWEJ TEMPLATKI (funkcja getStripe w pliku stripe.js)\n                        stripe.redirectToCheckout({\n                          sessionId: sessionId\n                        });\n\n                      case 7:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4);\n              }));\n\n              return function (_x4) {\n                return _ref5.apply(this, arguments);\n              };\n            }());\n\n          case 4:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function createCheckoutSessionThreeDays(_x3) {\n    return _ref4.apply(this, arguments);\n  };\n}(); // $29.99 for 10 units\n\nexport var createCheckoutSession10 = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(uid) {\n    var checkoutSessionRef;\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.next = 2;\n            return db.collection('users').doc(uid) // TO JEST DO ZMIANY Z PODSTAWOWEJ TEMPLATKI\n            .collection('checkout_sessions').add({\n              price: 'price_1IVgUmBdXPtKajNH4VVwl6dw',\n              // TO JEST DO ZMIANY Z PODSTAWOWEJ TEMPLATKI\n              success_url: \"\".concat(window.location.origin, \"/dashboard/account\"),\n              cancel_url: \"\".concat(window.location.origin, \"/dashboard/account\")\n            });\n\n          case 2:\n            checkoutSessionRef = _context7.sent;\n            // Wait for the CheckoutSession to get attached by the extension\n            checkoutSessionRef.onSnapshot( /*#__PURE__*/function () {\n              var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(snap) {\n                var _snap$data2, error, sessionId, stripe;\n\n                return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n                  while (1) {\n                    switch (_context6.prev = _context6.next) {\n                      case 0:\n                        // TO JEST DO ZMIANY Z PODSTAWOWEJ TEMPLATKI (tutaj dodajemy tylko słówko async)\n                        _snap$data2 = snap.data(), error = _snap$data2.error, sessionId = _snap$data2.sessionId;\n\n                        if (error) {\n                          // Show an error to your customer and\n                          // inspect your Cloud Function logs in the Firebase console.\n                          alert(\"An error occured: \".concat(error.message));\n                        }\n\n                        if (!sessionId) {\n                          _context6.next = 7;\n                          break;\n                        }\n\n                        _context6.next = 5;\n                        return getStripe();\n\n                      case 5:\n                        stripe = _context6.sent;\n                        // TO JEST DO ZMIANY Z PODSTAWOWEJ TEMPLATKI (funkcja getStripe w pliku stripe.js)\n                        stripe.redirectToCheckout({\n                          sessionId: sessionId\n                        });\n\n                      case 7:\n                      case \"end\":\n                        return _context6.stop();\n                    }\n                  }\n                }, _callee6);\n              }));\n\n              return function (_x6) {\n                return _ref7.apply(this, arguments);\n              };\n            }());\n\n          case 4:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n\n  return function createCheckoutSession10(_x5) {\n    return _ref6.apply(this, arguments);\n  };\n}();\nexport var goToBillingPortal = /*#__PURE__*/function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n    var functionRef, _yield$functionRef, data;\n\n    return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            // Do tej funkcji musimy zaimportować firebase/functions w pliku firebase.js\n            functionRef = firebase.app().functions('us-central1').httpsCallable('ext-firestore-stripe-subscriptions-createPortalLink');\n            _context8.next = 3;\n            return functionRef({\n              returnUrl: \"\".concat(window.location.origin, \"/dashboard/account\")\n            });\n\n          case 3:\n            _yield$functionRef = _context8.sent;\n            data = _yield$functionRef.data;\n            window.location.assign(data.url);\n\n          case 6:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n\n  return function goToBillingPortal() {\n    return _ref8.apply(this, arguments);\n  };\n}(); // export const getCurrentPlan = async () => {\n//   const decodedToken = await firebase.auth().currentUser.getIdTokenResult();\n//   // console.log(decodedToken.claims.stripeRole); // TO POKAZUJE AKTUALNY PLAN ZALOGOWANEGO UŻYTKOWNIKA NP. BASIC / PREMIUM\n//   return decodedToken.claims.stripeRole;\n// };","map":{"version":3,"sources":["C:/off-saas/lib/db.js"],"names":["firebase","db","getStripe","firestore","getAllProjects","collection","get","snapshot","projects","forEach","doc","push","id","data","console","log","createUser","uid","set","merge","getUser","user","users","createStartupData","add","deleteProject","projectId","where","batch","ref","commit","createCheckoutSessionThreeDays","price","success_url","window","location","origin","cancel_url","checkoutSessionRef","onSnapshot","snap","error","sessionId","alert","message","stripe","redirectToCheckout","createCheckoutSession10","goToBillingPortal","functionRef","app","functions","httpsCallable","returnUrl","assign","url"],"mappings":";;;;;;;;AAAA,OAAOA,QAAP,MAAqB,eAArB;AACA,SAASC,EAAT,QAAmB,YAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,IAAMC,SAAS,GAAGH,QAAQ,CAACG,SAAT,EAAlB;AAEA,OAAO,IAAMC,cAAc;AAAA,sEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACLD,SAAS,CAACE,UAAV,CAAqB,UAArB,EAAiCC,GAAjC,EADK;;AAAA;AACtBC,YAAAA,QADsB;AAGtBC,YAAAA,QAHsB,GAGX,EAHW;AAI5BD,YAAAA,QAAQ,CAACE,OAAT,CAAiB,UAACC,GAAD,EAAS;AACxBF,cAAAA,QAAQ,CAACG,IAAT;AAAgBC,gBAAAA,EAAE,EAAEF,GAAG,CAACE;AAAxB,iBAA+BF,GAAG,CAACG,IAAJ,EAA/B;AACD,aAFD;AAIAC,YAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AAR4B,6CASrB;AAAEA,cAAAA,QAAQ,EAARA;AAAF,aATqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAdJ,cAAc;AAAA;AAAA;AAAA,GAApB,C,CAYP;;AAEA,OAAO,IAAMY,UAAU,GAAG,SAAbA,UAAa,CAACC,GAAD,EAAMJ,IAAN,EAAe;AACvC,SAAOV,SAAS,CACbE,UADI,CACO,OADP,EAEJK,GAFI,CAEAO,GAFA,EAGJC,GAHI;AAGED,IAAAA,GAAG,EAAHA;AAHF,KAGUJ,IAHV,GAGkB;AAAEM,IAAAA,KAAK,EAAE;AAAT,GAHlB,CAAP,CADuC,CAII;AAC5C,CALM;AAOP,OAAO,IAAMC,OAAO;AAAA,uEAAG,kBAAOH,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACFd,SAAS,CAACE,UAAV,CAAqB,OAArB,EAA8BC,GAA9B,EADE;;AAAA;AACfe,YAAAA,IADe;AAGfC,YAAAA,KAHe,GAGP,EAHO;AAIrBD,YAAAA,IAAI,CAACZ,OAAL,CAAa,UAACC,GAAD,EAAS;AACpBY,cAAAA,KAAK,CAACX,IAAN;AAAaC,gBAAAA,EAAE,EAAEF,GAAG,CAACE;AAArB,iBAA4BF,GAAG,CAACG,IAAJ,EAA5B;AACD,aAFD;AAJqB,8CAQd;AAAES,cAAAA,KAAK,EAALA;AAAF,aARc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAPF,OAAO;AAAA;AAAA;AAAA,GAAb,C,CAWP;;AAEA,OAAO,IAAMG,iBAAiB,GAAG,SAApBA,iBAAoB,CAACV,IAAD,EAAU;AACzC;AACA,SAAOV,SAAS,CAACE,UAAV,CAAqB,cAArB,EAAqCmB,GAArC,CAAyCX,IAAzC,CAAP;AACD,CAHM,C,CAKP;;AACA,OAAO,IAAMY,aAAa;AAAA,uEAAG,kBAAOC,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEJvB,SAAS,CAACE,UAAV,CAAqB,UAArB,EAAiCsB,KAAjC,CAAuC,WAAvC,EAAoD,IAApD,EAA0DD,SAA1D,EAAqEpB,GAArE,EAFI;;AAAA;AAErBC,YAAAA,QAFqB;AAIrBqB,YAAAA,KAJqB,GAIbzB,SAAS,CAACyB,KAAV,EAJa;AAK3Bd,YAAAA,OAAO,CAACC,GAAR,CAAYa,KAAZ;AAEArB,YAAAA,QAAQ,CAACE,OAAT,CAAiB,UAACC,GAAD,EAAS;AACxBkB,cAAAA,KAAK,UAAL,CAAalB,GAAG,CAACmB,GAAjB;AACD,aAFD;AAP2B,8CAWpBD,KAAK,CAACE,MAAN,EAXoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAbL,aAAa;AAAA;AAAA;AAAA,GAAnB,C,CAcP;;AAEA,OAAO,IAAMM,8BAA8B;AAAA,uEAAG,kBAAOd,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACXhB,EAAE,CAChCI,UAD8B,CACnB,OADmB,EAE9BK,GAF8B,CAE1BO,GAF0B,EAErB;AAFqB,aAG9BZ,UAH8B,CAGnB,mBAHmB,EAI9BmB,GAJ8B,CAI1B;AACHQ,cAAAA,KAAK,EAAE,gCADJ;AACsC;AACzCC,cAAAA,WAAW,YAAKC,MAAM,CAACC,QAAP,CAAgBC,MAArB,uBAFR;AAGHC,cAAAA,UAAU,YAAKH,MAAM,CAACC,QAAP,CAAgBC,MAArB;AAHP,aAJ0B,CADW;;AAAA;AACtCE,YAAAA,kBADsC;AAU5C;AACAA,YAAAA,kBAAkB,CAACC,UAAnB;AAAA,mFAA8B,kBAAOC,IAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAC5B;AAD4B,qCAECA,IAAI,CAAC3B,IAAL,EAFD,EAEpB4B,KAFoB,cAEpBA,KAFoB,EAEbC,SAFa,cAEbA,SAFa;;AAG5B,4BAAID,KAAJ,EAAW;AACT;AACA;AACAE,0BAAAA,KAAK,6BAAsBF,KAAK,CAACG,OAA5B,EAAL;AACD;;AAP2B,6BAQxBF,SARwB;AAAA;AAAA;AAAA;;AAAA;AAAA,+BAWLxC,SAAS,EAXJ;;AAAA;AAWpB2C,wBAAAA,MAXoB;AAWQ;AAClCA,wBAAAA,MAAM,CAACC,kBAAP,CAA0B;AAAEJ,0BAAAA,SAAS,EAATA;AAAF,yBAA1B;;AAZ0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA9B;;AAAA;AAAA;AAAA;AAAA;;AAX4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAA9BX,8BAA8B;AAAA;AAAA;AAAA,GAApC,C,CA4BP;;AAEA,OAAO,IAAMgB,uBAAuB;AAAA,uEAAG,kBAAO9B,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACJhB,EAAE,CAChCI,UAD8B,CACnB,OADmB,EAE9BK,GAF8B,CAE1BO,GAF0B,EAErB;AAFqB,aAG9BZ,UAH8B,CAGnB,mBAHmB,EAI9BmB,GAJ8B,CAI1B;AACHQ,cAAAA,KAAK,EAAE,gCADJ;AACsC;AACzCC,cAAAA,WAAW,YAAKC,MAAM,CAACC,QAAP,CAAgBC,MAArB,uBAFR;AAGHC,cAAAA,UAAU,YAAKH,MAAM,CAACC,QAAP,CAAgBC,MAArB;AAHP,aAJ0B,CADI;;AAAA;AAC/BE,YAAAA,kBAD+B;AAUrC;AACAA,YAAAA,kBAAkB,CAACC,UAAnB;AAAA,mFAA8B,kBAAOC,IAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAC5B;AAD4B,sCAECA,IAAI,CAAC3B,IAAL,EAFD,EAEpB4B,KAFoB,eAEpBA,KAFoB,EAEbC,SAFa,eAEbA,SAFa;;AAG5B,4BAAID,KAAJ,EAAW;AACT;AACA;AACAE,0BAAAA,KAAK,6BAAsBF,KAAK,CAACG,OAA5B,EAAL;AACD;;AAP2B,6BAQxBF,SARwB;AAAA;AAAA;AAAA;;AAAA;AAAA,+BAWLxC,SAAS,EAXJ;;AAAA;AAWpB2C,wBAAAA,MAXoB;AAWQ;AAClCA,wBAAAA,MAAM,CAACC,kBAAP,CAA0B;AAAEJ,0BAAAA,SAAS,EAATA;AAAF,yBAA1B;;AAZ0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA9B;;AAAA;AAAA;AAAA;AAAA;;AAXqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAvBK,uBAAuB;AAAA;AAAA;AAAA,GAA7B;AA4BP,OAAO,IAAMC,iBAAiB;AAAA,uEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAC/B;AACMC,YAAAA,WAFyB,GAEXjD,QAAQ,CAACkD,GAAT,GAAeC,SAAf,CAAyB,aAAzB,EAAwCC,aAAxC,CAAsD,qDAAtD,CAFW;AAAA;AAAA,mBAGRH,WAAW,CAAC;AACjCI,cAAAA,SAAS,YAAKnB,MAAM,CAACC,QAAP,CAAgBC,MAArB;AADwB,aAAD,CAHH;;AAAA;AAAA;AAGvBvB,YAAAA,IAHuB,sBAGvBA,IAHuB;AAM/BqB,YAAAA,MAAM,CAACC,QAAP,CAAgBmB,MAAhB,CAAuBzC,IAAI,CAAC0C,GAA5B;;AAN+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAjBP,iBAAiB;AAAA;AAAA;AAAA,GAAvB,C,CASP;AACA;AACA;AACA;AACA","sourcesContent":["import firebase from './firebase.js';\r\nimport { db } from './firebase';\r\nimport getStripe from './stripe.js';\r\n\r\nconst firestore = firebase.firestore();\r\n\r\nexport const getAllProjects = async () => {\r\n  const snapshot = await firestore.collection('projects').get();\r\n\r\n  const projects = [];\r\n  snapshot.forEach((doc) => {\r\n    projects.push({ id: doc.id, ...doc.data() });\r\n  });\r\n\r\n  console.log(projects);\r\n  return { projects };\r\n};\r\n\r\n// CLIENT-DATA\r\n\r\nexport const createUser = (uid, data) => {\r\n  return firestore\r\n    .collection('users')\r\n    .doc(uid)\r\n    .set({ uid, ...data }, { merge: true }); // merge powoduje, że każde id będzie unikatowe\r\n};\r\n\r\nexport const getUser = async (uid) => {\r\n  const user = await firestore.collection('users').get();\r\n\r\n  const users = [];\r\n  user.forEach((doc) => {\r\n    users.push({ id: doc.id, ...doc.data() });\r\n  });\r\n\r\n  return { users };\r\n};\r\n\r\n// STARTUP-DATA\r\n\r\nexport const createStartupData = (data) => {\r\n  // Wszystkie informacje wrzucamy, a potem będziemy je pobierali dla odpowiedniego użytkownika\r\n  return firestore.collection('startup-data').add(data);\r\n};\r\n\r\n// PROJECT DELETE\r\nexport const deleteProject = async (projectId) => {\r\n  // ONE PARTICULAR PROJECT\r\n  const snapshot = await firestore.collection('projects').where('projectId', '==', projectId).get();\r\n\r\n  const batch = firestore.batch();\r\n  console.log(batch);\r\n\r\n  snapshot.forEach((doc) => {\r\n    batch.delete(doc.ref);\r\n  });\r\n\r\n  return batch.commit();\r\n};\r\n\r\n// STRIPE\r\n\r\nexport const createCheckoutSessionThreeDays = async (uid) => {\r\n  const checkoutSessionRef = await db\r\n    .collection('users')\r\n    .doc(uid) // TO JEST DO ZMIANY Z PODSTAWOWEJ TEMPLATKI\r\n    .collection('checkout_sessions')\r\n    .add({\r\n      price: 'price_1IovN1BdXPtKajNHtQTV1N1q', // TO JEST DO ZMIANY Z PODSTAWOWEJ TEMPLATKI\r\n      success_url: `${window.location.origin}/dashboard/account`,\r\n      cancel_url: `${window.location.origin}/dashboard/account`,\r\n    });\r\n  // Wait for the CheckoutSession to get attached by the extension\r\n  checkoutSessionRef.onSnapshot(async (snap) => {\r\n    // TO JEST DO ZMIANY Z PODSTAWOWEJ TEMPLATKI (tutaj dodajemy tylko słówko async)\r\n    const { error, sessionId } = snap.data();\r\n    if (error) {\r\n      // Show an error to your customer and\r\n      // inspect your Cloud Function logs in the Firebase console.\r\n      alert(`An error occured: ${error.message}`);\r\n    }\r\n    if (sessionId) {\r\n      // We have a session, let's redirect to Checkout\r\n      // Init Stripe\r\n      const stripe = await getStripe(); // TO JEST DO ZMIANY Z PODSTAWOWEJ TEMPLATKI (funkcja getStripe w pliku stripe.js)\r\n      stripe.redirectToCheckout({ sessionId });\r\n    }\r\n  });\r\n};\r\n\r\n// $29.99 for 10 units\r\n\r\nexport const createCheckoutSession10 = async (uid) => {\r\n  const checkoutSessionRef = await db\r\n    .collection('users')\r\n    .doc(uid) // TO JEST DO ZMIANY Z PODSTAWOWEJ TEMPLATKI\r\n    .collection('checkout_sessions')\r\n    .add({\r\n      price: 'price_1IVgUmBdXPtKajNH4VVwl6dw', // TO JEST DO ZMIANY Z PODSTAWOWEJ TEMPLATKI\r\n      success_url: `${window.location.origin}/dashboard/account`,\r\n      cancel_url: `${window.location.origin}/dashboard/account`,\r\n    });\r\n  // Wait for the CheckoutSession to get attached by the extension\r\n  checkoutSessionRef.onSnapshot(async (snap) => {\r\n    // TO JEST DO ZMIANY Z PODSTAWOWEJ TEMPLATKI (tutaj dodajemy tylko słówko async)\r\n    const { error, sessionId } = snap.data();\r\n    if (error) {\r\n      // Show an error to your customer and\r\n      // inspect your Cloud Function logs in the Firebase console.\r\n      alert(`An error occured: ${error.message}`);\r\n    }\r\n    if (sessionId) {\r\n      // We have a session, let's redirect to Checkout\r\n      // Init Stripe\r\n      const stripe = await getStripe(); // TO JEST DO ZMIANY Z PODSTAWOWEJ TEMPLATKI (funkcja getStripe w pliku stripe.js)\r\n      stripe.redirectToCheckout({ sessionId });\r\n    }\r\n  });\r\n};\r\n\r\nexport const goToBillingPortal = async () => {\r\n  // Do tej funkcji musimy zaimportować firebase/functions w pliku firebase.js\r\n  const functionRef = firebase.app().functions('us-central1').httpsCallable('ext-firestore-stripe-subscriptions-createPortalLink');\r\n  const { data } = await functionRef({\r\n    returnUrl: `${window.location.origin}/dashboard/account`,\r\n  });\r\n  window.location.assign(data.url);\r\n};\r\n\r\n// export const getCurrentPlan = async () => {\r\n//   const decodedToken = await firebase.auth().currentUser.getIdTokenResult();\r\n//   // console.log(decodedToken.claims.stripeRole); // TO POKAZUJE AKTUALNY PLAN ZALOGOWANEGO UŻYTKOWNIKA NP. BASIC / PREMIUM\r\n//   return decodedToken.claims.stripeRole;\r\n// };\r\n"]},"metadata":{},"sourceType":"module"}