{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"C:/off-saas/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"C:/off-saas/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"C:/off-saas/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/off-saas/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\off-saas\\\\components\\\\dashboard\\\\startup\\\\project\\\\business-plan\\\\SectionManager.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useMemo, useEffect } from 'react';\nimport Image from 'next/image';\nimport { sections } from '../../../../../utils/business-plan';\nimport useSWR, { mutate } from 'swr';\nimport firebase, { db } from '../../../../../lib/firebase';\nimport { useAuth } from '../../../../../lib/newAuth';\nimport { useRouter } from 'next/router';\nimport fetcher from '../../../../../utils/fetcher';\n\nvar SectionManager = function SectionManager(_ref) {\n  _s();\n\n  var setSections1 = _ref.setSections1,\n      dataFromInput = _ref.dataFromInput,\n      setDataFromInput = _ref.setDataFromInput,\n      activeSection = _ref.activeSection,\n      setActiveSection = _ref.setActiveSection;\n\n  var _useState = useState(),\n      sections = _useState[0],\n      setSections = _useState[1];\n\n  var _useState2 = useState(),\n      inputValue = _useState2[0],\n      setInputValue = _useState2[1];\n\n  var _useState3 = useState(),\n      projectId = _useState3[0],\n      setProjectId = _useState3[1];\n\n  var _useAuth = useAuth(),\n      currentUser = _useAuth.currentUser;\n\n  var router = useRouter();\n  var ref = db.collection('currentBusinessPlan');\n  useEffect(function () {\n    // PROJECT ID\n    var gcp = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return db.collection('projects').where('uid', '==', currentUser.uid).where('projectName', '==', router.query.project).get().then(function (querySnapshot) {\n                  querySnapshot.forEach(function (doc) {\n                    return setProjectId(doc.data().projectId);\n                  });\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function gcp() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    gcp();\n    ref.where('uid', '==', currentUser.uid).onSnapshot(function (querySnapshot) {\n      var items = [];\n      querySnapshot.forEach(function (doc) {\n        items.push.apply(items, _toConsumableArray(doc.data().sections));\n      });\n      setSections(items);\n    });\n  }, []); // const getProjectSections = () => {\n  //   const { data } = useSWR(\n  //     currentUser && projectId\n  //       ? [`/api/business-plan/${projectId}`, currentUser.token]\n  //       : null,\n  //     fetcher\n  //   );\n  //   useMemo(\n  //     () =>\n  //       data &&\n  //       data.map((project) => {\n  //         // useMemo jest po to, żeby nie było rerenderów (w sensie wyskakuje wtedy błąd, że za dużo renderowań)\n  //         setSections(project.sections);\n  //       }),\n  //     [data]\n  //   );\n  // };\n  // getProjectSections();\n\n  console.log('SECTIONS --> ', sections);\n\n  var onSectionAdd = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              e.preventDefault();\n              sections.push({\n                name: inputValue\n              });\n              ref.doc(currentUser.uid).set({\n                sections: sections\n              }, {\n                merge: true\n              }); // sections.push({ name: inputValue });\n              // await db.collection('currentBusinessPlan').doc(currentUser.uid).set({ sections }, { merge: true });\n              // console.log(sections);\n              // mutate([`/api/business-plan/${projectId}`, currentUser.token], sections);\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function onSectionAdd(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var onSectionDelete = function onSectionDelete(e, name) {\n    e.preventDefault();\n    console.log(name);\n    var newSections = sections.filter(function (section) {\n      return section.name !== name;\n    });\n    console.log('NEW SECTIONS - ', newSections);\n    ref.doc(currentUser.uid).set({\n      sections: newSections\n    }, {\n      merge: true\n    });\n  };\n\n  useEffect(function () {\n    console.log(dataFromInput);\n  });\n  console.log('INPUT DATA --> ', dataFromInput);\n\n  var onSectionClick = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(e, namer) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              e.preventDefault();\n\n              if (!(namer == activeSection)) {\n                _context3.next = 3;\n                break;\n              }\n\n              return _context3.abrupt(\"return\");\n\n            case 3:\n              if (!dataFromInput) {\n                _context3.next = 6;\n                break;\n              }\n\n              _context3.next = 6;\n              return db.collection('currentBusinessPlan').doc(currentUser.uid).collection('data').doc(activeSection).update({\n                values: firebase.firestore.FieldValue.arrayUnion(_objectSpread({\n                  id: 'e08855cc-fcbc-46a0-881c-c933d84bd962'\n                }, dataFromInput))\n              });\n\n            case 6:\n              // Nowa nazwa wybranej sekcji następuje po tym, jak dodamy data z aktualnego inputa, bo jak było przed tym, to data z inputa dodawało się do innej sekcji\n              // setSections1(null);\n              setActiveSection(namer); // Data input reset\n\n              setDataFromInput(null);\n\n            case 8:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function onSectionClick(_x2, _x3) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-start-7 col-end-9 mt-12\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"ml-4 text-primarydark text-base dark:text-background\",\n      children: \"Manage your sections\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full ml-4 mt-1 bg-white flex flex-col py-2 px-4 rounded-2xl\",\n      children: [sections && sections.map(function (section) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: function onClick(e) {\n            return onSectionClick(e, section.name);\n          },\n          className: \"h-10 bg-background mt-4 rounded-2xl flex justify-around items-center transform hover:scale-105 hover:-translate-y-1 hover:-translate-x-1 transition duration-500 ease-in-out cursor-pointer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-primarydark text-sm\",\n              children: section.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 19\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(Image, {\n            onClick: function onClick(e) {\n              return onSectionDelete(e, section.name);\n            },\n            src: \"/business-model/delete.svg\",\n            height: 20,\n            width: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 17\n          }, _this)]\n        }, section.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }, _this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-10 mt-4 rounded-2xl flex justify-around items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: function onClick(e) {\n              return onSectionAdd(e);\n            },\n            className: \"hover:bg-primary hover:text-white dark:hover:bg-primarydark dark:hover:text-background focus:outline-none border border-primary text-primary dark:text-primarydark dark:border-primarydark text-sm font-light py-2 px-6 rounded-2xl\",\n            children: \"New section\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"border border-primarydark\",\n          type: \"text\",\n          value: inputValue,\n          onChange: function onChange(e) {\n            return setInputValue(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(SectionManager, \"1ianmQGYsW10/fXAxSGObLZ3JmM=\", false, function () {\n  return [useAuth, useRouter];\n});\n\n_c = SectionManager;\nexport default SectionManager;\n\nvar _c;\n\n$RefreshReg$(_c, \"SectionManager\");","map":{"version":3,"sources":["C:/off-saas/components/dashboard/startup/project/business-plan/SectionManager.js"],"names":["React","useState","useMemo","useEffect","Image","sections","useSWR","mutate","firebase","db","useAuth","useRouter","fetcher","SectionManager","setSections1","dataFromInput","setDataFromInput","activeSection","setActiveSection","setSections","inputValue","setInputValue","projectId","setProjectId","currentUser","router","ref","collection","gcp","where","uid","query","project","get","then","querySnapshot","forEach","doc","data","onSnapshot","items","push","console","log","onSectionAdd","e","preventDefault","name","set","merge","onSectionDelete","newSections","filter","section","onSectionClick","namer","update","values","firestore","FieldValue","arrayUnion","id","map","target","value"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,OAA1B,EAAmCC,SAAnC,QAAoD,OAApD;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,SAASC,QAAT,QAAyB,oCAAzB;AACA,OAAOC,MAAP,IAAiBC,MAAjB,QAA+B,KAA/B;AACA,OAAOC,QAAP,IAAmBC,EAAnB,QAA6B,6BAA7B;AACA,SAASC,OAAT,QAAwB,4BAAxB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,OAAP,MAAoB,8BAApB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAAwF;AAAA;;AAAA,MAArFC,YAAqF,QAArFA,YAAqF;AAAA,MAAvEC,aAAuE,QAAvEA,aAAuE;AAAA,MAAxDC,gBAAwD,QAAxDA,gBAAwD;AAAA,MAAtCC,aAAsC,QAAtCA,aAAsC;AAAA,MAAvBC,gBAAuB,QAAvBA,gBAAuB;;AAAA,kBAC7EjB,QAAQ,EADqE;AAAA,MACtGI,QADsG;AAAA,MAC5Fc,WAD4F;;AAAA,mBAEzElB,QAAQ,EAFiE;AAAA,MAEtGmB,UAFsG;AAAA,MAE1FC,aAF0F;;AAAA,mBAG3EpB,QAAQ,EAHmE;AAAA,MAGtGqB,SAHsG;AAAA,MAG3FC,YAH2F;;AAAA,iBAKrFb,OAAO,EAL8E;AAAA,MAKrGc,WALqG,YAKrGA,WALqG;;AAM7G,MAAMC,MAAM,GAAGd,SAAS,EAAxB;AAEA,MAAMe,GAAG,GAAGjB,EAAE,CAACkB,UAAH,CAAc,qBAAd,CAAZ;AAEAxB,EAAAA,SAAS,CAAC,YAAM;AACd;AACA,QAAMyB,GAAG;AAAA,2EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACJnB,EAAE,CACLkB,UADG,CACQ,UADR,EAEHE,KAFG,CAEG,KAFH,EAEU,IAFV,EAEgBL,WAAW,CAACM,GAF5B,EAGHD,KAHG,CAGG,aAHH,EAGkB,IAHlB,EAGwBJ,MAAM,CAACM,KAAP,CAAaC,OAHrC,EAIHC,GAJG,GAKHC,IALG,CAKE,UAACC,aAAD,EAAmB;AACvBA,kBAAAA,aAAa,CAACC,OAAd,CAAsB,UAACC,GAAD,EAAS;AAC7B,2BAAOd,YAAY,CAACc,GAAG,CAACC,IAAJ,GAAWhB,SAAZ,CAAnB;AACD,mBAFD;AAGD,iBATG,CADI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAHM,GAAG;AAAA;AAAA;AAAA,OAAT;;AAYAA,IAAAA,GAAG;AAEHF,IAAAA,GAAG,CAACG,KAAJ,CAAU,KAAV,EAAiB,IAAjB,EAAuBL,WAAW,CAACM,GAAnC,EAAwCS,UAAxC,CAAmD,UAACJ,aAAD,EAAmB;AACpE,UAAMK,KAAK,GAAG,EAAd;AACAL,MAAAA,aAAa,CAACC,OAAd,CAAsB,UAACC,GAAD,EAAS;AAC7BG,QAAAA,KAAK,CAACC,IAAN,OAAAD,KAAK,qBAASH,GAAG,CAACC,IAAJ,GAAWjC,QAApB,EAAL;AACD,OAFD;AAGAc,MAAAA,WAAW,CAACqB,KAAD,CAAX;AACD,KAND;AAOD,GAvBQ,EAuBN,EAvBM,CAAT,CAV6G,CAmC7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAE,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BtC,QAA7B;;AAEA,MAAMuC,YAAY;AAAA,yEAAG,kBAAOC,CAAP;AAAA;AAAA;AAAA;AAAA;AACnBA,cAAAA,CAAC,CAACC,cAAF;AACAzC,cAAAA,QAAQ,CAACoC,IAAT,CAAc;AAAEM,gBAAAA,IAAI,EAAE3B;AAAR,eAAd;AACAM,cAAAA,GAAG,CAACW,GAAJ,CAAQb,WAAW,CAACM,GAApB,EAAyBkB,GAAzB,CAA6B;AAAE3C,gBAAAA,QAAQ,EAARA;AAAF,eAA7B,EAA2C;AAAE4C,gBAAAA,KAAK,EAAE;AAAT,eAA3C,EAHmB,CAInB;AACA;AACA;AACA;;AAPmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZL,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAUA,MAAMM,eAAe,GAAG,SAAlBA,eAAkB,CAACL,CAAD,EAAIE,IAAJ,EAAa;AACnCF,IAAAA,CAAC,CAACC,cAAF;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;AACA,QAAMI,WAAW,GAAG9C,QAAQ,CAAC+C,MAAT,CAAgB,UAACC,OAAD;AAAA,aAAaA,OAAO,CAACN,IAAR,KAAiBA,IAA9B;AAAA,KAAhB,CAApB;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BQ,WAA/B;AACAzB,IAAAA,GAAG,CAACW,GAAJ,CAAQb,WAAW,CAACM,GAApB,EAAyBkB,GAAzB,CAA6B;AAAE3C,MAAAA,QAAQ,EAAE8C;AAAZ,KAA7B,EAAwD;AAAEF,MAAAA,KAAK,EAAE;AAAT,KAAxD;AACD,GAND;;AAQA9C,EAAAA,SAAS,CAAC,YAAM;AACduC,IAAAA,OAAO,CAACC,GAAR,CAAY5B,aAAZ;AACD,GAFQ,CAAT;AAIA2B,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B5B,aAA/B;;AAEA,MAAMuC,cAAc;AAAA,yEAAG,kBAAOT,CAAP,EAAUU,KAAV;AAAA;AAAA;AAAA;AAAA;AACrBV,cAAAA,CAAC,CAACC,cAAF;;AADqB,oBAGjBS,KAAK,IAAItC,aAHQ;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,mBASjBF,aATiB;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAUbN,EAAE,CACLkB,UADG,CACQ,qBADR,EAEHU,GAFG,CAECb,WAAW,CAACM,GAFb,EAGHH,UAHG,CAGQ,MAHR,EAIHU,GAJG,CAICpB,aAJD,EAKHuC,MALG,CAKI;AACNC,gBAAAA,MAAM,EAAEjD,QAAQ,CAACkD,SAAT,CAAmBC,UAAnB,CAA8BC,UAA9B;AACNC,kBAAAA,EAAE,EAAE;AADE,mBAEH9C,aAFG;AADF,eALJ,CAVa;;AAAA;AAsBrB;AACA;AACAG,cAAAA,gBAAgB,CAACqC,KAAD,CAAhB,CAxBqB,CAyBrB;;AACAvC,cAAAA,gBAAgB,CAAC,IAAD,CAAhB;;AA1BqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAdsC,cAAc;AAAA;AAAA;AAAA,KAApB;;AA6BA,sBACE;AAAK,IAAA,SAAS,EAAC,6BAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,sDAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAIE;AAAK,MAAA,SAAS,EAAC,+DAAf;AAAA,iBACGjD,QAAQ,IACPA,QAAQ,CAACyD,GAAT,CAAa,UAACT,OAAD,EAAa;AACxB,4BACE;AACE,UAAA,OAAO,EAAE,iBAACR,CAAD;AAAA,mBAAOS,cAAc,CAACT,CAAD,EAAIQ,OAAO,CAACN,IAAZ,CAArB;AAAA,WADX;AAGE,UAAA,SAAS,EAAC,6LAHZ;AAAA,kCAKE;AAAA,mCACE;AAAG,cAAA,SAAS,EAAC,0BAAb;AAAA,wBAAyCM,OAAO,CAACN;AAAjD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,mBALF,eAQE,QAAC,KAAD;AACE,YAAA,OAAO,EAAE,iBAACF,CAAD;AAAA,qBAAOK,eAAe,CAACL,CAAD,EAAIQ,OAAO,CAACN,IAAZ,CAAtB;AAAA,aADX;AAEE,YAAA,GAAG,EAAC,4BAFN;AAGE,YAAA,MAAM,EAAE,EAHV;AAIE,YAAA,KAAK,EAAE;AAJT;AAAA;AAAA;AAAA;AAAA,mBARF;AAAA,WAEOM,OAAO,CAACN,IAFf;AAAA;AAAA;AAAA;AAAA,iBADF;AAiBD,OAlBD,CAFJ,eAqBE;AAAK,QAAA,SAAS,EAAC,wDAAf;AAAA,gCACE;AAAA,iCACE;AACE,YAAA,OAAO,EAAE,iBAACF,CAAD;AAAA,qBAAOD,YAAY,CAACC,CAAD,CAAnB;AAAA,aADX;AAEE,YAAA,SAAS,EAAC,qOAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,iBADF,eASE;AACE,UAAA,SAAS,EAAC,2BADZ;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,KAAK,EAAEzB,UAHT;AAIE,UAAA,QAAQ,EAAE,kBAACyB,CAAD;AAAA,mBAAOxB,aAAa,CAACwB,CAAC,CAACkB,MAAF,CAASC,KAAV,CAApB;AAAA;AAJZ;AAAA;AAAA;AAAA;AAAA,iBATF;AAAA;AAAA;AAAA;AAAA;AAAA,eArBF;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AA6CD,CA1JD;;GAAMnD,c;UAKoBH,O,EACTC,S;;;KANXE,c;AA4JN,eAAeA,cAAf","sourcesContent":["import React, { useState, useMemo, useEffect } from 'react';\r\nimport Image from 'next/image';\r\nimport { sections } from '../../../../../utils/business-plan';\r\nimport useSWR, { mutate } from 'swr';\r\nimport firebase, { db } from '../../../../../lib/firebase';\r\nimport { useAuth } from '../../../../../lib/newAuth';\r\nimport { useRouter } from 'next/router';\r\nimport fetcher from '../../../../../utils/fetcher';\r\n\r\nconst SectionManager = ({ setSections1, dataFromInput, setDataFromInput, activeSection, setActiveSection }) => {\r\n  const [sections, setSections] = useState();\r\n  const [inputValue, setInputValue] = useState();\r\n  const [projectId, setProjectId] = useState();\r\n\r\n  const { currentUser } = useAuth();\r\n  const router = useRouter();\r\n\r\n  const ref = db.collection('currentBusinessPlan');\r\n\r\n  useEffect(() => {\r\n    // PROJECT ID\r\n    const gcp = async () => {\r\n      await db\r\n        .collection('projects')\r\n        .where('uid', '==', currentUser.uid)\r\n        .where('projectName', '==', router.query.project)\r\n        .get()\r\n        .then((querySnapshot) => {\r\n          querySnapshot.forEach((doc) => {\r\n            return setProjectId(doc.data().projectId);\r\n          });\r\n        });\r\n    };\r\n    gcp();\r\n\r\n    ref.where('uid', '==', currentUser.uid).onSnapshot((querySnapshot) => {\r\n      const items = [];\r\n      querySnapshot.forEach((doc) => {\r\n        items.push(...doc.data().sections);\r\n      });\r\n      setSections(items);\r\n    });\r\n  }, []);\r\n\r\n  // const getProjectSections = () => {\r\n  //   const { data } = useSWR(\r\n  //     currentUser && projectId\r\n  //       ? [`/api/business-plan/${projectId}`, currentUser.token]\r\n  //       : null,\r\n  //     fetcher\r\n  //   );\r\n  //   useMemo(\r\n  //     () =>\r\n  //       data &&\r\n  //       data.map((project) => {\r\n  //         // useMemo jest po to, żeby nie było rerenderów (w sensie wyskakuje wtedy błąd, że za dużo renderowań)\r\n  //         setSections(project.sections);\r\n  //       }),\r\n  //     [data]\r\n  //   );\r\n  // };\r\n  // getProjectSections();\r\n\r\n  console.log('SECTIONS --> ', sections);\r\n\r\n  const onSectionAdd = async (e) => {\r\n    e.preventDefault();\r\n    sections.push({ name: inputValue });\r\n    ref.doc(currentUser.uid).set({ sections }, { merge: true });\r\n    // sections.push({ name: inputValue });\r\n    // await db.collection('currentBusinessPlan').doc(currentUser.uid).set({ sections }, { merge: true });\r\n    // console.log(sections);\r\n    // mutate([`/api/business-plan/${projectId}`, currentUser.token], sections);\r\n  };\r\n\r\n  const onSectionDelete = (e, name) => {\r\n    e.preventDefault();\r\n    console.log(name);\r\n    const newSections = sections.filter((section) => section.name !== name);\r\n    console.log('NEW SECTIONS - ', newSections);\r\n    ref.doc(currentUser.uid).set({ sections: newSections }, { merge: true });\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(dataFromInput);\r\n  });\r\n\r\n  console.log('INPUT DATA --> ', dataFromInput);\r\n\r\n  const onSectionClick = async (e, namer) => {\r\n    e.preventDefault();\r\n\r\n    if (namer == activeSection) {\r\n      return;\r\n    }\r\n\r\n    // UPDATE ALL DATA OF CURRENT SECTION(?)\r\n    // const dataToUpload = dataFromInput ? dataFromInput : { inputs: [] }\r\n    if (dataFromInput) {\r\n      await db\r\n        .collection('currentBusinessPlan')\r\n        .doc(currentUser.uid)\r\n        .collection('data')\r\n        .doc(activeSection)\r\n        .update({\r\n          values: firebase.firestore.FieldValue.arrayUnion({\r\n            id: 'e08855cc-fcbc-46a0-881c-c933d84bd962',\r\n            ...dataFromInput\r\n          })\r\n        });\r\n    }\r\n    // Nowa nazwa wybranej sekcji następuje po tym, jak dodamy data z aktualnego inputa, bo jak było przed tym, to data z inputa dodawało się do innej sekcji\r\n    // setSections1(null);\r\n    setActiveSection(namer);\r\n    // Data input reset\r\n    setDataFromInput(null);\r\n  };\r\n\r\n  return (\r\n    <div className='col-start-7 col-end-9 mt-12'>\r\n      <h1 className='ml-4 text-primarydark text-base dark:text-background'>\r\n        Manage your sections\r\n      </h1>\r\n      <div className='w-full ml-4 mt-1 bg-white flex flex-col py-2 px-4 rounded-2xl'>\r\n        {sections &&\r\n          sections.map((section) => {\r\n            return (\r\n              <div\r\n                onClick={(e) => onSectionClick(e, section.name)}\r\n                key={section.name}\r\n                className='h-10 bg-background mt-4 rounded-2xl flex justify-around items-center transform hover:scale-105 hover:-translate-y-1 hover:-translate-x-1 transition duration-500 ease-in-out cursor-pointer'\r\n              >\r\n                <div>\r\n                  <p className='text-primarydark text-sm'>{section.name}</p>\r\n                </div>\r\n                <Image\r\n                  onClick={(e) => onSectionDelete(e, section.name)}\r\n                  src='/business-model/delete.svg'\r\n                  height={20}\r\n                  width={20}\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n        <div className='h-10 mt-4 rounded-2xl flex justify-around items-center'>\r\n          <div>\r\n            <button\r\n              onClick={(e) => onSectionAdd(e)}\r\n              className='hover:bg-primary hover:text-white dark:hover:bg-primarydark dark:hover:text-background focus:outline-none border border-primary text-primary dark:text-primarydark dark:border-primarydark text-sm font-light py-2 px-6 rounded-2xl'\r\n            >\r\n              New section\r\n            </button>\r\n          </div>\r\n          <input\r\n            className='border border-primarydark'\r\n            type='text'\r\n            value={inputValue}\r\n            onChange={(e) => setInputValue(e.target.value)}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SectionManager;\r\n"]},"metadata":{},"sourceType":"module"}