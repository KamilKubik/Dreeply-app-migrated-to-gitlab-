{"ast":null,"code":"import _defineProperty from \"C:/off-saas/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"C:/off-saas/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/off-saas/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"C:/off-saas/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport Image from 'next/image';\nimport gsap, { Linear } from 'gsap';\nimport debounce from '../../../../../utils/helpers';\nimport Router from 'next/router';\n\nvar TableElement = function TableElement(_ref) {\n  var currentIndex = _ref.currentIndex,\n      tableUpdate = _ref.tableUpdate,\n      provided = _ref.provided,\n      field = _ref.field,\n      deleteField = _ref.deleteField;\n  console.log(field);\n\n  var _useState = useState(),\n      newField = _useState[0],\n      setNewField = _useState[1];\n\n  useEffect(function () {\n    document.getElementById(\"\".concat(field.index, \"container\")) && document.getElementById(\"\".concat(field.index, \"container\")).addEventListener('mouseenter', function () {\n      gsap.to(document.getElementById(\"\".concat(field.index, \"table\")), {\n        height: 80,\n        marginTop: 10,\n        duration: 0.8,\n        transformOrigin: 'top',\n        ease: Linear\n      });\n    });\n    document.getElementById(\"\".concat(field.index, \"container\")) && document.getElementById(\"\".concat(field.index, \"container\")).addEventListener('mouseleave', function () {\n      gsap.to(document.getElementById(\"\".concat(field.index, \"table\")), {\n        height: 0,\n        marginTop: 0,\n        duration: 0.8,\n        transformOrigin: 'top',\n        ease: Linear\n      });\n    });\n  }, []);\n  useEffect(function () {\n    setNewField(field);\n  }, []);\n\n  var onRowDataChange = function onRowDataChange(data, rowIndex, rowDataIndex) {\n    var newArray = _toConsumableArray(newField.rows);\n\n    newArray[rowIndex].row[rowDataIndex] = data;\n    var updatedField = {\n      headRows: field.headRows,\n      rows: newArray,\n      index: field.index,\n      tableId: field.tableId,\n      type: 'table',\n      currentIndex: currentIndex\n    };\n    setNewField(updatedField); // Firebase update\n\n    databaseUpdate(updatedField);\n  };\n\n  var databaseUpdate = useCallback(debounce( /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              tableUpdate(data, data.currentIndex, field.tableId, field.index);\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }(), 500), []);\n\n  var onHeadRowDataChange = function onHeadRowDataChange(data, headRowIndex) {\n    console.log(data);\n\n    var newArray = _toConsumableArray(newField.headRows);\n\n    newArray[headRowIndex] = data;\n    var updatedField = {\n      headRows: newArray,\n      rows: field.rows,\n      index: field.index,\n      tableId: field.tableId,\n      type: 'table',\n      currentIndex: currentIndex\n    };\n    setNewField(updatedField); // Firebase update\n\n    databaseUpdate(updatedField);\n  };\n\n  var onNewRowAdd = function onNewRowAdd() {\n    var newArray = _toConsumableArray(newField.rows);\n\n    console.log(newArray);\n    var rowArray = [];\n    newField.headRows.map(function (headRow) {\n      return rowArray.push('');\n    });\n    newArray.push({\n      row: rowArray\n    });\n    var updatedField = {\n      headRows: field.headRows,\n      rows: newArray,\n      index: field.index,\n      tableId: field.tableId,\n      type: 'table',\n      currentIndex: currentIndex\n    };\n    setNewField(updatedField); // If empty, won't be updated to firebase\n\n    databaseUpdate(updatedField);\n  };\n\n  var onNewRowAboveAdd = function onNewRowAboveAdd() {\n    var newArray = _toConsumableArray(newField.rows);\n\n    var rowArray = [];\n    newField.headRows.map(function (headRow) {\n      return rowArray.push('');\n    });\n    newArray.unshift({\n      row: rowArray\n    });\n    var updatedField = {\n      headRows: field.headRows,\n      rows: newArray,\n      index: field.index,\n      tableId: field.tableId,\n      type: 'table',\n      currentIndex: currentIndex\n    };\n    setNewField(updatedField); // If empty, won't be updated to firebase\n\n    databaseUpdate(updatedField);\n  };\n\n  var onNewColumnAdd = function onNewColumnAdd() {\n    var newArrayRows = _toConsumableArray(newField.rows);\n\n    newArrayRows.map(function (row) {\n      console.log(row);\n      row.row.push('');\n    });\n\n    var newArrayHeadRows = _toConsumableArray(newField.headRows);\n\n    newArrayHeadRows.push('');\n    var updatedField = {\n      headRows: newArrayHeadRows,\n      rows: newArrayRows,\n      index: field.index,\n      tableId: field.tableId,\n      type: 'table',\n      currentIndex: currentIndex\n    };\n    setNewField(updatedField); // Firebase update\n\n    databaseUpdate(updatedField);\n  };\n\n  var onNewColumnLeftAdd = function onNewColumnLeftAdd() {\n    var newArrayRows = _toConsumableArray(newField.rows);\n\n    newArrayRows.map(function (row) {\n      row.row.unshift('');\n    });\n\n    var newArrayHeadRows = _toConsumableArray(newField.headRows);\n\n    newArrayHeadRows.unshift('');\n    var updatedField = {\n      headRows: newArrayHeadRows,\n      rows: newArrayRows,\n      index: field.index,\n      tableId: field.tableId,\n      type: 'table',\n      currentIndex: currentIndex\n    };\n    setNewField(updatedField); // Firebase update\n\n    databaseUpdate(updatedField);\n  };\n\n  var onRowDelete = function onRowDelete() {\n    var newArray = _toConsumableArray(newField.rows);\n\n    newArray.pop();\n    var updatedField = {\n      headRows: field.headRows,\n      rows: newArray,\n      index: field.index,\n      tableId: field.tableId,\n      type: 'table',\n      currentIndex: currentIndex\n    };\n    setNewField(updatedField); // If empty, won't be updated to firebase\n\n    databaseUpdate(updatedField);\n  };\n\n  var onRowAboveDelete = function onRowAboveDelete() {\n    var newArray = _toConsumableArray(newField.rows);\n\n    newArray.shift();\n    var updatedField = {\n      headRows: field.headRows,\n      rows: newArray,\n      index: field.index,\n      tableId: field.tableId,\n      type: 'table',\n      currentIndex: currentIndex\n    };\n    setNewField(updatedField); // If empty, won't be updated to firebase\n\n    databaseUpdate(updatedField);\n  };\n\n  var onColumnDelete = function onColumnDelete() {\n    var newArrayRows = _toConsumableArray(newField.rows);\n\n    newArrayRows.map(function (row) {\n      row.row.pop();\n    });\n\n    var newArrayHeadRows = _toConsumableArray(newField.headRows);\n\n    newArrayHeadRows.pop();\n    var updatedField = {\n      headRows: newArrayHeadRows,\n      rows: newArrayRows,\n      index: field.index,\n      tableId: field.tableId,\n      type: 'table',\n      currentIndex: currentIndex\n    };\n    setNewField(updatedField); // Firebase update\n\n    databaseUpdate(updatedField);\n  };\n\n  var onColumnLeftDelete = function onColumnLeftDelete() {\n    var newArrayRows = _toConsumableArray(newField.rows);\n\n    newArrayRows.map(function (row) {\n      row.row.shift();\n    });\n\n    var newArrayHeadRows = _toConsumableArray(newField.headRows);\n\n    newArrayHeadRows.shift();\n    var updatedField = {\n      headRows: newArrayHeadRows,\n      rows: newArrayRows,\n      index: field.index,\n      tableId: field.tableId,\n      type: 'table',\n      currentIndex: currentIndex\n    };\n    setNewField(updatedField); // Firebase update\n\n    databaseUpdate(updatedField);\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", _objectSpread(_objectSpread({\n    ref: provided.innerRef\n  }, provided.draggableProps), {}, {\n    className: \"w-full grid grid-cols-12fr justify-items-center items-center mt-6\",\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      id: \"\".concat(field.index, \"container\"),\n      className: \"col-start-2 col-end-12 relative flex flex-col h-full w-full flex px-8 py-8 rounded-2xl bg-white dark:bg-background\",\n      children: [/*#__PURE__*/_jsxs(\"table\", {\n        className: \"table-element\",\n        children: [/*#__PURE__*/_jsx(\"thead\", {\n          children: /*#__PURE__*/_jsx(\"tr\", {\n            children: newField && newField.headRows.map(function (row, headRowIndex) {\n              return /*#__PURE__*/_jsx(\"th\", {\n                children: /*#__PURE__*/_jsx(\"input\", {\n                  className: \"w-full bg-primary text-background focus:outline-none\",\n                  value: row,\n                  onChange: function onChange(e) {\n                    return onHeadRowDataChange(e.target.value, headRowIndex);\n                  }\n                })\n              });\n            })\n          })\n        }), /*#__PURE__*/_jsx(\"tbody\", {\n          children: newField && newField.rows.map(function (row, rowIndex) {\n            return /*#__PURE__*/_jsx(\"tr\", {\n              children: row.row.map(function (rowData, rowDataIndex) {\n                return /*#__PURE__*/_jsx(\"td\", {\n                  children: /*#__PURE__*/_jsx(\"input\", {\n                    className: \"w-full bg-white focus:outline-none border-l border-primarydark pl-1\",\n                    value: rowData,\n                    onChange: function onChange(e) {\n                      return onRowDataChange(e.target.value, rowIndex, rowDataIndex);\n                    }\n                  })\n                });\n              })\n            });\n          })\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        id: \"\".concat(field.index, \"table\"),\n        className: \"w-full overflow-hidden h-0 flex justify-between items-center gap-4\",\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: \"grid grid-flow-row grid-rows-2fr h-full\",\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: \"flex\",\n            children: [/*#__PURE__*/_jsx(\"img\", {\n              onClick: onNewRowAdd,\n              className: \"cursor-pointer\",\n              src: \"/table/row-add.svg\",\n              height: 22,\n              width: 22\n            }), /*#__PURE__*/_jsx(\"img\", {\n              onClick: onRowDelete,\n              className: \"cursor-pointer ml-2\",\n              src: \"/table/remove1.svg\",\n              height: 26,\n              width: 26\n            })]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"flex\",\n            children: [/*#__PURE__*/_jsx(\"img\", {\n              onClick: onNewRowAboveAdd,\n              className: \"cursor-pointer\",\n              src: \"/table/row-add-above.svg\",\n              height: 22,\n              width: 22\n            }), /*#__PURE__*/_jsx(\"img\", {\n              onClick: onRowAboveDelete,\n              className: \"cursor-pointer ml-2\",\n              src: \"/table/remove1.svg\",\n              height: 26,\n              width: 26\n            })]\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"grid grid-flow-row grid-rows-2fr h-full\",\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: \"flex\",\n            children: [/*#__PURE__*/_jsx(\"img\", {\n              onClick: onNewColumnAdd,\n              className: \"cursor-pointer mr-2\",\n              src: \"/table/column-add.svg\",\n              height: 22,\n              width: 22\n            }), /*#__PURE__*/_jsx(\"img\", {\n              onClick: onColumnDelete,\n              className: \"cursor-pointer\",\n              src: \"/table/remove1.svg\",\n              height: 26,\n              width: 26\n            })]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"flex\",\n            children: [/*#__PURE__*/_jsx(\"img\", {\n              onClick: onNewColumnLeftAdd,\n              className: \"cursor-pointer mr-2\",\n              src: \"/table/column-add-left.svg\",\n              height: 22,\n              width: 22\n            }), /*#__PURE__*/_jsx(\"img\", {\n              onClick: onColumnLeftDelete,\n              className: \"cursor-pointer\",\n              src: \"/table/remove1.svg\",\n              height: 26,\n              width: 26\n            })]\n          })]\n        })]\n      })]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"col-start-12 col-end-13 justify-self-center self-start flex flex-col flex-wrap gap-2\",\n      children: [/*#__PURE__*/_jsx(Image, {\n        onClick: function onClick() {\n          return deleteField(field.index);\n        },\n        className: \"cursor-pointer\",\n        src: \"/plan-bar/exit4.svg\",\n        height: 36,\n        width: 36\n      }), /*#__PURE__*/_jsx(Image, _objectSpread(_objectSpread({}, provided.dragHandleProps), {}, {\n        className: \"cursor-pointer mt-2\",\n        src: \"/plan-bar/drag2.svg\",\n        height: 36,\n        width: 36\n      }))]\n    })]\n  }));\n};\n\nexport default TableElement;","map":null,"metadata":{},"sourceType":"module"}